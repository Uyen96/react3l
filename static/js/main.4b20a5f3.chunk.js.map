{"version":3,"sources":["components/App/App.tsx","components/AppLoading/AppLoading.tsx","core/config/global.ts","config/i18next.ts","config/route-consts.ts","core/config/consts.ts","config/consts.ts","core/helpers/debounce.ts","core/helpers/string.ts","core/helpers/url.ts","core/helpers/view.ts","core/helpers/json.ts","config/menu.ts","layouts/DefaultLayout/DefaultLayout.tsx","components/CardTitle/CardTitle.tsx","core/models/Cloneable.ts","core/models/Model.ts","core/models/Search.ts","core/hooks/useChangeHandlers.ts","core/hooks/useContentTable.ts","core/hooks/useDefaultList.ts","core/hooks/useDetail.ts","core/hooks/useEnumList.ts","core/hooks/useFilter.ts","core/hooks/useMaster.ts","core/hooks/useQuery.ts","core/hooks/usePreloadList.ts","core/hooks/useSelect.ts","components/Select/Select.tsx","core/helpers/form.ts","hooks/useDeleteHandler.ts","core/filters/Filter.ts","core/filters/GuidFilter.ts","core/filters/IdFilter.ts","core/filters/StringFilter.ts","core/filters/NumberFilter.ts","core/filters/DateFilter.ts","hooks/useLocalTable.ts","hooks/useMasterTable.ts","components/InputNumber/InputNumber.tsx","components/NumberRange/NumberRange.tsx","components/AdvancedNumberFilter/AdvancedNumberFilter.tsx","components/AdvancedStringFilter/AdvancedStringFilter.tsx","models/CollectionContentSearch.ts","views/CollectionView/CollectionDetail/CollectionContentTable/CollectionContentTable.tsx","config/api-consts.ts","core/repositories/Repository.ts","core/helpers/http.ts","models/Brand.ts","models/ImageFile.ts","models/Category.ts","models/MerchantAddress.ts","models/MerchantContact.ts","models/MerchantStatus.ts","models/Merchant.ts","models/ProductStatus.ts","models/ProductType.ts","models/Product.ts","models/CollectionContent.ts","models/CollectionStatus.ts","models/Collection.ts","models/CollectionStatusSearch.ts","views/CollectionView/CollectionDetail/CollectionDetailRepository.ts","views/CollectionView/CollectionDetail/CollectionDetail.tsx","components/AdvancedDateFilter/AdvancedDateFilter.tsx","components/AdvancedIdFilter/AdvancedIdFilter.tsx","models/CollectionSearch.ts","views/CollectionView/CollectionMaster/CollectionMasterRepository.ts","views/CollectionView/CollectionMaster/CollectionMaster.tsx","views/CollectionView/CollectionView.tsx","models/MerchantSearch.ts","models/ProductStatusSearch.ts","models/ProductTypeSearch.ts","views/ProductView/ProductDetail/ProductDetailRepository.ts","views/ProductView/ProductDetail/ProductDetail.tsx","models/ProductSearch.ts","views/ProductView/ProductMaster/ProductMasterRepository.ts","views/ProductView/ProductMaster/ProductMaster.tsx","views/ProductView/ProductView.tsx","config/routes.tsx","service-worker.ts","index.tsx","core/helpers/i18next.ts"],"names":["App","props","routes","renderRoutes","AppLoading","useGlobal","loading","setLoading","children","React","useEffect","spinning","initialGlobalState","language","fallbackLanguage","i18nextConfig","resources","lng","fallbackLng","ns","defaultNS","nsSeparator","keySeparator","interpolation","escapeValue","nestingSuffixEscaped","prefix","suffix","COLLECTION_ROUTE","PRODUCT_ROUTE","MASTER_KEYS","index","actions","formItemLayout","labelCol","xs","span","sm","wrapperCol","DEFAULT_TAKE","DATE_FORMAT","process","parseInt","INPUT_DEBOUNCE_TIME","BASE_URL","window","location","origin","COLUMN_WIDTH","debounce","tFunction","lodashDebounce","withTableFilterSuffix","str","url","join","renderMasterIndex","pagination","current","pageSize","unflatten","jsonTable","result","Object","keys","forEach","key","namespaces","split","lastIndex","length","namespace","hasKey","hasOwnProperty","isLastIndex","sort","json","menu","title","matIcon","path","Header","Layout","Sider","Content","Footer","SubMenu","Menu","DefaultLayout","route","className","contentClassName","headerClassName","mainClassName","useTranslation","translate","classNames","theme","mode","renderMenu","map","item","Fragment","to","activeClassName","exact","role","icon","type","defaultProps","withRouter","CardTitle","onBack","onNext","htmlType","onClick","Cloneable","model","instance","assign","Model","errors","Search","skip","take","orderBy","orderType","search","toUpperCase","startsWith","undefined","field","sorter","order","useChangeHandlers","setModel","handleSetInputValue","useCallback","value","clone","handleDebounceInputValue","handleChangeSimpleField","event","target","handleUpdateDateField","moment","id","t","useContentTable","useMemo","v4","setValue","v","handleDelete","newValue","filter","handleAdd","newContent","Array","useDefaultList","reference","useDetail","baseRoute","getDetail","saveDetail","onSavingError","useState","setT","useParams","isDetail","history","useHistory","handleGoBack","push","handleSave","a","async","newT","then","finally","useEnumList","list","onError","enums","setEnums","catch","useFilter","setSearch","useMaster","masterList","masterCount","setList","total","setTotal","handleEdit","toString","handleReset","newSearch","entries","filterKey","handleFilter","Promise","all","stringifySearch","o","filterValue","format","QueryString","stringify","flatten","parentKey","combinedKey","useQuery","defaultTSearch","setTSearch","useLocation","pathname","defaultSearch","queryString","parse","setOrderType","isIdFilter","endsWith","k","match","Date","parseSearch","newTSearch","replace","usePreloadList","getList","useSelect","defaultList","searchField","handleError","Option","AntSelect","Select","forwardRef","ref","onSearchError","allowClear","onChange","defaultValue","render","handleLoadList","handleSearch","handleToggle","visible","handleChange","option","onDropdownVisibleChange","showSearch","onSearch","data-content","name","hasError","DEFAULT_SUCCESS_MESSAGE","DEFAULT_FAILURE_MESSAGE","DEFAULT_TITLE_MESSAGE","DEFAULT_CONTENT_MESSAGE","useDeleteHandler","onDelete","onSetLoading","onSuccess","onCancel","Modal","confirm","content","okType","onOk","message","info","error","response","data","Filter","this","GuidFilter","equal","notEqual","in","notIn","IdFilter","StringFilter","startWith","notStartWith","endWith","notEndWith","contain","notContain","NumberFilter","greater","greaterEqual","less","lessEqual","range","DateFilter","defaultFilterHandler","indexOf","toDate","getTime","minValue","maxValue","minTimeValue","maxTimeValue","comparisonValue","includes","useMasterTable","getOrderType","handleTableChange","newPagination","filters","newSorter","formatter","x","parseFloat","Number","isNaN","parser","toLocaleString","InputNumber","restProps","useRef","debouncedHandleChange","allowNegative","onlyInteger","step","NumberRange","handleChangeMinValue","handleChangeMaxValue","placeholder","types","AdvancedNumberFilter","defaultType","handleChangeRange","numberFilterRange","AdvancedStringFilter","inputType","setType","createRef","handleSubmitChange","input","handleCheckClear","handleChangeType","addonBefore","onPressEnter","CollectionContentSearch","collectionId","priority","productId","columnWidth","collectionContentType","CollectionContentTable","collectionContents","filterHandler","columnKey","column","dataSource","getOrderTypeForTable","Hooks","columns","width","dataIndex","sortOrder","collectionContent","Item","validateStatus","help","bordered","tableLayout","size","footer","API_COLLECTION_MASTER_ROUTE","API_PRODUCT_MASTER_ROUTE","API_PRODUCT_DETAIL_ROUTE","Repository","config","requestInterceptor","responseInterceptor","http","axios","create","interceptors","request","use","createHttpService","baseURL","defaults","Brand","slug","disabled","description","categories","imageFiles","brand","ImageFile","thumbUrl","originUrl","brands","products","imageFile","Category","pathId","level","parentId","imageId","image","category","MerchantAddress","merchantId","code","address","contact","phone","merchant","merchantAddress","Merchant","MerchantContact","email","note","merchantContact","MerchantStatus","merchantStatus","contactPerson","provinceId","statusId","status","merchantAddresses","merchantContacts","ProductStatus","productStatus","ProductType","productType","Product","typeId","categoryId","brandId","keyFeatures","warrantyPolicy","returnPolicy","expiredDate","conditionOfUse","maximumPurchaseQuantity","firstVariationGroupingName","firstVariationGroupingValue","secondVariationGroupingName","secondVariationGroupingValue","paymentMethods","product","CollectionContent","collection","Collection","CollectionStatus","collectionStatus","start","end","CollectionStatusSearch","get","post","kebabCase","delete","update","save","singleListCollectionStatus","setBaseURL","CollectionDetail","CoreHooks","repository","setCollection","handleUpdateSimpleField","handleUpdateObjectField","statuses","pageTitle","label","AdvancedDateFilter","dateFilterRange","RangePicker","AdvancedIdFilter","CollectionSearch","count","collectionSearch","tableScroll","CollectionMaster","fixed","rowKey","scroll","MerchantSearch","ProductStatusSearch","ProductTypeSearch","productSearch","listProductType","singleListProductStatus","singleListProductType","singleListMerchant","merchantSearch","ProductDetail","setProduct","productTypes","setMerchantSearch","defaultMerchantList","defaultChecked","ProductSearch","singleListBrand","brandSearch","singleListCategory","categorySearch","ProductMaster","component","ProductView","CollectionView","Boolean","hostname","i18next","initReactI18next","init","initialI18NextConfig","setGlobal","addResource","changeLanguage","root","document","getElementById","hasChildNodes","ReactDOM","hydrate","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b20a5f3.chunk.js","sourcesContent":["import React from 'react';\nimport {renderRoutes, RouteConfig} from 'react-router-config';\nimport {Switch} from 'react-router-dom';\n\nexport interface AppProps {\n  routes?: RouteConfig[];\n}\n\nfunction App(props: AppProps) {\n  const {routes} = props;\n\n  return (\n    <Switch>\n      {renderRoutes(routes)}\n    </Switch>\n  );\n}\n\nexport default App;\n","import Spin from 'antd/lib/spin';\nimport {GlobalState} from 'core/config/global';\nimport {ReactNode} from 'react';\nimport React, {useGlobal} from 'reactn';\n\ninterface AppLoadingProps {\n  children?: ReactNode | ReactNode[];\n}\n\nfunction AppLoading(props: AppLoadingProps) {\n  const [loading, setLoading] = useGlobal<GlobalState>('loading');\n  const {children} = props;\n\n  React.useEffect(\n    () => {\n      setLoading(false);\n    },\n    [setLoading],\n  );\n\n  return (\n    <Spin spinning={loading as boolean}>\n      {children}\n    </Spin>\n  );\n}\n\nexport default AppLoading;\n","export type LanguageType = 'en' | 'vi';\n\nexport interface GlobalState {\n  language?: LanguageType;\n\n  fallbackLanguage?: LanguageType;\n\n  loading?: boolean;\n}\n\nconst initialGlobalState: GlobalState = {\n  language: 'vi',\n  fallbackLanguage: 'vi',\n  loading: true,\n};\n\nexport default initialGlobalState;\n","import initialGlobalState from 'core/config/global';\nimport {InitOptions} from 'i18next';\n\nconst i18nextConfig: InitOptions = {\n  resources: {},\n  lng: initialGlobalState.language,\n  fallbackLng: initialGlobalState.fallbackLanguage,\n  ns: '',\n  defaultNS: '',\n  nsSeparator: false,\n  keySeparator: '.',\n  interpolation: {\n    escapeValue: false,\n    nestingSuffixEscaped: '.',\n    prefix: '{{',\n    suffix: '}}',\n  },\n};\n\nexport default i18nextConfig;\n","export const ADMINISTRATOR_ROUTE: string = '/administrators';\nexport const BANNER_ROUTE: string = '/banners';\nexport const BRAND_ROUTE: string = '/brands';\nexport const CATEGORY_ROUTE: string = '/categories';\nexport const COLLECTIONCONTENT_ROUTE: string = '/collectionContents';\nexport const COLLECTION_ROUTE: string = '/collections';\nexport const COUPON_ROUTE: string = '/coupons';\nexport const CUSTOMER_ROUTE: string = '/customers';\nexport const DISCOUNT_ROUTE: string = '/discounts';\nexport const DISTRICT_ROUTE: string = '/districts';\nexport const EVOUCHERCONTENT_ROUTE: string = '/eVoucherContents';\nexport const EVOUCHER_ROUTE: string = '/eVouchers';\nexport const IMAGEFILE_ROUTE: string = '/imageFiles';\nexport const ITEM_ROUTE: string = '/items';\nexport const ITEMHISTORY_ROUTE: string = '/itemHistories';\nexport const ITEMVOUCHER_ROUTE: string = '/itemVouchers';\nexport const ITEMVOUCHERSTATUS_ROUTE: string = '/itemVoucherStatuses';\nexport const MAIL_ROUTE: string = '/mails';\nexport const MERCHANTADDRESS_ROUTE: string = '/merchantAddresses';\nexport const MERCHANTCONTACT_ROUTE: string = '/merchantContacts';\nexport const MERCHANT_ROUTE: string = '/merchants';\nexport const NOTIFICATION_ROUTE: string = '/notifications';\nexport const ORDERCONTENT_ROUTE: string = '/orderContents';\nexport const ORDER_ROUTE: string = '/orders';\nexport const PRODUCT_ROUTE: string = '/products';\nexport const PROVINCE_ROUTE: string = '/provinces';\nexport const SHIPPINGADDRESS_ROUTE: string = '/shippingAddresses';\nexport const WARD_ROUTE: string = '/wards';\n\nexport const HOME_ROUTE: string = '/';\n","import {FormProps} from 'antd/lib/form';\nimport {translate} from '../helpers/translate';\n\nexport const MASTER_KEYS: { [key: string]: string } = {\n  index: translate('general.master.index'),\n  actions: translate('general.master.actions'),\n};\n\nexport const DETAIL_KEYS: { [key: string]: string } = {\n  add: 'add',\n};\n\nexport const formItemLayout: FormProps = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 8},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 16},\n  },\n};\n\ninterface SortType {\n  ASC: string;\n\n  DESC: string;\n}\n\nexport const SORT_TYPES: SortType = {\n  ASC: 'ASC',\n  DESC: 'DESC',\n};\n\nexport const DEFAULT_TAKE: number = 10;\n\nexport const BASE_URL: string = process.env.REACT_APP_BASE_URL ?? '';\n\nexport const INPUT_DEBOUNCE_TIME: number = parseInt(process.env.INPUT_DEBOUNCE_TIME, 10) ?? 400;\n\nexport const DATE_FORMAT: string = 'YYYY-MM-DD';\n","export * from 'core/config';\n\nexport const INPUT_DEBOUNCE_TIME: number = 400;\n\nexport const BASE_URL: string = process.env.REACT_APP_BASE_URL ?? window.location.origin;\n\nexport const APP_TITLE: string = process.env.REACT_APP_TITLE ?? '';\n\nexport const COLUMN_WIDTH = {\n  index: 50,\n  checkbox: 50,\n  expand: 50,\n  actions: 100,\n};\n","import {INPUT_DEBOUNCE_TIME} from 'config/consts';\nimport lodashDebounce from 'lodash/debounce';\n\nexport function debounce(tFunction: (...params: any[]) => any) {\n  return lodashDebounce(tFunction, INPUT_DEBOUNCE_TIME);\n}\n","export function withTableFilterSuffix(str: string) {\n  return `${str}-filter`;\n}\n","import {BASE_URL} from 'config/consts';\nimport {join} from 'path';\n\nexport function url(...segments: string[]) {\n  return `${BASE_URL}${join(...segments)}`;\n}\n","import {PaginationProps} from 'antd/lib/pagination';\nimport {DEFAULT_TAKE} from '../config';\nimport {Model} from '../models';\n\nexport function renderMasterIndex<T extends Model>(pagination?: PaginationProps) {\n  return (...[, , index]: [any, T, number]) => {\n    if (pagination) {\n      const {\n        current = 1,\n        pageSize = DEFAULT_TAKE,\n      } = pagination;\n      return index + 1 + (current - 1) * pageSize;\n    }\n    return index + 1;\n  };\n}\n","export interface JSONObject {\n  [key: string]: string | number | boolean | null | undefined | JSONObject;\n}\n\nexport function sort(json: JSONObject) {\n  const result: JSONObject = {};\n  if (json) {\n    Object\n      .keys(json)\n      .sort()\n      .forEach((key: string) => {\n        result[key] = json[key];\n        if (typeof result[key] === 'object') {\n          result[key] = sort(result[key] as JSONObject);\n        }\n      });\n  }\n  return result;\n}\n\nexport function unflatten(jsonTable: { [key: string]: string }): JSONObject {\n  if (jsonTable) {\n    const result: { [key: string]: any } = {};\n    Object\n      .keys(jsonTable)\n      .forEach((key: string) => {\n        const namespaces: string[] = key.split('.');\n        const lastIndex: number = namespaces.length - 1;\n        let current: { [key: string]: any } = result;\n\n        namespaces.forEach((namespace: string, index: number) => {\n          const hasKey: boolean = current.hasOwnProperty(namespace);\n          const isLastIndex = index === lastIndex;\n          if (!hasKey) {\n            if (isLastIndex) {\n              current[namespace] = jsonTable[key];\n            } else {\n              current[namespace] = {};\n            }\n          }\n          if (typeof current[namespace] === 'object') {\n            current = current[namespace];\n          }\n        });\n      });\n    return sort(result);\n  }\n  return jsonTable;\n}\n\nexport function flatten(json: { [key: string]: any }, parentKey: string = '') {\n  if (json) {\n    let result: { [key: string]: string } = {};\n    Object\n      .keys(json)\n      .forEach((key: string) => {\n        const combinedKey: string = parentKey ? `${parentKey}.${key}` : key;\n        if (typeof json[key] !== 'object') {\n          result = {\n            ...result,\n            [combinedKey]: json[key],\n          };\n        } else {\n          result = {\n            ...result,\n            ...flatten(json[key], combinedKey),\n          };\n        }\n      });\n    return result;\n  }\n  return json;\n}\n","import {\n  ADMINISTRATOR_ROUTE,\n  BANNER_ROUTE,\n  BRAND_ROUTE,\n  CATEGORY_ROUTE,\n  COLLECTION_ROUTE,\n  COLLECTIONCONTENT_ROUTE,\n  COUPON_ROUTE,\n  CUSTOMER_ROUTE,\n  DISCOUNT_ROUTE,\n  DISTRICT_ROUTE,\n  EVOUCHER_ROUTE,\n  EVOUCHERCONTENT_ROUTE,\n  IMAGEFILE_ROUTE,\n  ITEM_ROUTE,\n  ITEMHISTORY_ROUTE,\n  ITEMVOUCHER_ROUTE,\n  ITEMVOUCHERSTATUS_ROUTE,\n  MAIL_ROUTE,\n  MERCHANT_ROUTE,\n  MERCHANTADDRESS_ROUTE,\n  MERCHANTCONTACT_ROUTE,\n  NOTIFICATION_ROUTE,\n  ORDER_ROUTE,\n  ORDERCONTENT_ROUTE,\n  PRODUCT_ROUTE,\n  PROVINCE_ROUTE,\n  SHIPPINGADDRESS_ROUTE,\n  WARD_ROUTE,\n} from 'config/route-consts';\nimport {translate} from 'core/helpers';\nimport {RouteConfig} from 'react-router-config';\n\nexport const menu: RouteConfig[] = [\n  {\n    title: translate('menu.administrator'),\n    matIcon: 'location_city',\n    path: ADMINISTRATOR_ROUTE,\n  },\n  {\n    title: translate('menu.banner'),\n    matIcon: 'location_city',\n    path: BANNER_ROUTE,\n  },\n  {\n    title: translate('menu.brand'),\n    matIcon: 'location_city',\n    path: BRAND_ROUTE,\n  },\n  {\n    title: translate('menu.category'),\n    matIcon: 'location_city',\n    path: CATEGORY_ROUTE,\n  },\n  {\n    title: translate('menu.collectionContent'),\n    matIcon: 'location_city',\n    path: COLLECTIONCONTENT_ROUTE,\n  },\n  {\n    title: translate('menu.collection'),\n    matIcon: 'location_city',\n    path: COLLECTION_ROUTE,\n  },\n  {\n    title: translate('menu.coupon'),\n    matIcon: 'location_city',\n    path: COUPON_ROUTE,\n  },\n  {\n    title: translate('menu.customer'),\n    matIcon: 'location_city',\n    path: CUSTOMER_ROUTE,\n  },\n  {\n    title: translate('menu.discount'),\n    matIcon: 'location_city',\n    path: DISCOUNT_ROUTE,\n  },\n  {\n    title: translate('menu.district'),\n    matIcon: 'location_city',\n    path: DISTRICT_ROUTE,\n  },\n  {\n    title: translate('menu.eVoucherContent'),\n    matIcon: 'location_city',\n    path: EVOUCHERCONTENT_ROUTE,\n  },\n  {\n    title: translate('menu.eVoucher'),\n    matIcon: 'location_city',\n    path: EVOUCHER_ROUTE,\n  },\n  {\n    title: translate('menu.imageFile'),\n    matIcon: 'location_city',\n    path: IMAGEFILE_ROUTE,\n  },\n  {\n    title: translate('menu.item'),\n    matIcon: 'location_city',\n    path: ITEM_ROUTE,\n  },\n  {\n    title: translate('menu.itemHistory'),\n    matIcon: 'location_city',\n    path: ITEMHISTORY_ROUTE,\n  },\n  {\n    title: translate('menu.itemVoucher'),\n    matIcon: 'location_city',\n    path: ITEMVOUCHER_ROUTE,\n  },\n  {\n    title: translate('menu.itemVoucherStatus'),\n    matIcon: 'location_city',\n    path: ITEMVOUCHERSTATUS_ROUTE,\n  },\n  {\n    title: translate('menu.mail'),\n    matIcon: 'location_city',\n    path: MAIL_ROUTE,\n  },\n  {\n    title: translate('menu.merchantAddress'),\n    matIcon: 'location_city',\n    path: MERCHANTADDRESS_ROUTE,\n  },\n  {\n    title: translate('menu.merchantContact'),\n    matIcon: 'location_city',\n    path: MERCHANTCONTACT_ROUTE,\n  },\n  {\n    title: translate('menu.merchant'),\n    matIcon: 'location_city',\n    path: MERCHANT_ROUTE,\n  },\n  {\n    title: translate('menu.notification'),\n    matIcon: 'location_city',\n    path: NOTIFICATION_ROUTE,\n  },\n  {\n    title: translate('menu.orderContent'),\n    matIcon: 'location_city',\n    path: ORDERCONTENT_ROUTE,\n  },\n  {\n    title: translate('menu.order'),\n    matIcon: 'location_city',\n    path: ORDER_ROUTE,\n  },\n  {\n    title: translate('menu.product'),\n    matIcon: 'location_city',\n    path: PRODUCT_ROUTE,\n  },\n  {\n    title: translate('menu.province'),\n    matIcon: 'location_city',\n    path: PROVINCE_ROUTE,\n  },\n  {\n    title: translate('menu.shippingAddress'),\n    matIcon: 'location_city',\n    path: SHIPPINGADDRESS_ROUTE,\n  },\n  {\n    title: translate('menu.ward'),\n    matIcon: 'location_city',\n    path: WARD_ROUTE,\n  },\n];\n","import Icon from 'antd/lib/icon';\nimport Layout from 'antd/lib/layout';\nimport Menu from 'antd/lib/menu';\nimport classNames from 'classnames';\nimport {menu} from 'config/menu';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {renderRoutes, RouteConfig, RouteConfigComponentProps} from 'react-router-config';\nimport {NavLink, Switch, withRouter} from 'react-router-dom';\nimport './DefaultLayout.scss';\n\nconst {Header, Sider, Content, Footer} = Layout;\n\nconst {SubMenu} = Menu;\n\nexport interface DefaultLayoutProps extends RouteConfigComponentProps {\n  className?: string;\n\n  headerClassName?: string;\n\n  contentClassName?: string;\n\n  mainClassName?: string;\n\n  title?: string;\n\n  menu?: RouteConfig[];\n}\n\nfunction renderMenu(menu: RouteConfig[], translate: (key: string, data?: any) => string) {\n  return menu.map((item: RouteConfig) => (\n    <React.Fragment key={item.path as string}>\n      <NavLink\n        to={item.path as string}\n        className=\"ant-menu-item\"\n        activeClassName=\"ant-menu-item-selected\"\n        exact={item.exact}\n        role=\"menuitem\"\n      >\n        {item.icon && (\n          <Icon type={item.icon}/>\n        )}\n        {item.matIcon && (\n          <i className=\"material-icons\">{item.matIcon}</i>\n        )}\n        {translate(item.title)}\n      </NavLink>\n      {item?.children && (\n        <SubMenu title={item.title}>\n          {renderMenu(item.children, translate)}\n        </SubMenu>\n      )}\n    </React.Fragment>\n  ));\n}\n\nfunction DefaultLayout(props: DefaultLayoutProps) {\n  const {route, className, contentClassName, headerClassName, mainClassName, menu, title} = props;\n  const [translate] = useTranslation();\n\n  return (\n    <Layout className={classNames('default-layout', className)}>\n      <Header className={headerClassName}>\n        <div className=\"logo\">\n          {title}\n        </div>\n      </Header>\n      <Layout className={mainClassName}>\n        <Sider theme=\"dark\">\n          <Menu mode=\"inline\" theme=\"dark\">\n            {renderMenu(menu, translate)}\n          </Menu>\n        </Sider>\n        <Content className={contentClassName}>\n          <Switch>\n            {renderRoutes(route?.children)}\n          </Switch>\n          <Footer/>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nDefaultLayout.defaultProps = {\n  menu,\n};\n\nexport default withRouter(DefaultLayout);\n","import Button from 'antd/lib/button';\nimport Icon from 'antd/lib/icon';\nimport 'components/CardTitle/CardTitle.scss';\nimport React from 'react';\n\ninterface CardTitleProps {\n  title?: string;\n\n  onBack?: () => void;\n\n  onNext?: () => void;\n}\n\nfunction CardTitle(props: CardTitleProps) {\n  const {title, onBack, onNext} = props;\n\n  return (\n    <div className=\"card-title\">\n      {typeof onBack === 'function' && (\n        <Button type=\"link\" htmlType=\"button\" onClick={onBack}>\n          <Icon type=\"arrow-left\"/>\n        </Button>\n      )}\n      {title}\n      {typeof onNext === 'function' && (\n        <Button type=\"link\" htmlType=\"button\" onClick={onNext}>\n          <Icon type=\"arrow-right\"/>\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default CardTitle;\n","import {PureModelData} from 'core/types';\n\nexport class Cloneable {\n  public static clone<T extends Cloneable>(model?: PureModelData<T>): T {\n    const instance: T = new Cloneable() as T;\n    if (typeof model !== 'undefined' && model !== null) {\n      Object.assign(instance, model);\n    }\n    return instance;\n  }\n}\n","import {ErrorMap} from '../types';\nimport {Cloneable} from './Cloneable';\n\nexport class Model extends Cloneable {\n  public errors?: ErrorMap<Model>;\n\n  public key?: string | number;\n\n  [key: string]: any;\n\n  constructor(model?: Model) {\n    super();\n    if (model !== null && typeof model === 'object') {\n      Object.assign(this, model);\n    }\n  }\n}\n","import {SorterResult} from 'antd/lib/table';\nimport nameof from 'ts-nameof.macro';\nimport {DEFAULT_TAKE, SORT_TYPES} from '../config';\nimport {Cloneable} from './Cloneable';\nimport {Model} from './Model';\n\nexport class Search extends Cloneable {\n  public static setOrderType(search: Search, orderType: string | null | undefined | boolean) {\n    if (typeof orderType === 'undefined') {\n      search.orderType = undefined;\n      return;\n    }\n    if (typeof orderType === 'string') {\n      if (orderType.toUpperCase().startsWith(nameof(SORT_TYPES.ASC))) {\n        search.orderType = nameof(SORT_TYPES.ASC);\n        return;\n      }\n      search.orderType = nameof(SORT_TYPES.DESC);\n      return;\n    }\n    if (typeof orderType === 'boolean') {\n      if (orderType) {\n        return nameof(SORT_TYPES.ASC);\n      }\n      search.orderType = nameof(SORT_TYPES.DESC);\n      return nameof(SORT_TYPES.DESC);\n    }\n    search.orderType = undefined;\n  }\n\n  public static getOrderType(search: Search) {\n    if (search.orderType) {\n      if (search.orderType === nameof(SORT_TYPES.ASC)) {\n        return 'ascend';\n      }\n      return 'descend';\n    }\n    return undefined;\n  }\n\n  public static getOrderTypeForTable<T extends Model>(field: string, sorter: SorterResult<T>) {\n    return (field === sorter.field) ? sorter.order : undefined;\n  }\n\n  public skip?: number = 0;\n\n  public take?: number = DEFAULT_TAKE;\n\n  public orderBy?: string;\n\n  public orderType?: string;\n}\n","import {Moment} from 'moment';\nimport React from 'react';\nimport {debounce} from '../helpers';\nimport {Model} from '../models';\n\ntype ChangeHandlerResult = [\n  (field: string) => (value) => void,\n  (field: string) => (value) => void,\n  (field: string) => (value) => void,\n];\n\nexport function useChangeHandlers<T extends Model>(model?: T, setModel?: (t: T) => void): ChangeHandlerResult {\n  const handleSetInputValue = React.useCallback(\n    (field: string, value: string | number | boolean | null | undefined) => {\n      setModel(Model.clone<T>({\n        ...model,\n        [field]: value,\n      }));\n    },\n    [model, setModel],\n  );\n\n  const handleDebounceInputValue = React.useCallback(\n    debounce(handleSetInputValue),\n    [handleSetInputValue],\n  );\n\n  const handleChangeSimpleField = React.useCallback(\n    (field: string, debounce: boolean = false) => {\n      return (event: React.ChangeEvent<HTMLInputElement> | number | string | boolean) => {\n        if (typeof event === 'object') {\n          if ('target' in event) {\n            if (debounce) {\n              return handleDebounceInputValue(field, event.target.value);\n            }\n            return handleSetInputValue(field, event.target.value);\n          }\n          if ('format' in event) {\n            setModel(Model.clone<T>({\n              ...model,\n              [field]: event,\n            }));\n          }\n        }\n        if (debounce) {\n          return handleDebounceInputValue(field, event);\n        }\n        return handleSetInputValue(field, event);\n      };\n    },\n    [handleDebounceInputValue, handleSetInputValue, model, setModel],\n  );\n\n  const handleUpdateDateField = React.useCallback(\n    (field: string) => {\n      return (moment: Moment) => {\n        setModel(Model.clone<T>({\n          ...model,\n          [field]: moment,\n        }));\n      };\n    },\n    [model, setModel],\n  );\n\n  const handleChangeObjectField = React.useCallback(\n    (field: string) => {\n      return (id?: number | string | null, t?: T) => {\n        setModel(Model.clone<T>({\n          ...model,\n          [field]: t,\n          [`${field}Id`]: id,\n        }));\n      };\n    },\n    [model, setModel],\n  );\n\n  return [\n    handleChangeSimpleField,\n    handleChangeObjectField,\n    handleUpdateDateField,\n  ];\n}\n","import React from 'react';\nimport v4 from 'uuid/v4';\nimport {Model} from '../models';\n\nexport interface ContentTableProps<T extends Model, TContent extends Model> {\n  model: T;\n\n  setModel: (t: T) => void;\n\n  field: string;\n\n  onChange?: (v: TContent[]) => void;\n}\n\ntype ContentTableHookResult<TContent extends Model> = [\n  TContent[],\n  (v: TContent[]) => void,\n  () => void,\n  (id: number) => () => void,\n];\n\nexport function useContentTable<T extends Model, TContent extends Model>(\n  model: T,\n  setModel: (t: T) => void,\n  field: string,\n): ContentTableHookResult<TContent> {\n  const value: TContent[] = React.useMemo(\n    () => {\n      if (model[field]) {\n        model[field]?.forEach((t: T) => {\n          if (!t?.key) {\n            if (t?.id) {\n              t.key = t.id;\n            } else {\n              t.key = v4();\n            }\n          }\n        });\n        return model[field];\n      }\n      return [];\n    },\n    [field, model],\n  );\n\n  const setValue = React.useCallback(\n    (v: TContent[]) => {\n      setModel(Model.clone<T>({\n        ...model,\n        [field]: v,\n      }));\n    },\n    [field, model, setModel],\n  );\n\n  const handleDelete = React.useCallback(\n    (id: number) => {\n      return () => {\n        const newValue: TContent[] = value.filter((v: TContent) => v.id !== id);\n        setValue(newValue);\n      };\n    },\n    [value, setValue],\n  );\n\n  const handleAdd = React.useCallback(\n    () => {\n      const newContent: TContent = new Model() as TContent;\n      newContent.key = v4();\n      if (value instanceof Array) {\n        setValue([\n          ...value,\n          newContent,\n        ]);\n      } else {\n        setValue([\n          newContent,\n        ]);\n      }\n    },\n    [setValue, value],\n  );\n\n  return [value, setValue, handleAdd, handleDelete];\n}\n","import {Model} from 'core/models';\nimport React from 'react';\n\nexport function useDefaultList<T1 extends Model, T2 extends Model>(model: T1, field: string): T2[] {\n  return React.useMemo(\n    () => {\n      const reference: T2 = model[field];\n      if (reference) {\n        return [reference];\n      }\n      return [];\n    },\n    [field, model],\n  );\n}\n","import {DETAIL_KEYS} from 'config/consts';\nimport {join} from 'path';\nimport React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport nameof from 'ts-nameof.macro';\nimport {Model} from '../models';\n\nexport type DetailHookResult<T extends Model> = [\n  T,\n  (t: T) => void,\n  boolean,\n  (loading: boolean) => void,\n  boolean,\n  () => void,\n  () => void,\n];\n\ninterface DetailParams {\n  id?: string;\n}\n\n/**\n *\n * @param {string} baseRoute\n * @param {(t?: T) => Promise<T>} getDetail\n * @param {(t?: T) => Promise<T>} saveDetail\n * @param {(error: Error) => void} onSavingError\n * @returns {DetailHookResult<T>}\n */\nexport function useDetail<T extends Model>(\n  baseRoute: string,\n  getDetail?: (t?: T) => Promise<T>,\n  saveDetail?: (t?: T) => Promise<T>,\n  onSavingError?: (error: Error) => void,\n): DetailHookResult<T> {\n  const [t, setT] = React.useState<T>(new Model() as T);\n  const {id} = useParams<DetailParams>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const isDetail: boolean = id !== nameof(DETAIL_KEYS.add);\n  const history = useHistory();\n\n  const handleGoBack = React.useCallback(\n    () => {\n      history.push(join(baseRoute));\n    },\n    [baseRoute, history],\n  );\n\n  const handleSave = React.useCallback(\n    async () => {\n      setLoading(true);\n      try {\n        const newT: T = await saveDetail(t);\n        if (t?.id) {\n          setT(newT);\n        } else {\n          history.push(join(baseRoute, newT.id));\n        }\n      } catch (error) {\n        if (onSavingError) {\n          onSavingError(error);\n        }\n      }\n      setLoading(false);\n    },\n    [baseRoute, history, onSavingError, saveDetail, t],\n  );\n\n  React.useEffect(\n    () => {\n      if (!!getDetail && isDetail) {\n        setLoading(true);\n        const t: T = Model.clone<Model>({\n          id,\n        }) as T;\n        getDetail(t)\n          .then((t: T) => {\n            setT(t);\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      }\n    },\n    [getDetail, id, isDetail],\n  );\n\n  return [t, setT, loading, setLoading, isDetail, handleGoBack, handleSave];\n}\n","import React from 'reactn';\nimport {Model} from '../models';\n\nexport function useEnumList<T extends Model>(\n  list: () => Promise<T[]>,\n  onError?: (error: Error) => void,\n): [T[], (list: T[]) => void, boolean] {\n  const [enums, setEnums] = React.useState<T[]>([]);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  React.useEffect(\n    () => {\n      setLoading(true);\n      list()\n        .then((enums: T[]) => {\n          setEnums(enums);\n        })\n        .catch(onError)\n        .finally(\n          () => {\n            setLoading(false);\n          },\n        );\n    },\n    [list, onError],\n  );\n  return [enums, setEnums, loading];\n}\n","import React from 'react';\nimport {Search} from '../models';\n\nexport type FilterHookResult<TSearch extends Search, P extends keyof TSearch> = [\n  TSearch[P],\n  (filter: TSearch[P]) => void,\n];\n\nexport function useFilter<TSearch extends Search, P extends keyof TSearch>(\n  search: TSearch,\n  setSearch: (search: TSearch) => void,\n  field: P,\n): FilterHookResult<TSearch, P> {\n  const filter: TSearch[P] = search[field];\n\n  const setFilter = React.useCallback(\n    (filter: TSearch[P]) => {\n      setSearch(Search.clone<TSearch>({\n        ...search,\n        [field]: filter,\n      }));\n    },\n    [field, search, setSearch],\n  );\n\n  return [filter, setFilter];\n}\n","import {DEFAULT_TAKE, DETAIL_KEYS} from 'config/consts';\nimport {Filter} from 'core/filters';\nimport {join} from 'path';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport nameof from 'ts-nameof.macro';\nimport {Model, Search} from '../models';\n\nexport type MasterHookResult<T extends Model> = [\n  T[],\n  number,\n  boolean,\n  (loading: boolean) => void,\n  () => void,\n  () => void,\n  (id: number) => () => void,\n  (field: string) => (filter: Filter) => void,\n];\n\n/**\n *\n * @param {string} baseRoute\n * @param {(tSearch?: TSearch) => Promise<T[]>} masterList\n * @param {(tSearch?: TSearch) => Promise<number>} masterCount\n * @param {TSearch} search\n * @param {(search: TSearch) => void} setSearch\n * @returns {MasterHookResult<T, TSearch>}\n */\nexport function useMaster<T extends Model, TSearch extends Search>(\n  baseRoute: string,\n  masterList: (tSearch?: TSearch) => Promise<T[]>,\n  masterCount: (tSearch?: TSearch) => Promise<number>,\n  search: TSearch,\n  setSearch: (search: TSearch) => void,\n): MasterHookResult<T> {\n  const [list, setList] = React.useState<T[]>([]);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [total, setTotal] = React.useState<number>(0);\n  const history = useHistory();\n\n  const handleAdd = React.useCallback(\n    () => {\n      history.push(join(baseRoute, nameof(DETAIL_KEYS.add)));\n    },\n    [history, baseRoute],\n  );\n\n  const handleEdit = React.useCallback(\n    (id: number) => {\n      return () => {\n        history.push(join(baseRoute, id.toString()));\n      };\n    },\n    [baseRoute, history],\n  );\n\n  const handleReset = React.useCallback(\n    () => {\n      const newSearch: TSearch = Search.clone<TSearch>(search);\n      Object\n        .entries(newSearch)\n        .forEach(([key, value]) => {\n          switch (key) {\n            case nameof(newSearch.skip):\n              newSearch.skip = 0;\n              break;\n\n            case nameof(newSearch.take):\n              newSearch.take = DEFAULT_TAKE;\n              break;\n\n            case nameof(newSearch.orderBy):\n              newSearch.orderBy = undefined;\n              break;\n\n            case nameof(newSearch.orderType):\n              newSearch.orderBy = undefined;\n              break;\n\n            default:\n              if (typeof value === 'object' && value !== null) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey]) => {\n                    delete value[filterKey];\n                  });\n              }\n              break;\n          }\n        });\n      setSearch(newSearch);\n    },\n    [search, setSearch],\n  );\n\n  const handleFilter = React.useCallback(\n    (field: string) => {\n      return (filter: Filter) => {\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          [field]: filter,\n        }));\n      };\n    },\n    [search, setSearch],\n  );\n\n  React.useEffect(\n    () => {\n      setLoading(true);\n      Promise.all([\n        masterList(search),\n        masterCount(search),\n      ])\n        .then(([list, total]: [T[], number]) => {\n          setList(list);\n          setTotal(total);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    },\n    [masterCount, masterList, search],\n  );\n\n  return [\n    list,\n    total,\n    loading,\n    setLoading,\n    handleAdd,\n    handleReset,\n    handleEdit,\n    handleFilter,\n  ];\n}\n","import {flatten, unflatten} from 'core/helpers';\nimport {JSONObject} from 'core/helpers/json';\nimport moment from 'moment';\nimport QueryString from 'query-string';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport nameof from 'ts-nameof.macro';\nimport {DATE_FORMAT, DEFAULT_TAKE} from '../config';\nimport {Search} from '../models';\n\n/**\n * Sync search entity with query string\n *\n * @param search\n */\nfunction parseSearch<TSearch extends Search>(search: string, defaultSearch: TSearch): TSearch {\n  const queryString: JSONObject = unflatten(QueryString.parse(search) as { [key: string]: string });\n\n  Object\n    .entries(queryString)\n    .forEach(([key, value]) => {\n      switch (key) {\n        case nameof(defaultSearch.skip):\n          if (typeof value === 'string') {\n            defaultSearch.skip = parseInt(value, 10) ?? 0;\n          }\n          break;\n\n        case nameof(defaultSearch.take):\n          if (typeof value === 'string') {\n            defaultSearch.take = parseInt(value, 10) ?? DEFAULT_TAKE;\n          }\n          break;\n\n        case nameof(defaultSearch.orderType):\n          if (typeof value === 'string') {\n            Search.setOrderType(defaultSearch, value);\n          }\n          break;\n\n        default:\n          if (typeof value === 'object' && value !== null) {\n            const isIdFilter: boolean = key.endsWith('Id') ?? key === 'id';\n            Object\n              .entries(value)\n              .forEach(([k, v]) => {\n                if (typeof v === 'string') {\n                  if (isIdFilter) {\n                    if (v.match(/^[0-9]+$/g)) {\n                      defaultSearch[key][k] = parseInt(v as string, 10);\n                      return;\n                    }\n                  }\n                  if (v.match(/^(20|19)[0-9]{2}-[0-9]{2}-[0-9]{2}/)) {\n                    defaultSearch[key][k] = moment(new Date(v));\n                    return;\n                  }\n                  defaultSearch[key][k] = v;\n                  return;\n                }\n                defaultSearch[key][k] = v;\n              });\n          }\n          break;\n      }\n    });\n  return defaultSearch;\n}\n\nexport function isMomentObject(o: any) {\n  return (typeof o === 'object' && o !== null && '_isAMomentObject' in o && 'format' in o);\n}\n\nexport function stringifySearch<TSearch extends Search>(search: TSearch) {\n  if (search) {\n    const result: { [key: string]: string | number | boolean | null } = {};\n    Object\n      .entries(search)\n      .forEach(([key, value]) => {\n        if (typeof value === 'object' && value !== null) {\n          Object\n            .entries(value)\n            .forEach(([filterKey, filterValue]) => {\n              if (typeof filterValue === 'object' && filterValue !== null) {\n                if (isMomentObject(filterValue)) {\n                  result[`${key}.${filterKey}`] = moment(filterValue).format(DATE_FORMAT);\n                } else {\n                  result[`${key}.${filterKey}`] = filterValue as any;\n                }\n              }\n            });\n          return;\n        }\n        result[key] = value;\n      });\n    return QueryString.stringify(flatten(result));\n  }\n  return '';\n}\n\nexport function useQuery<TSearch extends Search>(defaultTSearch: TSearch, setTSearch: (tSearch: TSearch) => void): [TSearch, (tSearch: TSearch) => void] {\n  const {pathname, search} = useLocation();\n  const history = useHistory();\n\n  const tSearch = React.useMemo(\n    () => {\n      return Search.clone<TSearch>({\n        ...parseSearch<TSearch>(search, defaultTSearch),\n      });\n    },\n    [defaultTSearch, search],\n  );\n\n  const setTSearchWithQueryString = React.useCallback(\n    (newTSearch: TSearch) => {\n      setTSearch(newTSearch);\n      history.replace({\n        pathname,\n        search: stringifySearch<TSearch>(newTSearch),\n      });\n    },\n    [history, pathname, setTSearch],\n  );\n\n  return [tSearch, setTSearchWithQueryString];\n}\n","import {IdFilter} from 'core/filters';\nimport {Model, Search} from 'core/models';\nimport React from 'react';\n\nexport function usePreloadList<T extends Model, TSearch extends Search>(\n  getList: (search: TSearch) => Promise<T[]>,\n  id: IdFilter,\n): T[] {\n  const [list, setList] = React.useState<T[]>([]);\n\n  React.useEffect(\n    () => {\n      getList({id, ...new Search() as TSearch})\n        .then(setList);\n    },\n    [getList, id],\n  );\n\n  return list;\n}\n","import {debounce} from 'core/helpers';\nimport {Model, Search} from 'core/models';\nimport React from 'react';\n\ntype SelectHookResult<T extends Model> = [\n  T[],\n  () => Promise<void>,\n  boolean,\n  () => (value: string) => void,\n];\n\nexport function useSelect<T extends Model, TSearch extends Search = Search>(\n  defaultList: T[],\n  getList?: (tSearch?: TSearch) => Promise<T[]>,\n  search?: TSearch,\n  setSearch?: (search: TSearch) => void,\n  searchField?: string,\n  handleError?: (error: Error) => void,\n): SelectHookResult<T> {\n  const [list, setList] = React.useState<T[]>(defaultList ?? []);\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  React.useEffect(\n    () => {\n      if (defaultList) {\n        setList(defaultList);\n      }\n    },\n    [defaultList],\n  );\n\n  const handleLoadList = React.useCallback(\n    async () => {\n      try {\n        setLoading(true);\n        setList(await getList(search));\n      } catch (error) {\n        handleError(error);\n      }\n      setLoading(false);\n    },\n    [getList, handleError, search],\n  );\n\n  const handleSearch = React.useMemo(\n    () => debounce((value: string) => {\n      setSearch(Search.clone<TSearch>({\n        ...search,\n        [searchField]: value,\n      }));\n    }),\n    [search, searchField, setSearch],\n  );\n\n  return [list, handleLoadList, loading, handleSearch];\n}\n","import AntSelect, {OptionProps} from 'antd/lib/select';\nimport {AxiosError} from 'axios';\nimport classNames from 'classnames';\nimport {useSelect} from 'core/hooks';\nimport {Model, Search} from 'core/models';\nimport React, {ReactElement, Ref} from 'react';\nimport './Select.scss';\n\nconst {Option} = AntSelect;\n\nexport interface SelectOptionProps<T extends Model> extends OptionProps {\n  'data-content': T;\n\n  [key: string]: any;\n}\n\nfunction defaultRenderObject<T extends Model>(t: T) {\n  return t.name;\n}\n\ntype DefaultSelectChange<T extends Model> = (value: string | number, subject?: T) => void;\n\nexport interface SelectProps<T extends Model, TSearch extends Search> {\n  value?: number | string;\n\n  defaultValue?: number | string;\n\n  children?: ReactElement<SelectOptionProps<T>> | Array<ReactElement<SelectOptionProps<T>>>;\n\n  list?: T[];\n\n  getList?: (tSearch?: TSearch) => Promise<T[]>;\n\n  search?: TSearch;\n\n  setSearch?: (search?: TSearch) => void;\n\n  searchField?: string;\n\n  allowClear?: boolean;\n\n  disabled?: boolean;\n\n  className?: string;\n\n  onChange?: DefaultSelectChange<T>;\n\n  onSearchError?: (error: AxiosError<T>) => void;\n\n  render?: (t: T) => string;\n}\n\nconst Select = React.forwardRef(\n  <T extends Model, TSearch extends Search>(props: SelectProps<T, TSearch>, ref: Ref<any>) => {\n    const {\n      search,\n      setSearch,\n      className,\n      list: defaultList,\n      children,\n      getList,\n      onSearchError,\n      allowClear,\n      onChange,\n      searchField,\n      value,\n      defaultValue,\n      render,\n    } = props;\n\n    // tslint:disable-next-line:max-line-length\n    const [list, handleLoadList, loading, handleSearch] = useSelect<T, TSearch>(defaultList, getList, search, setSearch, searchField, onSearchError);\n\n    const handleToggle = React.useCallback(\n      async (visible: boolean) => {\n        if (visible && typeof getList === 'function') {\n          await handleLoadList();\n        }\n      },\n      [getList, handleLoadList],\n    );\n\n    const handleChange = React.useCallback(\n      (\n        value: number | string,\n        option?: ReactElement<SelectOptionProps<T>>,\n      ) => {\n        if (onChange) {\n          if (value && option) {\n            return onChange(value, option.props['data-content']);\n          }\n          return onChange(undefined, undefined);\n        }\n      },\n      [onChange],\n    );\n\n    return (\n      <AntSelect\n        ref={ref}\n        className={classNames('w-100', className)}\n        onDropdownVisibleChange={handleToggle}\n        mode=\"default\"\n        onChange={handleChange}\n        loading={loading}\n        allowClear={allowClear}\n        showSearch={typeof getList === 'function'}\n        onSearch={handleSearch}\n        defaultValue={defaultValue}\n        value={value}\n      >\n        {list.map((t: T) => (\n          <Option key={t.id} data-content={t} value={t.id}>\n            {render(t)}\n          </Option>\n        ))}\n        {children}\n      </AntSelect>\n    );\n  },\n);\n\nSelect.defaultProps = {\n  render: defaultRenderObject,\n};\n\nexport default Select;\n","import {Model} from '../models';\n\nexport function hasError<T extends Model>(model: T, field: string): 'error' | undefined {\n  if (model.errors) {\n    if (!!model.errors[field]) {\n      return 'error';\n    }\n  }\n}\n","import message from 'antd/lib/message';\nimport Modal from 'antd/lib/modal';\nimport {AxiosError} from 'axios';\nimport {translate} from 'core/helpers';\nimport {Model} from 'core/models';\nimport {useTranslation} from 'react-i18next';\nimport React from 'reactn';\n\nconst DEFAULT_SUCCESS_MESSAGE: string = translate('general.delete.success');\nconst DEFAULT_FAILURE_MESSAGE: string = translate('general.delete.failure');\nconst DEFAULT_TITLE_MESSAGE: string = translate('general.delete.title');\nconst DEFAULT_CONTENT_MESSAGE: string = translate('general.delete.content');\n\nexport function useDeleteHandler<T extends Model>(\n  onDelete: (t: T) => Promise<T>,\n  onSetLoading: (loading: boolean) => void,\n  model: T,\n  setModel: (t: T) => void,\n  onSuccess?: (t?: T) => void,\n  onError?: (error: Error) => void,\n  onCancel?: () => void,\n) {\n  const [translate] = useTranslation();\n  return React.useMemo(\n    () => {\n      return () => {\n        Modal.confirm({\n          title: translate(DEFAULT_TITLE_MESSAGE, model),\n          content: translate(DEFAULT_CONTENT_MESSAGE, model),\n          okType: 'danger',\n          onOk: () => {\n            onSetLoading(true);\n            onDelete(model)\n              .then(() => {\n                message.info(translate(DEFAULT_SUCCESS_MESSAGE, model));\n                if (typeof onSuccess === 'function') {\n                  onSuccess();\n                }\n              })\n              .catch((error: AxiosError<T>) => {\n                message.error(translate(DEFAULT_FAILURE_MESSAGE, {error, ...model}));\n                setModel(Model.clone<T>({\n                  ...model,\n                  errors: error.response.data,\n                }));\n                if (typeof onError === 'function') {\n                  onError(error);\n                }\n              })\n              .finally(\n                () => {\n                  onSetLoading(false);\n                },\n              );\n          },\n          onCancel,\n        });\n      };\n    },\n    // tslint:disable-next-line:max-line-length\n    [model, onCancel, onDelete, onError, onSetLoading, onSuccess, setModel, translate],\n  );\n}\n","export class Filter {\n\n  constructor(filter?: Filter) {\n    if (!!filter) {\n      Object.assign(this, filter);\n    }\n  }\n}\n","import nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class GuidFilter extends Filter {\n\n  public static types(): string[] {\n    const filter: GuidFilter = new GuidFilter();\n    return [\n      nameof(filter.equal),\n      nameof(filter.notEqual),\n      nameof(filter.in),\n      nameof(filter.notIn),\n    ];\n  }\n\n  public equal?: string;\n\n  public notEqual?: string;\n\n  public in?: string[];\n\n  public notIn?: string[];\n}\n","import nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class IdFilter extends Filter {\n\n  public static types(): string[] {\n    const filter: IdFilter = new IdFilter();\n    return [\n      nameof(filter.equal),\n      nameof(filter.notEqual),\n      nameof(filter.in),\n      nameof(filter.notIn),\n    ];\n  }\n\n  public equal?: number;\n\n  public notEqual?: number;\n\n  public in?: number[];\n\n  public notIn?: number[];\n}\n","import nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class StringFilter extends Filter {\n\n  public static types(): string[] {\n    const filter: StringFilter = new StringFilter();\n    return [\n      nameof(filter.startWith),\n      nameof(filter.notStartWith),\n      nameof(filter.endWith),\n      nameof(filter.notEndWith),\n      nameof(filter.equal),\n      nameof(filter.notEqual),\n      nameof(filter.contain),\n      nameof(filter.notContain),\n    ];\n  }\n\n  public startWith?: string;\n\n  public notStartWith?: string;\n\n  public endWith?: string;\n\n  public notEndWith?: string;\n\n  public equal?: string;\n\n  public notEqual?: string;\n\n  public contain?: string;\n\n  public notContain?: string;\n}\n","import nameof from 'ts-nameof.macro';\nimport {Filter} from '../filters/Filter';\n\nexport class NumberFilter extends Filter {\n\n  public static types(): string[] {\n    const filter: NumberFilter = new NumberFilter();\n    return [\n      nameof(filter.equal),\n      nameof(filter.notEqual),\n      nameof(filter.greater),\n      nameof(filter.greaterEqual),\n      nameof(filter.less),\n      nameof(filter.lessEqual),\n      nameof(filter.range),\n    ];\n  }\n\n  public equal?: number;\n\n  public notEqual?: number;\n\n  public greater?: number;\n\n  public greaterEqual?: number;\n\n  public less?: number;\n\n  public lessEqual?: number;\n\n  public range?: [number | undefined, number | undefined];\n}\n","import {Moment} from 'moment';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from '../filters/Filter';\n\nexport class DateFilter extends Filter {\n\n  public static types(): string[] {\n    const filter: DateFilter = new DateFilter();\n    return [\n      nameof(filter.equal),\n      nameof(filter.notEqual),\n      nameof(filter.greater),\n      nameof(filter.greaterEqual),\n      nameof(filter.less),\n      nameof(filter.lessEqual),\n      nameof(filter.range),\n    ];\n  }\n\n  public equal?: Moment;\n\n  public notEqual?: Moment;\n\n  public greater?: Moment;\n\n  public greaterEqual?: Moment;\n\n  public less?: Moment;\n\n  public lessEqual?: Moment;\n\n  public range?: [Moment | null | undefined, Moment | null | undefined];\n}\n","import {PaginationConfig, PaginationProps} from 'antd/lib/pagination';\nimport {SorterResult} from 'antd/lib/table';\nimport {DateFilter, Filter, GuidFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport {Model, Search} from 'core/models';\nimport {Moment} from 'moment';\nimport React from 'react';\nimport nameof from 'ts-nameof.macro';\n\nexport type LocalTableHookResult<T extends Model, TSearch extends Search> = [\n  T[],\n  PaginationProps,\n  SorterResult<TSearch>,\n  (newPagination: PaginationConfig, filters: Record<string, any>, newSorter: SorterResult<T>) => void,\n  (field: string) => (filter: Filter) => void,\n];\n\nexport type FilterHandlerType<TSearch extends Search> = (list: any[], search?: TSearch) => any[];\n\nfunction hasType(filter: Filter) {\n  return Object.keys(filter).length > 0;\n}\n\nfunction defaultFilterHandler<T extends Model, TSearch extends Search>(list: T[], search?: TSearch) {\n  if (search) {\n    Object\n      .entries(search)\n      .forEach(([key, value]) => {\n        switch (key) {\n          case nameof(search.skip):\n\n            break;\n\n          case nameof(search.take):\n\n            break;\n\n          case nameof(search.orderBy):\n\n            break;\n\n          case nameof(search.orderType):\n\n            break;\n\n          default:\n            if (value instanceof Filter && hasType(value)) {\n              if (value instanceof StringFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    switch (filterKey) {\n                      case nameof(value.startWith):\n                        list = list.filter((t: T) => {\n                          return (t[key] as string)?.startsWith(filterValue);\n                        });\n                        break;\n\n                      case nameof(value.endWith):\n                        list = list.filter((t: T) => {\n                          return (t[key] as string)?.endsWith(filterValue);\n                        });\n                        break;\n\n                      case nameof(value.contain):\n                        list = list.filter((t: T) => {\n                          return (t[key] as string)?.indexOf(filterValue) >= 0;\n                        });\n                        break;\n\n                      default:\n                        // Do nothing\n                        break;\n                    }\n                  });\n              } else if (value instanceof NumberFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    switch (filterKey) {\n                      case nameof(value.range):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number') {\n                            let result: boolean = true;\n                            if (filterValue instanceof Array) {\n                              if (typeof filterValue[0] === 'number') {\n                                result = result && v >= filterValue[0];\n                              }\n                              if (typeof filterValue[1] === 'number') {\n                                result = result && v <= filterValue[1];\n                              }\n                            }\n                            return result;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.equal):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number' && typeof filterValue === 'number') {\n                            return v === filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.notEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number' && typeof filterValue === 'number') {\n                            return v !== filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.less):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number' && typeof filterValue === 'number') {\n                            return v < filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.greater):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number' && typeof filterValue === 'number') {\n                            return v > filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.lessEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number' && typeof filterValue === 'number') {\n                            return v <= filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.greaterEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if (typeof v === 'number' && typeof filterValue === 'number') {\n                            return v >= filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      default:\n                        // Do nothing\n                        break;\n                    }\n                  });\n              } else if (value instanceof DateFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    switch (filterKey) {\n                      case nameof(value.range):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number') {\n                            const [minValue, maxValue] = (filterValue ?? []) as [Moment, Moment];\n                            let result: boolean = true;\n                            if (minValue !== null && typeof minValue === 'object') {\n                              const minTimeValue: number = minValue.toDate().getTime();\n                              result = result && minTimeValue <= v;\n                            }\n                            if (maxValue !== null && typeof maxValue === 'object') {\n                              const maxTimeValue: number = maxValue.toDate().getTime();\n                              result = result && maxTimeValue >= v;\n                            }\n                            return result;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.equal):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                            const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                            if (typeof comparisonValue === 'number') {\n                              return v === comparisonValue;\n                            }\n                            return true;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.notEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                            const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                            if (typeof comparisonValue === 'number') {\n                              return v !== comparisonValue;\n                            }\n                            return true;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.less):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                            const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                            if (typeof comparisonValue === 'number') {\n                              return v < comparisonValue;\n                            }\n                            return true;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.greater):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                            const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                            if (typeof comparisonValue === 'number') {\n                              return v > comparisonValue;\n                            }\n                            return true;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.lessEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                            const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                            if (typeof comparisonValue === 'number') {\n                              return v <= comparisonValue;\n                            }\n                            return true;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.greaterEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = (t[key] as Moment)?.toDate().getTime();\n                          if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                            const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                            if (typeof comparisonValue === 'number') {\n                              return v >= comparisonValue;\n                            }\n                            return true;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      default:\n                        // Do nothing\n                        break;\n                    }\n                  });\n              } else if (value instanceof IdFilter || value instanceof GuidFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    switch (filterKey) {\n                      case nameof(value.equal):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if ((typeof v === 'number' || typeof value === 'string') && (typeof filterValue === 'number' || typeof filterValue === 'string')) {\n                            return v === filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.notEqual):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if ((typeof v === 'number' || typeof value === 'string') && (typeof filterValue === 'number' || typeof filterValue === 'string')) {\n                            return v !== filterValue;\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.in):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if ((typeof v === 'number' || typeof value === 'string') && (filterValue instanceof Array)) {\n                            return filterValue.includes(v);\n                          }\n                          return true;\n                        });\n                        break;\n\n                      case nameof(value.notIn):\n                        list = list.filter((t: T) => {\n                          const v: number = t[key] as number;\n                          if ((typeof v === 'number' || typeof value === 'string') && (filterValue instanceof Array)) {\n                            return !filterValue.includes(v);\n                          }\n                          return true;\n                        });\n                        break;\n\n                      default:\n                        // Do nothing\n                        break;\n                    }\n                  });\n              }\n            }\n            break;\n        }\n      });\n    return list;\n  }\n  return list;\n}\n\nexport function useLocalTable<T extends Model, TSearch extends Search>(\n  list: T[],\n  search: TSearch,\n  setSearch: (search: TSearch) => void,\n  filterHandler: FilterHandlerType<TSearch> = defaultFilterHandler,\n): LocalTableHookResult<T, TSearch> {\n  const sorter: SorterResult<TSearch> = React.useMemo(\n    () => ({\n      field: search.orderBy,\n      order: Search.getOrderType(search),\n      columnKey: search.orderBy,\n      column: undefined,\n    }),\n    [search],\n  );\n\n  const dataSource: T[] = React.useMemo(\n    () => {\n      return filterHandler(list, search);\n    },\n    [filterHandler, list, search],\n  );\n\n  const pagination: PaginationProps = React.useMemo(\n    () => {\n      const {\n        skip,\n        take,\n      } = search;\n\n      const {length} = dataSource ?? [];\n\n      return {\n        current: (skip / take) + 1,\n        pageSize: take,\n        total: length,\n      };\n    },\n    [dataSource, search],\n  );\n\n  const handleTableChange = React.useCallback(\n    (\n      newPagination: PaginationConfig,\n      filters: Record<string, any>,\n      newSorter: SorterResult<T>,\n    ) => {\n      const {pageSize: take} = newPagination;\n      const skip: number = (newPagination.current - 1) * newPagination.pageSize;\n\n      if (skip !== search.skip ?? take !== search.take) {\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          skip,\n          take,\n        }));\n        return;\n      }\n\n      const {field, order} = sorter;\n\n      if (newSorter.field !== field ?? newSorter.order !== order) {\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          orderBy: newSorter.field,\n          orderType: Search.getOrderTypeForTable<T>(newSorter.field, newSorter),\n        }));\n        return;\n      }\n\n      setSearch(Search.clone<TSearch>({\n        ...search,\n        ...filters,\n      }));\n    },\n    [search, setSearch, sorter],\n  );\n\n  const handleFilter = React.useCallback(\n    (field: string) => {\n      return (filter: Filter) => {\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          [field]: filter,\n        }));\n      };\n    },\n    [search, setSearch],\n  );\n\n  return [dataSource, pagination, sorter, handleTableChange, handleFilter];\n}\n","import {PaginationProps} from 'antd/lib/pagination';\nimport {SorterResult} from 'antd/lib/table';\nimport {DEFAULT_TAKE} from 'core/config';\nimport {Model, Search} from 'core/models';\nimport React from 'react';\n\nexport type UseMasterTableResult<T extends Model> = [\n  PaginationProps,\n  SorterResult<T>,\n  (pagination: PaginationProps, filters: Record<string, any>, newSorter: SorterResult<T>) => void,\n];\n\nexport function useMasterTable<T extends Model, TSearch extends Search>(\n  search: TSearch,\n  setSearch: (search: TSearch) => void,\n  total: number,\n): UseMasterTableResult<T> {\n\n  const pagination: PaginationProps = React.useMemo(\n    () => ({\n      total,\n      current: search.skip / search.take + 1,\n      pageSize: search.take,\n    }),\n    [search.skip, search.take, total],\n  );\n\n  const sorter: SorterResult<T> = React.useMemo(\n    () => ({\n      field: search.orderBy,\n      order: Search.getOrderType(search),\n    } as SorterResult<T>),\n    [search],\n  );\n\n  const handleTableChange = React.useCallback(\n    (\n      newPagination: PaginationProps,\n      filters: Record<string, any>,\n      newSorter: SorterResult<T>,\n    ) => {\n      const {field, order} = sorter;\n      if (newSorter.field !== field ?? newSorter.order !== order) {\n        const newSearch: TSearch = Search.clone<TSearch>({\n          ...search,\n          orderBy: newSorter.field,\n          skip: 0,\n        });\n        Search.setOrderType(newSearch, newSorter.order);\n        setSearch(newSearch);\n        return;\n      }\n      const {\n        current = 1,\n        pageSize = DEFAULT_TAKE,\n        total = 0,\n      } = newPagination;\n      if (pagination.current !== current ?? pagination.pageSize !== pageSize ?? pagination.total !== total) {\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          take: pageSize,\n          skip: (current - 1) * pageSize,\n        }));\n        return;\n      }\n      setSearch(Search.clone<TSearch>({\n        ...search,\n        ...filters,\n      }));\n    },\n    [pagination, search, setSearch, sorter],\n  );\n  return [pagination, sorter, handleTableChange];\n}\n","import AntInputNumber, {InputNumberProps} from 'antd/lib/input-number';\nimport {debounce} from 'core/helpers';\nimport React, {LegacyRef, ReactText} from 'react';\nimport './InputNumber.scss';\n\nfunction formatter(x: ReactText) {\n  if (typeof x === 'string') {\n    x = parser(x);\n  }\n  if (typeof x === 'number') {\n    return x.toLocaleString();\n  }\n  return '';\n}\n\nfunction parser(x: string) {\n  const result: number = parseFloat(x.split(',').join(''));\n  if (Number.isNaN(result)) {\n    return '';\n  }\n  return result;\n}\n\nfunction InputNumber(props: InputNumberProps) {\n  const {defaultValue, onChange, ...restProps} = props;\n\n  const ref: LegacyRef<any> = React.useRef();\n\n  const [value, setValue] = React.useState<number>(defaultValue);\n\n  React.useEffect(\n    () => {\n      if (typeof defaultValue === 'undefined') {\n        setValue(undefined);\n      }\n    },\n    [defaultValue],\n  );\n\n  const debouncedHandleChange = React.useCallback(\n    debounce((value: number) => {\n      setValue(value);\n      if (typeof onChange === 'function') {\n        onChange(value);\n      }\n    }),\n    [onChange],\n  );\n\n  return (\n    <AntInputNumber\n      ref={ref}\n      formatter={formatter}\n      defaultValue={defaultValue}\n      onChange={debouncedHandleChange}\n      value={value}\n      {...restProps}\n    />\n  );\n}\n\nInputNumber.defaultProps = {\n  allowNegative: true,\n  onlyInteger: false,\n  step: 1,\n};\n\nexport default InputNumber;\n","import InputNumber from 'components/InputNumber/InputNumber';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport './NumberRange.scss';\n\ninterface NumberRangeProps {\n  value?: [number | undefined, number | undefined];\n\n  onChange?(value: [number | undefined, number | undefined]);\n}\n\nfunction NumberRange(props: NumberRangeProps) {\n  const [translate] = useTranslation();\n\n  const {\n    value: [\n      minValue,\n      maxValue,\n    ] = [],\n    onChange,\n  } = props ?? {};\n\n  const handleChangeMinValue = React.useCallback(\n    (value: number) => {\n      if (typeof onChange === 'function') {\n        onChange([value, maxValue]);\n      }\n    },\n    [maxValue, onChange],\n  );\n\n  const handleChangeMaxValue = React.useCallback(\n    (value: number) => {\n      if (typeof onChange === 'function') {\n        onChange([minValue, value]);\n      }\n    },\n    [minValue, onChange],\n  );\n\n  return (\n    <div className=\"number-range\">\n      <InputNumber defaultValue={minValue}\n                   onChange={handleChangeMinValue}\n                   placeholder={translate('general.numberRange.from')}/>\n      <span className=\"separator\"/>\n      <InputNumber defaultValue={maxValue}\n                   onChange={handleChangeMaxValue}\n                   placeholder={translate('general.numberRange.to')}/>\n    </div>\n  );\n}\n\nexport default NumberRange;\n","import InputNumber from 'components/InputNumber/InputNumber';\nimport NumberRange from 'components/NumberRange/NumberRange';\nimport {NumberFilter} from 'core/filters';\nimport {debounce} from 'core/helpers';\nimport {Moment} from 'moment';\nimport React from 'react';\nimport nameof from 'ts-nameof.macro';\nimport './AdvancedNumberFilter.scss';\n\ninterface AdvancedNumberFilterProps {\n  filter: NumberFilter;\n\n  defaultType?: string;\n\n  onChange?(filter: NumberFilter);\n}\n\nconst types: string[] = NumberFilter.types();\n\nfunction AdvancedNumberFilter(props: AdvancedNumberFilterProps) {\n  const {\n    filter,\n    defaultType,\n    onChange,\n  } = props;\n\n  const [type] = React.useState<keyof NumberFilter>((defaultType ?? types[0]) as keyof NumberFilter);\n\n  const handleChangeRange = React.useCallback(\n    (range) => {\n      types.forEach((type: string) => {\n        if (filter.hasOwnProperty(type)) {\n          switch (type) {\n            case nameof(filter.greaterEqual):\n              filter.greaterEqual = range[0];\n              break;\n            case nameof(filter.lessEqual):\n              filter.lessEqual = range[1];\n              break;\n            default:\n              if (filter.hasOwnProperty(type)) {\n                filter[type] = undefined;\n              }\n              break;\n          }\n        }\n      });\n      if (onChange) {\n        onChange({...filter});\n      }\n    },\n    [filter, onChange],\n  );\n\n  const handleChange = React.useCallback(\n    debounce((value: Moment) => {\n      filter[type as any] = value;\n      if (onChange) {\n        onChange({...filter});\n      }\n    }),\n    [filter, onChange, type],\n  );\n\n  if (type === nameof(filter.range)) {\n    const numberFilterRange: [number | undefined, number | undefined] = [filter.greaterEqual, filter.lessEqual];\n    return (\n      <NumberRange value={numberFilterRange}\n                   onChange={handleChangeRange}\n      />\n    );\n  }\n  return (\n    <InputNumber defaultValue={filter[type] as number}\n                 onChange={handleChange}\n    />\n  );\n}\n\nexport default AdvancedNumberFilter;\n","import Input from 'antd/lib/input';\nimport 'components/AdvancedStringFilter/AdvancedStringFilter.scss';\nimport Select from 'components/Select/Select';\nimport {DateFilter, GuidFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport {FilterType} from 'core/types';\nimport React from 'react';\n\ninterface AdvancedStringFilterProps {\n  filter: StringFilter | NumberFilter | IdFilter | GuidFilter;\n\n  defaultType?: string;\n\n  type?: 'text' | 'number';\n\n  onChange?(filter: StringFilter | NumberFilter | IdFilter | GuidFilter);\n}\n\nfunction AdvancedStringFilter(props: AdvancedStringFilterProps) {\n  const {filter, defaultType, onChange, type: inputType} = props;\n\n  const types: FilterType[] = React.useMemo(\n    () => {\n      if (filter instanceof StringFilter) {\n        return StringFilter\n          .types()\n          .map((type: string, index: number) => {\n            return {\n              id: index,\n              name: type,\n            };\n          });\n      }\n      if (filter instanceof NumberFilter) {\n        return NumberFilter\n          .types()\n          .map((type: string, index: number) => {\n            return {\n              id: index,\n              name: type,\n            };\n          });\n      }\n      if (filter instanceof DateFilter) {\n        return DateFilter\n          .types()\n          .map((type: string, index: number) => {\n            return {\n              id: index,\n              name: type,\n            };\n          });\n      }\n      if (filter instanceof IdFilter) {\n        return NumberFilter\n          .types()\n          .map((type: string, index: number) => {\n            return {\n              id: index,\n              name: type,\n            };\n          });\n      }\n      if (filter instanceof GuidFilter) {\n        return GuidFilter\n          .types()\n          .map((type: string, index: number) => {\n            return {\n              id: index,\n              name: type,\n            };\n          });\n      }\n      return [];\n    },\n    [filter],\n  );\n\n  const [type, setType] = React.useState<string>(defaultType ?? types[0].name);\n\n  const ref = React.createRef<Input>();\n\n  const handleSubmitChange = React.useCallback(\n    () => {\n      const {value} = ref.current.input;\n      if (value !== '') {\n        filter[type] = value;\n      } else {\n        filter[type] = null;\n      }\n      if (typeof onChange === 'function') {\n        onChange(filter);\n      }\n    },\n    [filter, onChange, ref, type],\n  );\n\n  const handleCheckClear = React.useCallback(\n    () => {\n      const {value} = ref.current.input;\n      if (value === '') {\n        handleSubmitChange();\n      }\n    },\n    [handleSubmitChange, ref],\n  );\n\n  const handleChangeType = React.useCallback(\n    (id: number) => {\n      setType(types[id].name);\n    },\n    [types],\n  );\n\n  const addonBefore = React.useMemo(\n    () => {\n      if (typeof defaultType === 'undefined') {\n        return (\n          <Select list={types}\n                  onChange={handleChangeType}\n          />\n        );\n      }\n      return null;\n    },\n    [defaultType, handleChangeType, types],\n  );\n\n  const defaultValue = React.useMemo(\n    () => {\n      if (filter) {\n        return filter[type];\n      }\n      return undefined;\n    },\n    [filter, type],\n  );\n\n  return (\n    <Input\n      ref={ref}\n      type={inputType}\n      defaultValue={defaultValue}\n      onChange={handleCheckClear}\n      onPressEnter={handleSubmitChange}\n      addonBefore={addonBefore}\n    />\n  );\n}\n\nAdvancedStringFilter.defaultProps = {\n  type: 'text',\n};\n\nexport default AdvancedStringFilter;\n","import {IdFilter, NumberFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class CollectionContentSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public collectionId?: IdFilter = new IdFilter();\n\n  public priority?: NumberFilter = new NumberFilter();\n\n  public productId?: IdFilter = new IdFilter();\n}\n","import Button from 'antd/lib/button';\nimport Form from 'antd/lib/form';\nimport Input from 'antd/lib/input';\nimport Table, {ColumnProps} from 'antd/lib/table';\nimport AdvancedNumberFilter from 'components/AdvancedNumberFilter/AdvancedNumberFilter';\nimport AdvancedStringFilter from 'components/AdvancedStringFilter/AdvancedStringFilter';\nimport InputNumber from 'components/InputNumber/InputNumber';\nimport {COLUMN_WIDTH, MASTER_KEYS} from 'config/consts';\nimport {renderMasterIndex} from 'core/helpers';\nimport {hasError} from 'core/helpers/form';\nimport {withTableFilterSuffix} from 'core/helpers/string';\nimport {ContentTableProps, useContentTable} from 'core/hooks/useContentTable';\nimport * as Hooks from 'hooks';\nimport {Collection} from 'models/Collection';\nimport {CollectionContent} from 'models/CollectionContent';\nimport {CollectionContentSearch} from 'models/CollectionContentSearch';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport nameof from 'ts-nameof.macro';\nimport './CollectionContentTable.scss';\n\nconst columnWidth = {\n  index: COLUMN_WIDTH.index,\n  id: undefined,\n  name: undefined,\n  productId: undefined,\n  collectionContentType: undefined,\n  actions: COLUMN_WIDTH.actions,\n};\n\nfunction CollectionContentTable(props: ContentTableProps<Collection, CollectionContent>) {\n  const {\n    model: collection,\n    setModel: setCollection,\n    field,\n  } = props;\n\n  const [collectionContents, , handleAdd, handleDelete] = useContentTable<Collection, CollectionContent>(collection, setCollection, field);\n\n  const [translate] = useTranslation();\n\n  const [search, setSearch] = React.useState<CollectionContentSearch>(new CollectionContentSearch());\n\n  const [dataSource, , sorter, handleTableChange, handleFilter] = Hooks.useLocalTable(collectionContents, search, setSearch);\n\n  const columns: Array<ColumnProps<CollectionContent>> = React.useMemo(\n    () => {\n      return [\n        {\n          title: translate(MASTER_KEYS.index),\n          key: nameof(MASTER_KEYS.index),\n          width: columnWidth.index,\n          className: 'center',\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(MASTER_KEYS.index)),\n              width: columnWidth.index,\n              className: 'center',\n              render: renderMasterIndex<CollectionContent>(),\n            },\n          ],\n        },\n        {\n          title: translate('collectionContent.id'),\n          key: nameof(collectionContents[0].id),\n          width: columnWidth.id,\n          dataIndex: nameof(collectionContents[0].id),\n          sorter: true,\n          sortOrder: CollectionContentSearch.getOrderTypeForTable<Collection>(nameof(collectionContents[0].id), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedNumberFilter filter={search.id}\n                                      defaultType={nameof(search.id.equal)}\n                                      onChange={handleFilter(nameof(search.id))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(collectionContents[0].id)),\n              width: columnWidth.id,\n              dataIndex: nameof(collectionContents[0].id),\n              render(id: number, collectionContent: CollectionContent) {\n                return (\n                  <Form.Item\n                    validateStatus={hasError<CollectionContent>(collectionContent, nameof(collectionContent.id))}\n                    help={collectionContent?.errors?.id}\n                  >\n                    <InputNumber name={nameof(collectionContents[0].id)} defaultValue={id}/>\n                  </Form.Item>\n                );\n              },\n            },\n          ],\n        },\n        {\n          title: translate('collectionContent.productId'),\n          key: nameof(collectionContents[0].productId),\n          width: columnWidth.productId,\n          dataIndex: nameof(collectionContents[0].productId),\n          sorter: true,\n          sortOrder: CollectionContentSearch.getOrderTypeForTable<Collection>(nameof(collectionContents[0].productId), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter filter={search.productId}\n                                      defaultType={nameof(search.productId.equal)}\n                                      onChange={handleFilter(nameof(search.productId))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(collectionContents[0].name)),\n              width: columnWidth.name,\n              dataIndex: nameof(collectionContents[0].name),\n              render(name: string, collectionContent: CollectionContent) {\n                return (\n                  <Form.Item\n                    validateStatus={hasError<CollectionContent>(collectionContent, nameof(collectionContent.name))}\n                    help={collectionContent?.errors?.name}\n                  >\n                    <Input type=\"text\" name={nameof(collectionContents[0].name)} defaultValue={name}/>\n                  </Form.Item>\n                );\n              },\n            },\n          ],\n        },\n        {\n          title: translate(MASTER_KEYS.actions),\n          key: nameof(MASTER_KEYS.actions),\n          width: columnWidth.actions,\n          className: 'center actions',\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(MASTER_KEYS.actions)),\n              width: columnWidth.actions,\n              dataIndex: nameof(collectionContents[0].id),\n              className: 'center actions filter-placeholder',\n              render: (id: number) => {\n                return (\n                  <>\n                    <Button htmlType=\"button\" type=\"link\" onClick={handleDelete(id)}>\n                      {translate('general.actions.delete')}\n                    </Button>\n                  </>\n                );\n              },\n            },\n          ],\n        },\n      ];\n    },\n    [collectionContents, handleDelete, handleFilter, search.id, search.productId, sorter, translate],\n  );\n\n  return (\n    <Table bordered\n           tableLayout=\"fixed\"\n           onChange={handleTableChange}\n           size=\"small\"\n           dataSource={dataSource}\n           columns={columns}\n           pagination={false}\n           footer={() => (\n             <>\n               <Button htmlType=\"button\" type=\"link\" onClick={handleAdd}>\n                 {translate('general.actions.add')}\n               </Button>\n             </>\n           )}\n    />\n  );\n}\n\nexport default CollectionContentTable;\n","export const API_ADMINISTRATOR_MASTER_ROUTE: string = '/api/administrator/administrator-master';\nexport const API_ADMINISTRATOR_DETAIL_ROUTE: string = '/api/administrator/administrator-detail';\nexport const API_BANNER_MASTER_ROUTE: string = '/api/banner/banner-master';\nexport const API_BANNER_DETAIL_ROUTE: string = '/api/banner/banner-detail';\nexport const API_BRAND_MASTER_ROUTE: string = '/api/brand/brand-master';\nexport const API_BRAND_DETAIL_ROUTE: string = '/api/brand/brand-detail';\nexport const API_CATEGORY_MASTER_ROUTE: string = '/api/category/category-master';\nexport const API_CATEGORY_DETAIL_ROUTE: string = '/api/category/category-detail';\nexport const API_COLLECTION_MASTER_ROUTE: string = '/api/collection/collection-master';\nexport const API_COLLECTION_DETAIL_ROUTE: string = '/api/collection/collection-detail';\nexport const API_COUPON_MASTER_ROUTE: string = '/api/coupon/coupon-master';\nexport const API_COUPON_DETAIL_ROUTE: string = '/api/coupon/coupon-detail';\nexport const API_CUSTOMER_MASTER_ROUTE: string = '/api/customer/customer-master';\nexport const API_CUSTOMER_DETAIL_ROUTE: string = '/api/customer/customer-detail';\nexport const API_DISCOUNT_MASTER_ROUTE: string = '/api/discount/discount-master';\nexport const API_DISCOUNT_DETAIL_ROUTE: string = '/api/discount/discount-detail';\nexport const API_DISTRICT_MASTER_ROUTE: string = '/api/district/district-master';\nexport const API_DISTRICT_DETAIL_ROUTE: string = '/api/district/district-detail';\nexport const API_EVOUCHER_MASTER_ROUTE: string = '/api/e-voucher/e-voucher-master';\nexport const API_EVOUCHER_DETAIL_ROUTE: string = '/api/e-voucher/e-voucher-detail';\nexport const API_IMAGEFILE_MASTER_ROUTE: string = '/api/image-file/image-file-master';\nexport const API_IMAGEFILE_DETAIL_ROUTE: string = '/api/image-file/image-file-detail';\nexport const API_ITEM_MASTER_ROUTE: string = '/api/item/item-master';\nexport const API_ITEM_DETAIL_ROUTE: string = '/api/item/item-detail';\nexport const API_ITEMHISTORY_MASTER_ROUTE: string = '/api/item-history/item-history-master';\nexport const API_ITEMHISTORY_DETAIL_ROUTE: string = '/api/item-history/item-history-detail';\nexport const API_ITEMVOUCHER_MASTER_ROUTE: string = '/api/item-voucher/item-voucher-master';\nexport const API_ITEMVOUCHER_DETAIL_ROUTE: string = '/api/item-voucher/item-voucher-detail';\nexport const API_ITEMVOUCHERSTATUS_MASTER_ROUTE: string = '/api/item-voucher-status/item-voucher-status-master';\nexport const API_ITEMVOUCHERSTATUS_DETAIL_ROUTE: string = '/api/item-voucher-status/item-voucher-status-detail';\nexport const API_MAIL_MASTER_ROUTE: string = '/api/mail/mail-master';\nexport const API_MAIL_DETAIL_ROUTE: string = '/api/mail/mail-detail';\nexport const API_MERCHANTADDRESS_MASTER_ROUTE: string = '/api/merchant-address/merchant-address-master';\nexport const API_MERCHANTADDRESS_DETAIL_ROUTE: string = '/api/merchant-address/merchant-address-detail';\nexport const API_MERCHANTCONTACT_MASTER_ROUTE: string = '/api/merchant-contact/merchant-contact-master';\nexport const API_MERCHANTCONTACT_DETAIL_ROUTE: string = '/api/merchant-contact/merchant-contact-detail';\nexport const API_MERCHANT_MASTER_ROUTE: string = '/api/merchant/merchant-master';\nexport const API_MERCHANT_DETAIL_ROUTE: string = '/api/merchant/merchant-detail';\nexport const API_NOTIFICATION_MASTER_ROUTE: string = '/api/notification/notification-master';\nexport const API_NOTIFICATION_DETAIL_ROUTE: string = '/api/notification/notification-detail';\nexport const API_ORDERCONTENT_MASTER_ROUTE: string = '/api/order-content/order-content-master';\nexport const API_ORDERCONTENT_DETAIL_ROUTE: string = '/api/order-content/order-content-detail';\nexport const API_ORDER_MASTER_ROUTE: string = '/api/order/order-master';\nexport const API_ORDER_DETAIL_ROUTE: string = '/api/order/order-detail';\nexport const API_PRODUCT_MASTER_ROUTE: string = '/api/product/product-master';\nexport const API_PRODUCT_DETAIL_ROUTE: string = '/api/product/product-detail';\nexport const API_PROVINCE_MASTER_ROUTE: string = '/api/province/province-master';\nexport const API_PROVINCE_DETAIL_ROUTE: string = '/api/province/province-detail';\nexport const API_SHIPPINGADDRESS_MASTER_ROUTE: string = '/api/shipping-address/shipping-address-master';\nexport const API_SHIPPINGADDRESS_DETAIL_ROUTE: string = '/api/shipping-address/shipping-address-detail';\nexport const API_WARD_MASTER_ROUTE: string = '/api/ward/ward-master';\nexport const API_WARD_DETAIL_ROUTE: string = '/api/ward/ward-detail';\n","import {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {createHttpService} from '../helpers/http';\n\nexport class Repository {\n  protected http: AxiosInstance;\n\n  constructor(\n    config?: AxiosRequestConfig,\n    requestInterceptor?: (config: AxiosRequestConfig) => AxiosRequestConfig,\n    responseInterceptor?: (response: AxiosResponse) => any,\n  ) {\n    this.http = createHttpService(config, requestInterceptor, responseInterceptor);\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.http.defaults.baseURL = baseURL;\n  }\n\n  public getHttpInstance(): AxiosInstance {\n    return this.http;\n  }\n}\n","import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\n\nexport function createHttpService(\n  config: AxiosRequestConfig,\n  requestInterceptor?: (config: AxiosRequestConfig) => AxiosRequestConfig,\n  responseInterceptor?: (response: AxiosResponse) => any,\n): AxiosInstance {\n  const instance: AxiosInstance = axios.create(config);\n  if (requestInterceptor) {\n    instance.interceptors.request.use(requestInterceptor);\n  }\n  if (responseInterceptor) {\n    instance.interceptors.response.use(responseInterceptor);\n  }\n  return instance;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Category} from './Category';\nimport {ImageFile} from './ImageFile';\n\nexport class Brand extends Model {\n\n  public static clone<T extends Model = Brand>(brand?: PureModelData<Brand>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof brand !== 'undefined' && brand !== null) {\n      Object.assign(instance, {\n        ...brand,\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public name?: string;\n\n  public slug?: string;\n\n  public disabled?: boolean;\n\n  public title?: string;\n\n  public description?: string;\n\n  public categories?: Category[];\n\n  public imageFiles?: ImageFile[];\n\n  public errors?: ErrorMap<Brand>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Brand} from './Brand';\nimport {Product} from './Product';\n\nexport class ImageFile extends Model {\n\n  public static clone<T extends Model = ImageFile>(imageFile?: PureModelData<ImageFile>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof imageFile !== 'undefined' && imageFile !== null) {\n      Object.assign(instance, {\n        ...imageFile,\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public key?: string;\n\n  public name?: string;\n\n  public url?: string;\n\n  public thumbUrl?: string;\n\n  public originUrl?: string;\n\n  public brands?: Brand[];\n\n  public products?: Product[];\n\n  public errors?: ErrorMap<ImageFile>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Brand} from './Brand';\nimport {ImageFile} from './ImageFile';\n\nexport class Category extends Model {\n\n  public static clone<T extends Model = Category>(category?: PureModelData<Category>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof category !== 'undefined' && category !== null) {\n      Object.assign(instance, {\n        ...category,\n\n        image: ImageFile.clone<ImageFile>(category.image),\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public name?: string;\n\n  public slug?: string;\n\n  public pathId?: string;\n\n  public level?: number;\n\n  public parentId?: number;\n\n  public imageId?: number;\n\n  public disabled?: boolean;\n\n  public title?: string;\n\n  public description?: string;\n\n  public image?: ImageFile;\n\n  public brands?: Brand[];\n\n  public errors?: ErrorMap<Category>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Merchant} from './Merchant';\nimport {Product} from './Product';\n\nexport class MerchantAddress extends Model {\n\n  public static clone<T extends Model = MerchantAddress>(merchantAddress?: PureModelData<MerchantAddress>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof merchantAddress !== 'undefined' && merchantAddress !== null) {\n      Object.assign(instance, {\n        ...merchantAddress,\n\n        merchant: Merchant.clone<Merchant>(merchantAddress.merchant),\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public merchantId?: number;\n\n  public code?: string;\n\n  public address?: string;\n\n  public contact?: string;\n\n  public phone?: string;\n\n  public disabled?: boolean;\n\n  public merchant?: Merchant;\n\n  public products?: Product[];\n\n  public errors?: ErrorMap<MerchantAddress>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Merchant} from './Merchant';\n\nexport class MerchantContact extends Model {\n\n  public static clone<T extends Model = MerchantContact>(merchantContact?: PureModelData<MerchantContact>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof merchantContact !== 'undefined' && merchantContact !== null) {\n      Object.assign(instance, {\n        ...merchantContact,\n\n        merchant: Merchant.clone<Merchant>(merchantContact.merchant),\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public merchantId?: number;\n\n  public name?: string;\n\n  public email?: string;\n\n  public phone?: string;\n\n  public note?: string;\n\n  public disabled?: boolean;\n\n  public merchant?: Merchant;\n\n  public errors?: ErrorMap<MerchantContact>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\n\nexport class MerchantStatus extends Model {\n\n  public static clone<T extends Model = MerchantStatus>(merchantStatus?: PureModelData<MerchantStatus>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof merchantStatus !== 'undefined' && merchantStatus !== null) {\n      Object.assign(instance, {\n        ...merchantStatus,\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public errors?: ErrorMap<MerchantStatus>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {MerchantAddress} from './MerchantAddress';\nimport {MerchantContact} from './MerchantContact';\nimport {MerchantStatus} from './MerchantStatus';\n\nexport class Merchant extends Model {\n\n  public static clone<T extends Model = Merchant>(merchant?: PureModelData<Merchant>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof merchant !== 'undefined' && merchant !== null) {\n      Object.assign(instance, {\n        ...merchant,\n\n        status: MerchantStatus.clone<MerchantStatus>(merchant.status),\n\n        merchantAddresses: merchant.merchantAddresses?.map((merchantAddress: MerchantAddress) => MerchantAddress.clone<MerchantAddress>(merchantAddress)),\n\n        merchantContacts: merchant.merchantContacts?.map((merchantContact: MerchantContact) => MerchantContact.clone<MerchantContact>(merchantContact)),\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public name?: string;\n\n  public phone?: string;\n\n  public contactPerson?: string;\n\n  public address?: string;\n\n  public provinceId?: number;\n\n  public statusId?: number;\n\n  public disabled?: boolean;\n\n  public status?: MerchantStatus;\n\n  public merchantAddresses?: MerchantAddress[];\n\n  public merchantContacts?: MerchantContact[];\n\n  public errors?: ErrorMap<Merchant>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\n\nexport class ProductStatus extends Model {\n\n  public static clone<T extends Model = ProductStatus>(productStatus?: PureModelData<ProductStatus>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof productStatus !== 'undefined' && productStatus !== null) {\n      Object.assign(instance, {\n        ...productStatus,\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public errors?: ErrorMap<ProductStatus>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\n\nexport class ProductType extends Model {\n\n  public static clone<T extends Model = ProductType>(productType?: PureModelData<ProductType>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof productType !== 'undefined' && productType !== null) {\n      Object.assign(instance, {\n        ...productType,\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public errors?: ErrorMap<ProductType>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport moment, {Moment} from 'moment';\nimport {Brand} from './Brand';\nimport {Category} from './Category';\nimport {ImageFile} from './ImageFile';\nimport {Merchant} from './Merchant';\nimport {MerchantAddress} from './MerchantAddress';\nimport {PaymentMethod} from './PaymentMethod';\nimport {ProductStatus} from './ProductStatus';\nimport {ProductType} from './ProductType';\n\nexport class Product extends Model {\n\n  public static clone<T extends Model = Product>(product?: PureModelData<Product>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof product !== 'undefined' && product !== null) {\n      Object.assign(instance, {\n        ...product,\n\n        expiredDate: moment(product.expiredDate),\n\n        brand: Brand.clone<Brand>(product.brand),\n\n        category: Category.clone<Category>(product.category),\n\n        merchant: Merchant.clone<Merchant>(product.merchant),\n\n        status: ProductStatus.clone<ProductStatus>(product.status),\n\n        type: ProductType.clone<ProductType>(product.type),\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public name?: string;\n\n  public slug?: string;\n\n  public description?: string;\n\n  public typeId?: number;\n\n  public statusId?: number;\n\n  public merchantId?: number;\n\n  public categoryId?: number;\n\n  public brandId?: number;\n\n  public keyFeatures?: string;\n\n  public warrantyPolicy?: string;\n\n  public returnPolicy?: string;\n\n  public expiredDate?: Moment;\n\n  public conditionOfUse?: string;\n\n  public maximumPurchaseQuantity?: number;\n\n  public disabled?: boolean;\n\n  public firstVariationGroupingName?: string;\n\n  public firstVariationGroupingValue?: string;\n\n  public secondVariationGroupingName?: string;\n\n  public secondVariationGroupingValue?: string;\n\n  public brand?: Brand;\n\n  public category?: Category;\n\n  public merchant?: Merchant;\n\n  public status?: ProductStatus;\n\n  public type?: ProductType;\n\n  public imageFiles?: ImageFile[];\n\n  public merchantAddresses?: MerchantAddress[];\n\n  public paymentMethods?: PaymentMethod[];\n\n  public errors?: ErrorMap<Product>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Collection} from './Collection';\nimport {Product} from './Product';\n\nexport class CollectionContent extends Model {\n\n  public static clone<T extends Model = CollectionContent>(collectionContent?: PureModelData<CollectionContent>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof collectionContent !== 'undefined' && collectionContent !== null) {\n      Object.assign(instance, {\n        ...collectionContent,\n\n        collection: Collection.clone<Collection>(collectionContent.collection),\n\n        product: Product.clone<Product>(collectionContent.product),\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public collectionId?: number;\n\n  public priority?: number;\n\n  public productId?: number;\n\n  public collection?: Collection;\n\n  public product?: Product;\n\n  public errors?: ErrorMap<CollectionContent>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\n\nexport class CollectionStatus extends Model {\n\n  public static clone<T extends Model = CollectionStatus>(collectionStatus?: PureModelData<CollectionStatus>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof collectionStatus !== 'undefined' && collectionStatus !== null) {\n      Object.assign(instance, {\n        ...collectionStatus,\n\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public errors?: ErrorMap<CollectionStatus>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport moment, {Moment} from 'moment';\nimport {CollectionContent} from './CollectionContent';\nimport {CollectionStatus} from './CollectionStatus';\n\nexport class Collection extends Model {\n\n  public static clone<T extends Model = Collection>(collection?: PureModelData<Collection>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof collection !== 'undefined' && collection !== null) {\n      Object.assign(instance, {\n        ...collection,\n\n        start: moment(collection.start),\n\n        end: moment(collection.end),\n\n        status: CollectionStatus.clone<CollectionStatus>(collection.status),\n\n        collectionContents: collection.collectionContents?.map((collectionContent: CollectionContent) => CollectionContent.clone<CollectionContent>(collectionContent)),\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public name?: string;\n\n  public slug?: string;\n\n  public start?: Moment;\n\n  public end?: Moment;\n\n  public statusId?: number;\n\n  public title?: string;\n\n  public description?: string;\n\n  public status?: CollectionStatus;\n\n  public collectionContents?: CollectionContent[];\n\n  public errors?: ErrorMap<Collection>;\n}\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class CollectionStatusSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public code?: StringFilter = new StringFilter();\n\n  public name?: StringFilter = new StringFilter();\n}\n","import {AxiosResponse} from 'axios';\n\nimport {API_COLLECTION_MASTER_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Model} from 'core/models';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Collection} from 'models/Collection';\nimport {CollectionStatus} from 'models/CollectionStatus';\nimport {CollectionStatusSearch} from 'models/CollectionStatusSearch';\nimport nameof from 'ts-nameof.macro';\n\nexport class CollectionDetailRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_COLLECTION_MASTER_ROUTE));\n  }\n\n  public get = (collection: Collection): Promise<Collection> => {\n    return this.http.post<Collection>(kebabCase(nameof(this.get)), collection)\n      .then((response: AxiosResponse<Collection>) => {\n        return Collection.clone<Collection>(response.data);\n      });\n  };\n\n  public delete = (collection: Collection): Promise<Collection> => {\n    return this.http.post<Collection>(kebabCase(nameof(this.delete)), collection)\n      .then((response: AxiosResponse<Collection>) => {\n        return Model.clone<Collection>(response.data);\n      });\n  };\n\n  public update = (collection: Collection): Promise<Collection> => {\n    return this.http.post<Collection>(kebabCase(nameof(this.update)), collection)\n      .then((response: AxiosResponse<Collection>) => {\n        return Collection.clone<Collection>(response.data);\n      });\n  };\n\n  public create = (collection: Collection): Promise<Collection> => {\n    return this.http.post<Collection>(kebabCase(nameof(this.create)), collection)\n      .then((response: AxiosResponse<Collection>) => {\n        return Collection.clone<Collection>(response.data);\n      });\n  };\n\n  public save = (collection: Collection): Promise<Collection> => {\n    if (collection.id) {\n      return this.update(collection);\n    }\n    return this.create(collection);\n  };\n\n  public singleListCollectionStatus = (): Promise<CollectionStatus[]> => {\n    return this.http.post<CollectionStatus[]>(kebabCase(nameof(this.singleListCollectionStatus)), new CollectionStatusSearch())\n      .then((response: AxiosResponse<Array<PureModelData<CollectionStatus>>>) => {\n        return response.data.map((collectionStatus: PureModelData<CollectionStatus>) => {\n          return CollectionStatus.clone<CollectionStatus>(collectionStatus);\n        });\n      });\n  };\n}\n\nexport default new CollectionDetailRepository();\n","import Button from 'antd/lib/button';\nimport Card from 'antd/lib/card';\nimport DatePicker from 'antd/lib/date-picker';\nimport Form from 'antd/lib/form';\nimport Input from 'antd/lib/input';\nimport Spin from 'antd/lib/spin';\nimport CardTitle from 'components/CardTitle/CardTitle';\nimport Select from 'components/Select/Select';\nimport { formItemLayout } from 'config/consts';\nimport { COLLECTION_ROUTE } from 'config/route-consts';\nimport { hasError } from 'core/helpers/form';\nimport * as CoreHooks from 'core/hooks';\nimport * as Hooks from 'hooks';\nimport { Collection } from 'models/Collection';\nimport { CollectionStatus } from 'models/CollectionStatus';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport nameof from 'ts-nameof.macro';\nimport CollectionContentTable from 'views/CollectionView/CollectionDetail/CollectionContentTable/CollectionContentTable';\nimport './CollectionDetail.scss';\n\nimport repository from './CollectionDetailRepository';\n\nfunction CollectionDetail() {\n  const [translate] = useTranslation();\n\n  // tslint:disable-next-line:max-line-length\n  const [collection, setCollection, loading, setLoading, isDetail, handleGoBack, handleSave] = CoreHooks.useDetail<Collection>(COLLECTION_ROUTE, repository.get, repository.save);\n\n  const [handleUpdateSimpleField, handleUpdateObjectField, handleUpdateDateField] = CoreHooks.useChangeHandlers<Collection>(collection, setCollection);\n  const handleDelete = Hooks.useDeleteHandler<Collection>(repository.delete, setLoading, collection, setCollection);\n  // Enums  -----------------------------------------------------------------------------------------------------------------------------------------\n\n  const [statuses] = CoreHooks.useEnumList<CollectionStatus>(repository.singleListCollectionStatus);\n\n  // -------------------------------------------------------------------------------------------------------------------------------------------------\n\n  // Reference  -------------------------------------------------------------------------------------------------------------------------------------\n\n  // -------------------------------------------------------------------------------------------------------------------------------------------------\n\n  // Default List -----------------------------------------------------------------------------------------------------------------------------------\n\n  // -------------------------------------------------------------------------------------------------------------------------------------------------\n\n  const pageTitle = React.useMemo(\n    () => isDetail ? translate('collection.detail.title', collection) : translate('collection.detail.newTitle'),\n    [isDetail, collection, translate],\n  );\n\n  const actions = React.useMemo(\n    () => (\n      <div className=\"page-detail-actions\">\n        <Button htmlType=\"button\" type=\"primary\" onClick={handleSave}>\n          {translate('general.actions.save')}\n        </Button>\n      </div>\n    ),\n    [handleSave, translate],\n  );\n\n  return (\n    <Spin spinning={loading}>\n      <div className=\"container-fluid page-detail product-detail\">\n        <Card title={<CardTitle title={pageTitle} onBack={handleGoBack} />}>\n          {actions}\n          <Form {...formItemLayout}>\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <Form.Item label={translate('collection.id')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.id))}\n                  help={collection.errors?.id}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(collection.id)}\n                    value={collection?.id}\n                    onChange={handleUpdateSimpleField(nameof(collection.id))}\n                  />\n                </Form.Item>\n                <Form.Item label={translate('collection.name')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.name))}\n                  help={collection.errors?.name}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(collection.name)}\n                    value={collection?.name}\n                    onChange={handleUpdateSimpleField(nameof(collection.name))}\n                  />\n                </Form.Item>\n                <Form.Item label={translate('collection.slug')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.slug))}\n                  help={collection.errors?.slug}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(collection.slug)}\n                    value={collection?.slug}\n                    onChange={handleUpdateSimpleField(nameof(collection.slug))}\n                  />\n                </Form.Item>\n                <Form.Item label={translate('collection.start')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.start))}\n                  help={collection.errors?.start}\n                >\n                  <DatePicker\n                    defaultValue={collection.start}\n                    onChange={handleUpdateDateField(nameof(collection.start))}\n                  />\n                </Form.Item>\n                <Form.Item label={translate('collection.end')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.end))}\n                  help={collection.errors?.end}\n                >\n                  <DatePicker\n                    defaultValue={collection.end}\n                    onChange={handleUpdateDateField(nameof(collection.end))}\n                  />\n                </Form.Item>\n                <Form.Item label={translate('collection.title')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.title))}\n                  help={collection.errors?.title}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(collection.title)}\n                    value={collection?.title}\n                    onChange={handleUpdateSimpleField(nameof(collection.title))}\n                  />\n                </Form.Item>\n                <Form.Item label={translate('collection.description')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.description))}\n                  help={collection.errors?.description}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(collection.description)}\n                    value={collection?.description}\n                    onChange={handleUpdateSimpleField(nameof(collection.description))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('collection.status')}\n                  validateStatus={hasError<Collection>(collection, nameof(collection.status))}\n                  help={collection.errors?.status}\n                >\n                  <Select\n                    list={statuses}\n                    value={collection?.statusId}\n                    onChange={handleUpdateObjectField(nameof(collection.status))}\n                  />\n                </Form.Item>\n              </div>\n            </div>\n          </Form>\n          <Form.Item\n            label={translate('collection.collectionContents')}\n          >\n            <CollectionContentTable model={collection}\n              setModel={setCollection}\n              field={nameof(collection.collectionContents)} />\n          </Form.Item>\n          <div className=\"page-detail-actions\">\n            <Button htmlType=\"button\" type=\"link\" className=\"page-detail-delete\" onClick={handleDelete}>\n              {translate('general.actions.delete')}\n            </Button>\n            <Button htmlType=\"button\" type=\"primary\" onClick={handleSave}>\n              {translate('general.actions.save')}\n            </Button>\n          </div>\n        </Card>\n      </div>\n    </Spin>\n  );\n}\n\nexport default CollectionDetail;\n","import DatePicker from 'antd/lib/date-picker';\nimport 'components/AdvancedDateFilter/AdvancedDateFilter.scss';\nimport {DateFilter} from 'core/filters';\nimport {Moment} from 'moment';\nimport React from 'react';\nimport nameof from 'ts-nameof.macro';\n\ninterface AdvancedDateFilterProps {\n  filter: DateFilter;\n\n  defaultType?: string;\n\n  onChange?(filter: DateFilter);\n}\n\nfunction AdvancedDateFilter(props: AdvancedDateFilterProps) {\n  const {\n    filter,\n    defaultType,\n    onChange,\n  } = props;\n\n  const [type] = React.useState<keyof DateFilter>((defaultType ?? DateFilter.types()[0]) as keyof DateFilter);\n\n  const handleChangeRange = React.useCallback(\n    (range) => {\n      filter.greaterEqual = range[0];\n      filter.lessEqual = range[1];\n      if (onChange) {\n        onChange(filter);\n      }\n    },\n    [filter, onChange],\n  );\n\n  const handleChange = React.useCallback(\n    (value: Moment) => {\n      filter[type as any] = value;\n      if (onChange) {\n        onChange(filter);\n      }\n    },\n    [filter, onChange, type],\n  );\n\n  return React.useMemo(\n    () => {\n      if (type === nameof(filter.range)) {\n        const dateFilterRange: [Moment | null | undefined, Moment | null | undefined] = [filter.greaterEqual, filter.lessEqual];\n        return (\n          <DatePicker.RangePicker value={dateFilterRange}\n                                  onChange={handleChangeRange}\n          />\n        );\n      }\n      return (\n        <DatePicker value={filter[type] as Moment}\n                    onChange={handleChange}\n        />\n      );\n    },\n    [filter, handleChange, handleChangeRange, type],\n  );\n}\n\nexport default AdvancedDateFilter;\n","import 'components/AdvancedIdFilter/AdvancedIdFilter.scss';\nimport Select, {SelectProps} from 'components/Select/Select';\nimport {GuidFilter, IdFilter} from 'core/filters';\nimport {Model, Search} from 'core/models';\nimport React from 'react';\n\ninterface AdvancedIdFilterProps<T extends Model, TSearch extends Search> extends SelectProps<T, TSearch> {\n  filter: IdFilter | GuidFilter;\n\n  onChange?: any;\n}\n\nfunction AdvancedIdFilter<T extends Model, TSearch extends Search>(props: AdvancedIdFilterProps<T, TSearch>) {\n  const {list, filter} = props;\n\n  const onChange: (filter: IdFilter | GuidFilter) => void = props.onChange;\n\n  const handleChange = React.useCallback(\n    (id: string | number) => {\n      filter.equal = id;\n      if (typeof onChange === 'function') {\n        onChange(filter);\n      }\n    },\n    [filter, onChange],\n  );\n\n  return (\n    <Select\n      list={list}\n      value={filter?.equal}\n      {...props}\n      onChange={handleChange}\n      allowClear={true}\n    />\n  );\n}\n\nexport default AdvancedIdFilter;\n","import {DateFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class CollectionSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public name?: StringFilter = new StringFilter();\n\n  public slug?: StringFilter = new StringFilter();\n\n  public start?: DateFilter = new DateFilter();\n\n  public end?: DateFilter = new DateFilter();\n\n  public statusId?: NumberFilter = new NumberFilter();\n\n  public title?: StringFilter = new StringFilter();\n\n  public description?: StringFilter = new StringFilter();\n}\n","import {AxiosResponse} from 'axios';\n\nimport {API_COLLECTION_MASTER_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Model} from 'core/models';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Collection} from 'models/Collection';\nimport {CollectionSearch} from 'models/CollectionSearch';\nimport {CollectionStatus} from 'models/CollectionStatus';\nimport {CollectionStatusSearch} from 'models/CollectionStatusSearch';\nimport nameof from 'ts-nameof.macro';\n\nexport class CollectionMasterRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_COLLECTION_MASTER_ROUTE));\n  }\n\n  public count = (collectionSearch: CollectionSearch): Promise<number> => {\n    return this.http.post<number>(kebabCase(nameof(this.count)), collectionSearch)\n      .then((response: AxiosResponse<number>) => {\n        return response.data;\n      });\n  };\n\n  public list = (collectionSearch: CollectionSearch): Promise<Collection[]> => {\n    return this.http.post<Collection[]>(kebabCase(nameof(this.list)), collectionSearch)\n      .then((response: AxiosResponse<Array<PureModelData<Collection>>>) => {\n        return response.data.map((collection: PureModelData<Collection>) => {\n          return Collection.clone<Collection>(collection);\n        });\n      });\n  };\n\n  public get = (collection: Collection): Promise<Collection> => {\n    return this.http.post<Collection>(kebabCase(nameof(this.get)), collection)\n      .then((response: AxiosResponse<Collection>) => {\n        return Collection.clone<Collection>(response.data);\n      });\n  };\n\n  public delete = (collection: Collection): Promise<Collection> => {\n    return this.http.post<Collection>(kebabCase(nameof(this.delete)), collection)\n      .then((response: AxiosResponse<Collection>) => {\n        return Model.clone<Collection>(response.data);\n      });\n  };\n\n  public singleListCollectionStatus = (): Promise<CollectionStatus[]> => {\n    return this.http.post<CollectionStatus[]>(kebabCase(nameof(this.singleListCollectionStatus)), new CollectionStatusSearch())\n      .then((response: AxiosResponse<Array<PureModelData<CollectionStatus>>>) => {\n        return response.data.map((collectionStatus: PureModelData<CollectionStatus>) => {\n          return CollectionStatus.clone<CollectionStatus>(collectionStatus);\n        });\n      });\n  };\n}\n\nexport default new CollectionMasterRepository();\n","import Button from 'antd/lib/button';\nimport Card from 'antd/lib/card';\nimport Table, {ColumnProps} from 'antd/lib/table';\nimport AdvancedDateFilter from 'components/AdvancedDateFilter/AdvancedDateFilter';\nimport AdvancedIdFilter from 'components/AdvancedIdFilter/AdvancedIdFilter';\nimport AdvancedNumberFilter from 'components/AdvancedNumberFilter/AdvancedNumberFilter';\nimport AdvancedStringFilter from 'components/AdvancedStringFilter/AdvancedStringFilter';\nimport {COLUMN_WIDTH, MASTER_KEYS} from 'config/consts';\nimport {COLLECTION_ROUTE} from 'config/route-consts';\nimport {withTableFilterSuffix} from 'core/helpers/string';\nimport {renderMasterIndex} from 'core/helpers/view';\nimport * as CoreHooks from 'core/hooks';\nimport * as Hooks from 'hooks';\nimport {Collection} from 'models/Collection';\nimport {CollectionSearch} from 'models/CollectionSearch';\n\nimport {CollectionStatus} from 'models/CollectionStatus';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport nameof from 'ts-nameof.macro';\nimport './CollectionMaster.scss';\nimport repository from './CollectionMasterRepository';\n\nconst columnWidth = {\n  index: COLUMN_WIDTH.index,\n  id: 250,\n  name: 250,\n  slug: 250,\n  start: 250,\n  end: 250,\n  statusId: 250,\n  title: 250,\n  description: 250,\n  status: 250,\n  actions: COLUMN_WIDTH.actions,\n};\n\nconst tableScroll = {\n  x: 9 * 250 + COLUMN_WIDTH.actions + COLUMN_WIDTH.index,\n};\n\nfunction CollectionMaster() {\n  const [translate] = useTranslation();\n  const [search, setSearch] = CoreHooks.useQuery<CollectionSearch>(...React.useState<CollectionSearch>(new CollectionSearch()));\n  // tslint:disable-next-line:max-line-length\n  const [list, total, loading, , handleAdd, handleReset, handleEdit, handleFilter] = CoreHooks.useMaster<Collection, CollectionSearch>(COLLECTION_ROUTE, repository.list, repository.count, search, setSearch);\n  const [pagination, sorter, handleTableChange] = Hooks.useMasterTable<Collection, CollectionSearch>(search, setSearch, total);\n  // Enums  -----------------------------------------------------------------------------------------------------------------------------------------\n\n  const [statuses] = CoreHooks.useEnumList<CollectionStatus>(repository.singleListCollectionStatus);\n\n  // ------------------------------------------------------------------------------------------------------------------------------------------------\n\n  // Reference  -------------------------------------------------------------------------------------------------------------------------------------\n\n  // ------------------------------------------------------------------------------------------------------------------------------------------------\n  const columns: Array<ColumnProps<Collection>> = React.useMemo(\n    () => {\n      return [\n        {\n          title: translate(MASTER_KEYS.index),\n          key: nameof(MASTER_KEYS.index),\n          width: columnWidth.index,\n          className: 'center',\n          fixed: 'left',\n          dataIndex: nameof(list[0].id),\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(MASTER_KEYS.index)),\n              width: columnWidth.index,\n              className: 'center',\n              fixed: 'left',\n              dataIndex: nameof(list[0].id),\n              render: renderMasterIndex<Collection>(pagination),\n            },\n          ],\n        },\n        {\n          title: translate('collection.id'),\n          key: nameof(list[0].id),\n          width: columnWidth.id,\n          dataIndex: nameof(list[0].id),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].id), sorter),\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(list[0].id)),\n              width: columnWidth.id,\n              dataIndex: nameof(list[0].id),\n            },\n          ],\n        },\n        {\n          title: translate('collection.name'),\n          key: nameof(list[0].name),\n          width: columnWidth.name,\n          dataIndex: nameof(list[0].name),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].name), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter\n                  filter={search.name}\n                  defaultType={nameof(search.name.startWith)}\n                  onChange={handleFilter(nameof(search.name))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].name)),\n              width: columnWidth.name,\n              dataIndex: nameof(list[0].name),\n            },\n          ],\n        },\n        {\n          title: translate('collection.slug'),\n          key: nameof(list[0].slug),\n          width: columnWidth.slug,\n          dataIndex: nameof(list[0].slug),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].slug), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter\n                  filter={search.slug}\n                  defaultType={nameof(search.slug.startWith)}\n                  onChange={handleFilter(nameof(search.slug))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].slug)),\n              width: columnWidth.slug,\n              dataIndex: nameof(list[0].slug),\n            },\n          ],\n        },\n        {\n          title: translate('collection.start'),\n          key: nameof(list[0].start),\n          width: columnWidth.start,\n          dataIndex: nameof(list[0].start),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].start), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedDateFilter filter={search.start}\n                                    defaultType={nameof(search.start.equal)}\n                                    onChange={handleFilter(nameof(search.start))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].start)),\n              width: columnWidth.start,\n              dataIndex: nameof(list[0].start),\n            },\n          ],\n        },\n        {\n          title: translate('collection.end'),\n          key: nameof(list[0].end),\n          width: columnWidth.end,\n          dataIndex: nameof(list[0].end),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].end), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedDateFilter filter={search.end}\n                                    defaultType={nameof(search.end.equal)}\n                                    onChange={handleFilter(nameof(search.end))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].end)),\n              width: columnWidth.end,\n              dataIndex: nameof(list[0].end),\n            },\n          ],\n        },\n        {\n          title: translate('collection.statusId'),\n          key: nameof(list[0].statusId),\n          width: columnWidth.statusId,\n          dataIndex: nameof(list[0].statusId),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].statusId), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedNumberFilter\n                  filter={search.statusId}\n                  defaultType={nameof(search.statusId.range)}\n                  onChange={handleFilter(nameof(search.statusId))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].statusId)),\n              width: columnWidth.statusId,\n              dataIndex: nameof(list[0].statusId),\n            },\n          ],\n        },\n        {\n          title: translate('collection.title'),\n          key: nameof(list[0].title),\n          width: columnWidth.title,\n          dataIndex: nameof(list[0].title),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].title), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter\n                  filter={search.title}\n                  defaultType={nameof(search.title.startWith)}\n                  onChange={handleFilter(nameof(search.title))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].title)),\n              width: columnWidth.title,\n              dataIndex: nameof(list[0].title),\n            },\n          ],\n        },\n        {\n          title: translate('collection.description'),\n          key: nameof(list[0].description),\n          width: columnWidth.description,\n          dataIndex: nameof(list[0].description),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].description), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter\n                  filter={search.description}\n                  defaultType={nameof(search.description.startWith)}\n                  onChange={handleFilter(nameof(search.description))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].description)),\n              width: columnWidth.description,\n              dataIndex: nameof(list[0].description),\n            },\n          ],\n        },\n        {\n          title: translate('collection.status'),\n          key: nameof(list[0].status),\n          width: columnWidth.status,\n          dataIndex: nameof(list[0].status),\n          sorter: true,\n          sortOrder: CollectionSearch.getOrderTypeForTable<Collection>(nameof(list[0].statusId), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedIdFilter\n                  list={statuses}\n                  filter={search.statusId}\n                  onChange={handleFilter(nameof(search.statusId))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].status)),\n              width: columnWidth.status,\n              dataIndex: nameof(list[0].status),\n              render(collectionStatus: CollectionStatus) {\n                return collectionStatus?.id;\n              },\n            },\n          ],\n        },\n        {\n          title: translate(MASTER_KEYS.actions),\n          key: nameof(MASTER_KEYS.actions),\n          width: columnWidth.actions,\n          className: 'center actions',\n          fixed: 'right',\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(MASTER_KEYS.actions)),\n              dataIndex: nameof(list[0].id),\n              width: columnWidth.actions,\n              className: 'center actions filter-placeholder',\n              fixed: 'right',\n              render: (id: number) => {\n                return (\n                  <>\n                    <Button htmlType=\"button\" type=\"link\" onClick={handleEdit(id)}>\n                      {translate('general.actions.edit')}\n                    </Button>\n                  </>\n                );\n              },\n            },\n          ],\n        },\n      ];\n    },\n    // tslint:disable-next-line:max-line-length\n    [translate, list, pagination, sorter, search.name, search.slug, search.start, search.end, search.title, search.description, search.statusId, handleFilter, statuses, handleEdit],\n  );\n\n  return (\n    <Card title={translate('collection.master.title')}>\n      <Table\n        tableLayout=\"fixed\"\n        className=\"master-table collection-master-table\"\n        rowKey=\"id\"\n        size=\"small\"\n        bordered\n        pagination={pagination}\n        columns={columns}\n        dataSource={list}\n        loading={loading}\n        onChange={handleTableChange}\n        title={() => (\n          <div className=\"table-actions\">\n            <Button htmlType=\"button\" type=\"primary\" icon=\"plus\" onClick={handleAdd}>\n              {translate('general.actions.add')}\n            </Button>\n            <Button htmlType=\"button\" type=\"default\" icon=\"filter\" onClick={handleReset}>\n              {translate('general.actions.reset')}\n            </Button>\n          </div>\n        )}\n        scroll={tableScroll}\n      />\n    </Card>\n  );\n}\n\nexport default CollectionMaster;\n","import React from 'react';\nimport {renderRoutes, RouteConfigComponentProps} from 'react-router-config';\nimport {Switch, withRouter} from 'react-router-dom';\nimport CollectionDetail from './CollectionDetail/CollectionDetail';\nimport CollectionMaster from './CollectionMaster/CollectionMaster';\nimport './CollectionView.scss';\n\nfunction CollectionView(props: RouteConfigComponentProps) {\n  const {route} = props;\n\n  return (\n    <Switch>\n      {route && renderRoutes(route.children)}\n    </Switch>\n  );\n}\n\nexport {CollectionMaster, CollectionDetail};\n\nexport default withRouter(CollectionView);\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class MerchantSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public name?: StringFilter = new StringFilter();\n\n  public phone?: StringFilter = new StringFilter();\n\n  public contactPerson?: StringFilter = new StringFilter();\n\n  public address?: StringFilter = new StringFilter();\n\n  public provinceId?: IdFilter = new IdFilter();\n\n  public statusId?: IdFilter = new IdFilter();\n}\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class ProductStatusSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public code?: StringFilter = new StringFilter();\n\n  public name?: StringFilter = new StringFilter();\n}\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class ProductTypeSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public code?: StringFilter = new StringFilter();\n\n  public name?: StringFilter = new StringFilter();\n}\n","import {AxiosResponse} from 'axios';\nimport {API_PRODUCT_DETAIL_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Repository} from 'core/repositories';\nimport kebabCase from 'lodash/kebabCase';\nimport {Merchant} from 'models/Merchant';\nimport {MerchantSearch} from 'models/MerchantSearch';\nimport {Product} from 'models/Product';\nimport {ProductSearch} from 'models/ProductSearch';\nimport {ProductStatus} from 'models/ProductStatus';\nimport {ProductStatusSearch} from 'models/ProductStatusSearch';\nimport {ProductType} from 'models/ProductType';\nimport {ProductTypeSearch} from 'models/ProductTypeSearch';\nimport nameof from 'ts-nameof.macro';\n\nexport class ProductDetailRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_PRODUCT_DETAIL_ROUTE));\n  }\n\n  public list = (productSearch: ProductSearch): Promise<Product[]> => {\n    return this.http.post<Product[]>(kebabCase(nameof(this.list)), productSearch)\n      .then((response: AxiosResponse<Product[]>) => {\n        return response.data.map((product: Product) => {\n          return Product.clone<Product>(product);\n        });\n      });\n  };\n\n  public listProductType = (): Promise<ProductType[]> => {\n    return this.http.post<ProductType[]>(kebabCase(nameof(this.listProductType)))\n      .then((response: AxiosResponse<ProductType[]>) => {\n        return response.data.map((productType: ProductType) => {\n          return ProductType.clone<ProductType>(productType);\n        });\n      });\n  };\n\n  public count = (productSearch: ProductSearch): Promise<number> => {\n    return this.http.post<number>(kebabCase(nameof(this.count)), productSearch)\n      .then((response: AxiosResponse<number>) => {\n        return response.data;\n      });\n  };\n\n  public delete = (product: Product): Promise<Product> => {\n    return this.http.post<Product>(kebabCase(nameof(this.delete)), product)\n      .then((response: AxiosResponse<Product>) => {\n        return Product.clone<Product>(response.data);\n      });\n  };\n\n  public get = (product: Product): Promise<Product> => {\n    return this.http.post<Product>(kebabCase(nameof(this.get)), product)\n      .then((response: AxiosResponse<Product>) => {\n        return Product.clone<Product>(response.data);\n      });\n  };\n\n  public singleListProductStatus = (): Promise<ProductStatus[]> => {\n    return this.http.post<ProductStatus[]>(kebabCase(nameof(this.singleListProductStatus)), new ProductStatusSearch())\n      .then((response: AxiosResponse<ProductStatus[]>) => {\n        return response.data.map((productType: ProductStatus) => {\n          return ProductStatus.clone<ProductStatus>(productType);\n        });\n      });\n  };\n\n  public singleListProductType = (): Promise<ProductType[]> => {\n    return this.http.post<ProductType[]>(kebabCase(nameof(this.singleListProductType)), new ProductTypeSearch())\n      .then((response: AxiosResponse<ProductType[]>) => {\n        return response.data.map((productType: ProductType) => {\n          return ProductType.clone<ProductType>(productType);\n        });\n      });\n  };\n\n  public singleListMerchant = (merchantSearch: MerchantSearch): Promise<Merchant[]> => {\n    return this.http.post<Merchant[]>(kebabCase(nameof(this.singleListMerchant)), merchantSearch)\n      .then((response: AxiosResponse<Merchant[]>) => {\n        return response.data.map((merchant: Merchant) => {\n          return Merchant.clone<Merchant>(merchant);\n        });\n      });\n  };\n\n  public update = (product: Product): Promise<Product> => {\n    return this.http.post<Product>(kebabCase(nameof(this.update)), product)\n      .then((response: AxiosResponse<Product>) => {\n        return Product.clone<Product>(response.data);\n      });\n  };\n\n  public create = (product: Product): Promise<Product> => {\n    return this.http.post<Product>(kebabCase(nameof(this.create)), product)\n      .then((response: AxiosResponse<Product>) => {\n        return Product.clone<Product>(response.data);\n      });\n  };\n\n  public save = (product: Product): Promise<Product> => {\n    if (product.id) {\n      return this.update(product);\n    }\n    return this.create(product);\n  };\n}\n\nexport default new ProductDetailRepository();\n","import Button from 'antd/lib/button';\nimport Card from 'antd/lib/card';\nimport DatePicker from 'antd/lib/date-picker';\nimport Form from 'antd/lib/form';\nimport Input from 'antd/lib/input';\nimport Spin from 'antd/lib/spin';\nimport Switch from 'antd/lib/switch';\nimport CardTitle from 'components/CardTitle/CardTitle';\nimport Select from 'components/Select/Select';\nimport {formItemLayout} from 'config/consts';\nimport {PRODUCT_ROUTE} from 'config/route-consts';\nimport {hasError} from 'core/helpers/form';\nimport * as CoreHooks from 'core/hooks';\nimport {useChangeHandlers} from 'core/hooks/useChangeHandlers';\nimport {useDeleteHandler} from 'hooks/useDeleteHandler';\nimport {Merchant} from 'models/Merchant';\nimport {MerchantSearch} from 'models/MerchantSearch';\nimport {Product} from 'models/Product';\nimport {ProductStatus} from 'models/ProductStatus';\nimport {ProductType} from 'models/ProductType';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport nameof from 'ts-nameof.macro';\nimport repository from 'views/ProductView/ProductDetail/ProductDetailRepository';\nimport './ProductDetail.scss';\n\nfunction ProductDetail() {\n  const [translate] = useTranslation();\n\n  // tslint:disable-next-line:max-line-length\n  const [product, setProduct, loading, setLoading, isDetail, handleGoBack, handleSave] = CoreHooks.useDetail<Product>(PRODUCT_ROUTE, repository.get, repository.save);\n\n  // Detail change handlers\n  // tslint:disable-next-line:max-line-length\n  const [handleUpdateSimpleField, handleUpdateObjectField, handleUpdateDateField] = useChangeHandlers<Product>(product, setProduct);\n\n  const handleDelete = useDeleteHandler<Product>(repository.delete, setLoading, product, setProduct);\n\n  /**\n   * -------------------------------------------------------------------------------------------------------------------\n   * This section is to place enum lists\n   */\n  const [productStatus] = CoreHooks.useEnumList<ProductStatus>(repository.singleListProductStatus);\n\n  const [productTypes] = CoreHooks.useEnumList<ProductType>(repository.singleListProductType);\n  /**\n   * End of enum lists\n   * -------------------------------------------------------------------------------------------------------------------\n   */\n\n  /**\n   * Reference search entities\n   */\n  const [merchantSearch, setMerchantSearch] = React.useState<MerchantSearch>(new MerchantSearch());\n\n  /**\n   * End of reference search entities\n   * -------------------------------------------------------------------------------------------------------------------\n   */\n\n  /**\n   * -------------------------------------------------------------------------------------------------------------------\n   * Default lists of select boxes\n   */\n  const defaultMerchantList: Merchant[] = CoreHooks.useDefaultList<Product, Merchant>(product, nameof(product.merchant));\n  /**\n   * End of default lists\n   * -------------------------------------------------------------------------------------------------------------------\n   */\n\n  /**\n   * Title for \"Create new\" page and \"Detail of existed\" page\n   */\n  const pageTitle = React.useMemo(\n    () => isDetail ? translate('product.detail.title', product) : translate('product.detail.newTitle'),\n    [isDetail, product, translate],\n  );\n\n  return (\n    <Spin spinning={loading}>\n      <div className=\"container-fluid page-detail product-detail\">\n        <Card title={<CardTitle title={pageTitle} onBack={handleGoBack}/>}>\n          <div className=\"page-detail-actions\">\n            <Button htmlType=\"button\" type=\"primary\" onClick={handleSave}>\n              {translate('general.actions.save')}\n            </Button>\n          </div>\n          <Form {...formItemLayout}>\n            <div className=\"row\">\n              <div className=\"col-6 offset-2\">\n                <Form.Item\n                  label={translate('product.id')}\n                  validateStatus={hasError<Product>(product, nameof(product.id))}\n                  help={product.errors?.id}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(product.id)}\n                    value={product?.id}\n                    onChange={handleUpdateSimpleField(nameof(product.id))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('product.name')}\n                  validateStatus={hasError<Product>(product, nameof(product.name))}\n                  help={product.errors?.name}\n                >\n                  <Input\n                    type=\"text\"\n                    name={nameof(product.name)}\n                    value={product?.name}\n                    onChange={handleUpdateSimpleField(nameof(product.name))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('product.type')}\n                  validateStatus={hasError<Product>(product, nameof(product.type))}\n                  help={product.errors?.type}\n                >\n                  <Select\n                    list={productTypes}\n                    value={product?.typeId}\n                    onChange={handleUpdateObjectField(nameof(product.type))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('product.status')}\n                  validateStatus={hasError<Product>(product, nameof(product.status))}\n                  help={product.errors?.status}\n                >\n                  <Select\n                    list={productStatus}\n                    value={product?.statusId}\n                    onChange={handleUpdateObjectField(nameof(product.status))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('product.expiredDate')}\n                  validateStatus={hasError<Product>(product, nameof(product.expiredDate))}\n                  help={product.errors?.expiredDate}\n                >\n                  <DatePicker\n                    defaultValue={product.expiredDate}\n                    onChange={handleUpdateDateField(nameof(product.expiredDate))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('product.merchant')}\n                  validateStatus={hasError<Product>(product, nameof(product.merchant))}\n                  help={product.errors?.merchant}\n                >\n                  <Select\n                    list={defaultMerchantList}\n                    getList={repository.singleListMerchant}\n                    search={merchantSearch}\n                    setSearch={setMerchantSearch}\n                    searchField={nameof(merchantSearch.name)}\n                    value={product?.merchantId}\n                    onChange={handleUpdateObjectField(nameof(product.merchant))}\n                  />\n                </Form.Item>\n                <Form.Item\n                  label={translate('product.disabled')}\n                  validateStatus={hasError<Product>(product, nameof(product.disabled))}\n                  help={product.errors?.disabled}\n                >\n                  <Switch\n                    defaultChecked={product.disabled}\n                    onChange={handleUpdateSimpleField(nameof(product.disabled))}\n                  />\n                </Form.Item>\n              </div>\n            </div>\n          </Form>\n          <div className=\"page-detail-actions\">\n            <Button htmlType=\"button\" type=\"link\" className=\"page-detail-delete\" onClick={handleDelete}>\n              {translate('general.actions.delete')}\n            </Button>\n            <Button htmlType=\"button\" type=\"primary\" onClick={handleSave}>\n              {translate('general.actions.save')}\n            </Button>\n          </div>\n        </Card>\n      </div>\n    </Spin>\n  );\n}\n\nexport default ProductDetail;\n","import {DateFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class ProductSearch extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public name?: StringFilter = new StringFilter();\n\n  public slug?: StringFilter = new StringFilter();\n\n  public description?: StringFilter = new StringFilter();\n\n  public typeId?: IdFilter = new IdFilter();\n\n  public statusId?: IdFilter = new IdFilter();\n\n  public merchantId?: IdFilter = new IdFilter();\n\n  public categoryId?: IdFilter = new IdFilter();\n\n  public brandId?: IdFilter = new IdFilter();\n\n  public keyFeatures?: StringFilter = new StringFilter();\n\n  public warrantyPolicy?: StringFilter = new StringFilter();\n\n  public returnPolicy?: StringFilter = new StringFilter();\n\n  public expiredDate?: DateFilter = new DateFilter();\n\n  public conditionOfUse?: StringFilter = new StringFilter();\n\n  public maximumPurchaseQuantity?: NumberFilter = new NumberFilter();\n\n  public firstVariationGroupingName?: StringFilter = new StringFilter();\n\n  public firstVariationGroupingValue?: StringFilter = new StringFilter();\n\n  public secondVariationGroupingName?: StringFilter = new StringFilter();\n\n  public secondVariationGroupingValue?: StringFilter = new StringFilter();\n}\n","import {AxiosResponse} from 'axios';\n\nimport {API_PRODUCT_MASTER_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Model} from 'core/models';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Brand} from 'models/Brand';\nimport {BrandSearch} from 'models/BrandSearch';\nimport {Category} from 'models/Category';\nimport {CategorySearch} from 'models/CategorySearch';\nimport {Merchant} from 'models/Merchant';\nimport {MerchantSearch} from 'models/MerchantSearch';\nimport {Product} from 'models/Product';\nimport {ProductSearch} from 'models/ProductSearch';\nimport {ProductStatus} from 'models/ProductStatus';\nimport {ProductStatusSearch} from 'models/ProductStatusSearch';\nimport {ProductType} from 'models/ProductType';\nimport {ProductTypeSearch} from 'models/ProductTypeSearch';\nimport nameof from 'ts-nameof.macro';\n\nexport class ProductMasterRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_PRODUCT_MASTER_ROUTE));\n  }\n\n  public count = (productSearch: ProductSearch): Promise<number> => {\n    return this.http.post<number>(kebabCase(nameof(this.count)), productSearch)\n      .then((response: AxiosResponse<number>) => {\n        return response.data;\n      });\n  };\n\n  public list = (productSearch: ProductSearch): Promise<Product[]> => {\n    return this.http.post<Product[]>(kebabCase(nameof(this.list)), productSearch)\n      .then((response: AxiosResponse<Array<PureModelData<Product>>>) => {\n        return response.data.map((product: PureModelData<Product>) => {\n          return Product.clone<Product>(product);\n        });\n      });\n  };\n\n  public get = (product: Product): Promise<Product> => {\n    return this.http.post<Product>(kebabCase(nameof(this.get)), product)\n      .then((response: AxiosResponse<Product>) => {\n        return Product.clone<Product>(response.data);\n      });\n  };\n\n  public delete = (product: Product): Promise<Product> => {\n    return this.http.post<Product>(kebabCase(nameof(this.delete)), product)\n      .then((response: AxiosResponse<Product>) => {\n        return Model.clone<Product>(response.data);\n      });\n  };\n\n  public singleListBrand = (brandSearch: BrandSearch): Promise<Brand[]> => {\n    return this.http.post<Brand[]>(kebabCase(nameof(this.singleListBrand)), brandSearch)\n      .then((response: AxiosResponse<Array<PureModelData<Brand>>>) => {\n        return response.data.map((brand: PureModelData<Brand>) => {\n          return Brand.clone<Brand>(brand);\n        });\n      });\n  };\n\n  public singleListCategory = (categorySearch: CategorySearch): Promise<Category[]> => {\n    return this.http.post<Category[]>(kebabCase(nameof(this.singleListCategory)), categorySearch)\n      .then((response: AxiosResponse<Array<PureModelData<Category>>>) => {\n        return response.data.map((category: PureModelData<Category>) => {\n          return Category.clone<Category>(category);\n        });\n      });\n  };\n\n  public singleListMerchant = (merchantSearch: MerchantSearch): Promise<Merchant[]> => {\n    return this.http.post<Merchant[]>(kebabCase(nameof(this.singleListMerchant)), merchantSearch)\n      .then((response: AxiosResponse<Array<PureModelData<Merchant>>>) => {\n        return response.data.map((merchant: PureModelData<Merchant>) => {\n          return Merchant.clone<Merchant>(merchant);\n        });\n      });\n  };\n\n  public singleListProductStatus = (): Promise<ProductStatus[]> => {\n    return this.http.post<ProductStatus[]>(kebabCase(nameof(this.singleListProductStatus)), new ProductStatusSearch())\n      .then((response: AxiosResponse<Array<PureModelData<ProductStatus>>>) => {\n        return response.data.map((productStatus: PureModelData<ProductStatus>) => {\n          return ProductStatus.clone<ProductStatus>(productStatus);\n        });\n      });\n  };\n\n  public singleListProductType = (): Promise<ProductType[]> => {\n    return this.http.post<ProductType[]>(kebabCase(nameof(this.singleListProductType)), new ProductTypeSearch())\n      .then((response: AxiosResponse<Array<PureModelData<ProductType>>>) => {\n        return response.data.map((productType: PureModelData<ProductType>) => {\n          return ProductType.clone<ProductType>(productType);\n        });\n      });\n  };\n}\n\nexport default new ProductMasterRepository();\n","import Button from 'antd/lib/button';\nimport Card from 'antd/lib/card';\nimport Table, {ColumnProps} from 'antd/lib/table';\nimport AdvancedIdFilter from 'components/AdvancedIdFilter/AdvancedIdFilter';\nimport AdvancedStringFilter from 'components/AdvancedStringFilter/AdvancedStringFilter';\nimport {COLUMN_WIDTH, MASTER_KEYS} from 'config/consts';\nimport {PRODUCT_ROUTE} from 'config/route-consts';\nimport {withTableFilterSuffix} from 'core/helpers/string';\nimport {renderMasterIndex} from 'core/helpers/view';\nimport * as CoreHooks from 'core/hooks';\nimport {useMasterTable} from 'hooks/useMasterTable';\nimport {Merchant} from 'models/Merchant';\nimport {MerchantSearch} from 'models/MerchantSearch';\nimport {Product} from 'models/Product';\nimport {ProductSearch} from 'models/ProductSearch';\nimport {ProductType} from 'models/ProductType';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport nameof from 'ts-nameof.macro';\nimport repository from 'views/ProductView/ProductMaster/ProductMasterRepository';\nimport './ProductMaster.scss';\n\nconst columnWidth = {\n  index: COLUMN_WIDTH.index,\n  id: undefined,\n  name: undefined,\n  type: undefined,\n  merchant: undefined,\n  actions: COLUMN_WIDTH.actions,\n};\n\nfunction ProductMaster() {\n  const [translate] = useTranslation();\n\n  const [search, setSearch] = CoreHooks.useQuery<ProductSearch>(...React.useState<ProductSearch>(new ProductSearch()));\n\n  // tslint:disable-next-line:max-line-length\n  const [list, total, loading, , handleAdd, handleReset, handleEdit, handleFilter] = CoreHooks.useMaster<Product, ProductSearch>(PRODUCT_ROUTE, repository.list, repository.count, search, setSearch);\n\n  const [pagination, sorter, handleTableChange] = useMasterTable<Product, ProductSearch>(search, setSearch, total);\n\n  /**\n   * -------------------------------------------------------------------------------------------------------------------\n   * Enums\n   */\n  const [productTypes] = CoreHooks.useEnumList<ProductType>(repository.singleListProductType);\n  // const [productStatus] = useEnumList<ProductStatus>(repository.singleListProductStatus);\n  /**\n   * -------------------------------------------------------------------------------------------------------------------\n   */\n\n  /**\n   * -------------------------------------------------------------------------------------------------------------------\n   * Reference search and preloading\n   */\n  const [merchantSearch, setMerchantSearch] = React.useState<MerchantSearch>(new MerchantSearch());\n  const defaultMerchantList = CoreHooks.usePreloadList<Merchant, MerchantSearch>(repository.singleListMerchant, search.merchantId);\n  /**\n   * End of reference search and preloading\n   * -------------------------------------------------------------------------------------------------------------------\n   */\n\n  const columns: Array<ColumnProps<Product>> = React.useMemo(\n    () => {\n      return [\n        {\n          title: translate(MASTER_KEYS.index),\n          key: nameof(MASTER_KEYS.index),\n          width: columnWidth.index,\n          className: 'center',\n          dataIndex: nameof(list[0].id),\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(MASTER_KEYS.index)),\n              width: columnWidth.index,\n              className: 'center',\n              dataIndex: nameof(list[0].id),\n              render: renderMasterIndex<Product>(pagination),\n            },\n          ],\n        },\n        {\n          title: translate('product.id'),\n          key: nameof(list[0].id),\n          width: columnWidth.id,\n          dataIndex: nameof(list[0].id),\n          sorter: true,\n          sortOrder: ProductSearch.getOrderTypeForTable<Product>(nameof(list[0].id), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter\n                  filter={search.id}\n                  defaultType={nameof(search.id.equal)}\n                  onChange={handleFilter(nameof(search.id))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].id)),\n              width: columnWidth.id,\n              dataIndex: nameof(list[0].id),\n            },\n          ],\n        },\n        {\n          title: translate('product.name'),\n          key: nameof(list[0].name),\n          width: columnWidth.name,\n          dataIndex: nameof(list[0].name),\n          sorter: true,\n          sortOrder: ProductSearch.getOrderTypeForTable<Product>(nameof(list[0].name), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedStringFilter\n                  filter={search.name}\n                  defaultType={nameof(search.name.startWith)}\n                  onChange={handleFilter(nameof(search.name))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].name)),\n              width: columnWidth.name,\n              dataIndex: nameof(list[0].name),\n            },\n          ],\n        },\n        {\n          title: translate('product.type'),\n          key: nameof(list[0].type),\n          width: columnWidth.type,\n          dataIndex: nameof(list[0].type),\n          sorter: true,\n          sortOrder: ProductSearch.getOrderTypeForTable<Product>(nameof(list[0].typeId), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedIdFilter\n                  list={productTypes}\n                  filter={search.typeId}\n                  onChange={handleFilter(nameof(search.typeId))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].type)),\n              width: columnWidth.type,\n              dataIndex: nameof(list[0].type),\n              render(productType: ProductType) {\n                return productType?.name;\n              },\n            },\n          ],\n        },\n        {\n          title: translate('product.merchant'),\n          key: nameof(list[0].merchant),\n          width: columnWidth.merchant,\n          dataIndex: nameof(list[0].merchant),\n          sorter: true,\n          sortOrder: ProductSearch.getOrderTypeForTable<Product>(nameof(list[0].merchantId), sorter),\n          children: [\n            {\n              title: (\n                <AdvancedIdFilter\n                  list={defaultMerchantList}\n                  filter={search.merchantId}\n                  getList={repository.singleListMerchant}\n                  search={merchantSearch}\n                  setSearch={setMerchantSearch}\n                  onChange={handleFilter(nameof(search.merchantId))}\n                />\n              ),\n              key: withTableFilterSuffix(nameof(list[0].merchant)),\n              width: columnWidth.merchant,\n              dataIndex: nameof(list[0].merchant),\n              render(merchant: Merchant) {\n                return merchant?.name;\n              },\n            },\n          ],\n        },\n        {\n          title: translate(MASTER_KEYS.actions),\n          key: nameof(MASTER_KEYS.actions),\n          width: columnWidth.actions,\n          className: 'center actions',\n          children: [\n            {\n              key: withTableFilterSuffix(nameof(MASTER_KEYS.actions)),\n              dataIndex: nameof(list[0].id),\n              width: columnWidth.actions,\n              className: 'center actions filter-placeholder',\n              render: (id: number) => {\n                return (\n                  <>\n                    <Button htmlType=\"button\" type=\"link\" onClick={handleEdit(id)}>\n                      {translate('general.actions.edit')}\n                    </Button>\n                  </>\n                );\n              },\n            },\n          ],\n        },\n      ];\n    },\n    // tslint:disable-next-line:max-line-length\n    [defaultMerchantList, handleEdit, handleFilter, list, merchantSearch, pagination, productTypes, search.id, search.merchantId, search.name, search.typeId, sorter, translate],\n  );\n\n  return (\n    <Card title={translate('product.master.title')}>\n      <Table\n        tableLayout=\"fixed\"\n        className=\"master-table product-master-table\"\n        rowKey=\"id\"\n        size=\"small\"\n        bordered\n        pagination={pagination}\n        columns={columns}\n        dataSource={list}\n        loading={loading}\n        onChange={handleTableChange}\n        title={() => (\n          <div className=\"table-actions\">\n            <Button htmlType=\"button\" type=\"primary\" icon=\"plus\" onClick={handleAdd}>\n              {translate('general.actions.add')}\n            </Button>\n            <Button htmlType=\"button\" type=\"default\" icon=\"filter\" onClick={handleReset}>\n              {translate('general.actions.reset')}\n            </Button>\n          </div>\n        )}\n      />\n    </Card>\n  );\n}\n\nexport default ProductMaster;\n","import React from 'react';\nimport {renderRoutes, RouteConfigComponentProps} from 'react-router-config';\nimport {Switch, withRouter} from 'react-router-dom';\nimport ProductDetail from './ProductDetail/ProductDetail';\nimport ProductMaster from './ProductMaster/ProductMaster';\nimport './ProductView.scss';\n\nfunction ProductView(props: RouteConfigComponentProps) {\n  const {route} = props;\n\n  return (\n    <Switch>\n      {route && renderRoutes(route.children)}\n    </Switch>\n  );\n}\n\nexport {ProductMaster, ProductDetail};\n\nexport default withRouter(ProductView);\n","import {COLLECTION_ROUTE, HOME_ROUTE, PRODUCT_ROUTE} from 'config/route-consts';\nimport DefaultLayout from 'layouts/DefaultLayout/DefaultLayout';\nimport {join} from 'path';\nimport {RouteConfig} from 'react-router-config';\nimport CollectionView, {CollectionDetail, CollectionMaster} from 'views/CollectionView/CollectionView';\nimport ProductDetail from 'views/ProductView/ProductDetail/ProductDetail';\nimport ProductMaster from 'views/ProductView/ProductMaster/ProductMaster';\nimport ProductView from 'views/ProductView/ProductView';\n\nexport const routes: RouteConfig[] = [\n  {\n    path: HOME_ROUTE,\n    component: DefaultLayout,\n    children: [\n      {\n        path: PRODUCT_ROUTE,\n        component: ProductView,\n        children: [\n          {\n            path: join(PRODUCT_ROUTE, ':id'),\n            component: ProductDetail,\n          },\n          {\n            path: join(PRODUCT_ROUTE),\n            component: ProductMaster,\n          },\n        ],\n      },\n      {\n        path: COLLECTION_ROUTE,\n        component: CollectionView,\n        children: [\n          {\n            path: join(COLLECTION_ROUTE, ':id'),\n            component: CollectionDetail,\n          },\n          {\n            path: join(COLLECTION_ROUTE),\n            component: CollectionMaster,\n          },\n        ],\n      },\n    ],\n  },\n];\n","/* tslint:disable:no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import App from 'components/App/App';\nimport AppLoading from 'components/AppLoading/AppLoading';\nimport initialI18NextConfig from 'config/i18next';\nimport {routes} from 'config/routes';\nimport initialGlobalState, {GlobalState} from 'core/config/global';\nimport {changeLanguage} from 'core/helpers';\nimport i18next from 'i18next';\nimport ReactDOM from 'react-dom';\nimport {initReactI18next} from 'react-i18next';\nimport {BrowserRouter} from 'react-router-dom';\nimport React, {setGlobal} from 'reactn';\nimport * as serviceWorker from 'service-worker';\nimport 'styles';\n\nPromise.all([\n  i18next.use(initReactI18next)\n    .init(initialI18NextConfig)\n    .then(() => {\n      return changeLanguage('vi');\n    }),\n  setGlobal<GlobalState>(initialGlobalState),\n])\n  .then(() => {\n    const root: HTMLDivElement = document.getElementById('root') as HTMLDivElement;\n    if (root.hasChildNodes()) {\n      ReactDOM.hydrate(\n        <BrowserRouter>\n          <AppLoading>\n            <App routes={routes}/>\n          </AppLoading>\n        </BrowserRouter>,\n        root,\n      );\n    } else {\n      ReactDOM.render(\n        <BrowserRouter>\n          <AppLoading>\n            <App routes={routes}/>\n          </AppLoading>\n        </BrowserRouter>,\n        root,\n      );\n    }\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios, {AxiosResponse} from 'axios';\nimport i18next from 'i18next';\nimport {join} from 'path';\nimport {setGlobal} from 'reactn';\nimport {GlobalState, LanguageType} from '../config/global';\n\nexport async function changeLanguage(language: LanguageType) {\n  await setGlobal<GlobalState>({\n    loading: true,\n  });\n  await axios.get(join('/i18n', `${language}.json`))\n    .then(async (response: AxiosResponse<any>) => {\n      await i18next.addResource(language, '', '', response.data);\n      await i18next.changeLanguage(language);\n      await setGlobal<GlobalState>({\n        language,\n      });\n    });\n}\n"],"sourceRoot":""}