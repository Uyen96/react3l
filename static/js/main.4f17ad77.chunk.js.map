{"version":3,"sources":["core/config/consts.ts","core/config/global.ts","config/consts.ts","config/i18next.ts","config/route-consts.ts","core/helpers/debounce.ts","core/helpers/url.ts","config/menu.ts","layouts/CoreUILayout/CoreUILayout.tsx","config/ant-design/ant-design.ts","core/models/Cloneable.ts","core/models/Model.ts","core/models/Search.ts","core/services/CRUDService.ts","core/services/RouterService.ts","core/filters/Filter.ts","core/filters/GuidFilter.ts","core/filters/IdFilter.ts","core/filters/StringFilter.ts","core/filters/NumberFilter.ts","core/filters/DateFilter.ts","helpers/ant-design/table.ts","services/ant-design/TableService.ts","components/ant-design/InputNumber/InputNumber.tsx","components/ant-design/NumberRange/NumberRange.tsx","components/AdvancedNumberFilter/AdvancedNumberFilter.tsx","components/AdvancedStringFilter/AdvancedStringFilter.tsx","models/DistrictFilter.ts","views/DefaultViews/ProvinceView/ProvinceDetail/DistrictContentTable/DistrictContentTable.tsx","config/api-consts.ts","core/repositories/Repository.ts","core/helpers/http.ts","models/Ward.ts","models/District.ts","models/Province.ts","views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetailRepository.ts","views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetail.tsx","components/MasterPreview/MasterPreview.tsx","models/ProvinceFilter.ts","views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMasterRepository.ts","views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMaster.tsx","views/DefaultViews/ProvinceView/ProvinceView.tsx","config/routes.tsx","core/components/App/App.tsx","service-worker.ts","index.tsx","core/helpers/translate.ts"],"names":["BASE_URL","process","APP_TITLE","DEFAULT_TAKE","INPUT_DEBOUNCE_TIME","parseInt","DATE_FORMAT","TIME_FORMAT","defaultKeys","index","actions","checkbox","expand","defaultActions","label","add","filter","reset","save","delete","import","export","search","initialGlobalState","language","fallbackLanguage","loading","title","defaultColumnWidth","i18nextConfig","resources","lng","fallbackLng","ns","defaultNS","nsSeparator","keySeparator","interpolation","escapeValue","nestingSuffixEscaped","prefix","suffix","PROVINCE_ROUTE","debounce","tFunction","debounceTime","lodashDebounce","url","join","menu","items","name","icon","navbarBrandFull","src","width","height","navbarBrandMinimized","withRouter","props","route","useTranslation","translate","translatedMenu","React","useMemo","map","fixed","className","full","minimized","display","navConfig","router","ReactRouterDOM","routes","Array","renderRoutes","formItemLayout","labelCol","xs","span","sm","md","lg","wrapperCol","defaultDetailFormLayout","Cloneable","model","instance","Object","assign","Model","errors","key","Search","skip","take","orderBy","orderType","crudService","setModel","handleSetInputValue","useCallback","field","value","clone","handleDebounceInputValue","handleChangeSimpleField","event","target","handleUpdateDateField","moment","id","t","forEach","v4","setValue","v","handleDelete","newValue","handleAdd","newContent","reference","baseRoute","getDetail","saveDetail","onSavingError","useParams","useState","setT","setLoading","isDetail","history","useHistory","handleGoBack","push","handleSave","a","async","newT","useEffect","then","finally","list","onError","enums","setEnums","catch","setSearch","masterList","masterCount","tSearch","setList","total","setTotal","previewVisible","setPreviewVisible","previewModel","setPreviewModel","handleOpenPreview","handleClosePreview","handleEdit","toString","handleReset","newSearch","entries","undefined","filterKey","handleFilter","handleSearch","Promise","all","getList","Filter","this","GuidFilter","equal","notEqual","in","notIn","IdFilter","StringFilter","startWith","notStartWith","endWith","notEndWith","contain","notContain","NumberFilter","greater","greaterEqual","less","lessEqual","range","DateFilter","getOrderType","getOrderTypeForTable","sorter","order","renderMasterIndex","pagination","current","pageSize","antTableService","onDelete","onSetLoading","onSuccess","onCancel","Modal","confirm","content","okType","onOk","message","info","error","response","data","filterHandler","defaultFilterHandler","columnKey","column","dataSource","length","handleTableChange","newPagination","filters","newSorter","showSizeChanger","toUpperCase","startsWith","setOrderType","selectedRowKeys","filterValue","endsWith","indexOf","result","Number","isNaN","toDate","getTime","minValue","maxValue","minTimeValue","maxTimeValue","comparisonValue","includes","keys","formatter","x","parseFloat","split","parser","toLocaleString","InputNumber","defaultValue","onChange","restProps","ref","useRef","debouncedHandleChange","classNames","defaultProps","allowNegative","onlyInteger","step","NumberRange","handleChangeMinValue","handleChangeMaxValue","placeholder","types","AdvancedNumberFilter","filterType","handleSubmitChange","handleChangeRange","type","hasOwnProperty","handleChange","numberFilterRange","onPressEnter","AdvancedStringFilter","handlePressEnter","onKeyPress","DistrictFilter","code","provinceId","FormItem","Form","Item","DistrictContentTable","useContentTable","districts","useLocalTable","columns","render","sortOrder","dataIndex","onClick","size","bordered","tableLayout","API_PROVINCE_MASTER_ROUTE","API_PROVINCE_DETAIL_ROUTE","Repository","config","requestInterceptor","responseInterceptor","http","axios","create","interceptors","request","use","createHttpService","_defaultRequestInterceptor","_defaultResponseInterceptor","baseURL","defaults","Ward","districtId","district","ward","District","province","wards","Province","provinceDetailRepository","get","post","kebabCase","update","setBaseURL","ProvinceDetail","useDetail","setProvince","useDeleteHandler","spinning","disabled","MasterPreview","children","onClose","unmountOnClose","ProvinceFilter","provinceMasterRepository","count","provinceFilter","batchDelete","idList","ProvinceMaster","useMaster","provinces","visible","handlePreview","useMasterTable","useRowSelection","onSelectionChange","hasSelected","align","rowKey","rowSelection","isOpen","path","component","CoreUILayout","ProvinceView","exact","App","useGlobal","document","Boolean","window","location","hostname","match","i18next","initReactI18next","init","initialI18NextConfig","setGlobal","addResource","changeLanguage","root","getElementById","hasChildNodes","ReactDOM","hydrate","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f17ad77.chunk.js","sourcesContent":["import {translate} from 'core/helpers/translate';\nimport {TableKeys} from 'core/types';\n\nexport const __DEV__: boolean = process.env.NODE_ENV === 'development';\n\nexport const BASE_URL: string = __DEV__ ? window.location.origin : process.env.REACT_APP_BASE_URL;\n\nexport const APP_TITLE: string = process.env.REACT_APP_TITLE ?? '';\n\nexport const DEFAULT_TAKE: number = 10;\n\nexport const INPUT_DEBOUNCE_TIME: number = parseInt(process.env.INPUT_DEBOUNCE_TIME, 10) ?? 400;\n\nexport const DATE_FORMAT: string = 'YYYY-MM-DD';\n\nexport const TIME_FORMAT: string = 'HH:mm:ss';\n\nexport const DATE_TIME_FORMAT: string = `${DATE_FORMAT} ${TIME_FORMAT}`;\n\nexport const defaultKeys: TableKeys = {\n  index: translate('general.keys.index'),\n  actions: translate('general.keys.actions'),\n  checkbox: translate('general.keys.checkbox'),\n  expand: translate('general.keys.expand'),\n};\n\nexport const defaultActions = {\n  label: translate('general.actions.label'),\n  add: translate('general.actions.add'),\n  filter: translate('general.actions.filter'),\n  reset: translate('general.actions.reset'),\n  save: translate('general.actions.save'),\n  delete: translate('general.actions.delete'),\n  import: translate('general.actions.import'),\n  export: translate('general.actions.export'),\n  search: translate('general.actions.search'),\n};\n","import {APP_TITLE} from 'core/config/consts';\n\nexport type LanguageType = 'en' | 'vi';\n\nexport interface GlobalState {\n  language?: LanguageType;\n\n  fallbackLanguage?: LanguageType;\n\n  loading?: boolean;\n\n  title?: string;\n}\n\nconst initialGlobalState: GlobalState = {\n  language: 'vi', fallbackLanguage: 'vi', loading: true, title: APP_TITLE,\n};\n\nexport default initialGlobalState;\n","import {ColumnWidth} from 'core/types';\n\nexport * from 'core/config';\n\nexport const ROOT_ID: string = 'root';\n\nexport const defaultColumnWidth: ColumnWidth = {\n  index: 50, checkbox: 50, expand: 50, actions: 120,\n};\n","import initialGlobalState from 'core/config/global';\nimport {InitOptions} from 'i18next';\n\nconst i18nextConfig: InitOptions = {\n  resources: {},\n  lng: initialGlobalState.language,\n  fallbackLng: initialGlobalState.fallbackLanguage,\n  ns: '',\n  defaultNS: '',\n  nsSeparator: false,\n  keySeparator: '.',\n  interpolation: {\n    escapeValue: false, nestingSuffixEscaped: '.', prefix: '{{', suffix: '}}',\n  },\n};\n\nexport default i18nextConfig;\n","export default 'route-consts';\n\nexport const ROOT_ROUTE: string = '/';\n\nexport const ACCOUNT_ROUTE: string = '/accounts';\nexport const DISTRICT_ROUTE: string = '/districts';\nexport const GROUP_ROUTE: string = '/groups';\nexport const ORDER_CONTENT_ROUTE: string = '/orderContents';\nexport const ORDER_ROUTE: string = '/orders';\nexport const PROVINCE_ROUTE: string = '/provinces';\nexport const WARD_ROUTE: string = '/wards';\n","import {INPUT_DEBOUNCE_TIME} from 'core/config/consts';\nimport lodashDebounce from 'lodash/debounce';\n\nexport function debounce(tFunction: (...params: any[]) => any, debounceTime: number = INPUT_DEBOUNCE_TIME) {\n  return lodashDebounce(tFunction, debounceTime);\n}\n","import {BASE_URL} from 'core/config/consts';\nimport {join} from 'path';\n\nexport function url(...segments: string[]) {\n  return `${BASE_URL}${join(...segments)}`;\n}\n","import {PROVINCE_ROUTE} from 'config/route-consts';\nimport {translate} from 'core/helpers';\nimport {RouteConfig} from 'react-router-config';\n\nexport const menu: { items: RouteConfig[] } = {\n  items: [{\n    name: translate('menu.provinces.name'), url: PROVINCE_ROUTE, icon: 'fa fa-building',\n  }],\n};\n","import Header from '@coreui/react/lib/Header';\nimport NavbarBrand from '@coreui/react/lib/NavbarBrand';\nimport Sidebar from '@coreui/react/lib/Sidebar';\nimport SidebarMinimizer from '@coreui/react/lib/SidebarMinimizer';\nimport SidebarNav from '@coreui/react/lib/SidebarNav';\nimport SidebarToggler from '@coreui/react/lib/SidebarToggler';\nimport {menu} from 'config/menu';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Switch, withRouter} from 'react-router';\nimport {renderRoutes, RouteConfig, RouteConfigComponentProps} from 'react-router-config';\nimport * as ReactRouterDOM from 'react-router-dom';\nimport './CoreUILayout.scss';\n\ninterface NavbarBrandLogoProps {\n  src: string;\n\n  width?: number;\n\n  height?: number;\n\n  alt?: string;\n}\n\nconst navbarBrandFull: NavbarBrandLogoProps = {\n  src: '/assets/img/brand/logo.svg', width: 89, height: 25,\n};\n\nconst navbarBrandMinimized: NavbarBrandLogoProps = {\n  src: '/assets/img/brand/sygnet.svg', width: 30, height: 30,\n};\n\nfunction CoreUILayout(props: RouteConfigComponentProps) {\n  const {route} = props;\n  const [translate] = useTranslation();\n\n  const translatedMenu = React.useMemo(() => ({\n    items: menu.items.map((route: RouteConfig) => ({\n      ...route, name: translate(route.name),\n    })),\n  }), [translate]);\n\n  return (<>\n      <Header fixed className=\"navbar\">\n        <NavbarBrand\n          full={navbarBrandFull}\n          minimized={navbarBrandMinimized}\n        />\n        <SidebarToggler className=\"d-md-down-none\" display=\"lg\"/>\n      </Header>\n      <div className=\"app-body\">\n        <Sidebar display=\"lg\" fixed>\n          <SidebarNav navConfig={translatedMenu} router={ReactRouterDOM}/>\n          <SidebarMinimizer/>\n        </Sidebar>\n        <main className=\"main\">\n          <div className=\"app-content\">\n            <Switch>\n              {route?.routes instanceof Array && renderRoutes(route.routes)}\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </>);\n}\n\nexport default withRouter(CoreUILayout);\n","import {FormProps} from 'antd/lib/form';\nimport {AntSortType} from 'core/types';\n\nexport const formItemLayout: FormProps = {\n  labelCol: {\n    xs: {span: 24}, sm: {span: 24}, md: {span: 12}, lg: {span: 8},\n  }, wrapperCol: {\n    xs: {span: 24}, sm: {span: 24}, md: {span: 12}, lg: {span: 16},\n  },\n};\n\nexport const defaultDetailFormLayout: FormProps = {\n  labelCol: {\n    xs: {span: 24}, sm: {span: 24}, md: {span: 12}, lg: {span: 8},\n  }, wrapperCol: {\n    xs: {span: 24}, sm: {span: 24}, md: {span: 12}, lg: {span: 8},\n  },\n};\n\nexport const antSortType: AntSortType = {\n  ASC: 'ascend', DESC: 'descend',\n};\n","import {PureModelData} from 'core/types';\n\nexport class Cloneable {\n  public static clone<T extends Cloneable>(model?: PureModelData<T>): T {\n    const instance: T = new Cloneable() as T;\n    if (typeof model !== 'undefined' && model !== null) {\n      Object.assign(instance, model);\n    }\n    return instance;\n  }\n}\n","import {ErrorMap} from '../types';\nimport {Cloneable} from './Cloneable';\n\nexport class Model extends Cloneable {\n  public errors?: ErrorMap<Model>;\n\n  public key?: string | number;\n\n  [key: string]: any;\n\n  constructor(model?: Model) {\n    super();\n    if (model !== null && typeof model === 'object') {\n      Object.assign(this, model);\n    }\n  }\n}\n","import {DEFAULT_TAKE} from '../config';\nimport {Cloneable} from './Cloneable';\n\nexport class Search extends Cloneable {\n  public skip?: number = 0;\n\n  public take?: number = DEFAULT_TAKE;\n\n  public orderBy?: string;\n\n  public orderType?: string;\n}\n","import {DetailParams} from 'core/types';\nimport {Moment} from 'moment';\nimport {join} from 'path';\nimport React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport nameof from 'ts-nameof.macro';\nimport v4 from 'uuid/v4';\nimport {DEFAULT_TAKE, defaultActions} from '../config';\nimport {Filter, IdFilter} from '../filters';\nimport {debounce} from '../helpers';\nimport {Model, Search} from '../models';\n\nexport class CRUDService {\n  public useChangeHandlers<T extends Model>(model?: T, setModel?: (t: T) => void): [(field: string) => (value) => void, (field: string) => (value) => void, (field: string) => (value) => void, ] {\n    const handleSetInputValue = React.useCallback((field: string, value: string | number | boolean | null | undefined) => {\n      setModel(Model.clone<T>({\n        ...model, [field]: value,\n      }));\n    }, [model, setModel]);\n\n    const handleDebounceInputValue = React.useCallback(debounce(handleSetInputValue), [handleSetInputValue]);\n\n    const handleChangeSimpleField = React.useCallback((field: string, debounce: boolean = false) => {\n      return (event: React.ChangeEvent<HTMLInputElement> | number | string | boolean) => {\n        if (typeof event === 'object') {\n          if ('target' in event) {\n            if (debounce) {\n              return handleDebounceInputValue(field, event.target.value);\n            }\n            return handleSetInputValue(field, event.target.value);\n          }\n          if ('format' in event) {\n            setModel(Model.clone<T>({\n              ...model, [field]: event,\n            }));\n          }\n        }\n        if (debounce) {\n          return handleDebounceInputValue(field, event);\n        }\n        return handleSetInputValue(field, event);\n      };\n    }, [handleDebounceInputValue, handleSetInputValue, model, setModel]);\n\n    const handleUpdateDateField = React.useCallback((field: string) => {\n      return (moment: Moment) => {\n        setModel(Model.clone<T>({\n          ...model, [field]: moment,\n        }));\n      };\n    }, [model, setModel]);\n\n    const handleChangeObjectField = React.useCallback((field: string) => {\n      return (id?: number | string | null, t?: T) => {\n        setModel(Model.clone<T>({\n          ...model, [field]: t, [`${field}Id`]: id,\n        }));\n      };\n    }, [model, setModel]);\n\n    return [handleChangeSimpleField, handleChangeObjectField, handleUpdateDateField];\n  }\n\n  public useContentTable<T extends Model, TContent extends Model>(model: T, setModel: (t: T) => void, field: string): [TContent[], (v: TContent[]) => void, () => void, (id: number) => () => void, ] {\n    const value: TContent[] = React.useMemo(() => {\n      if (model[field]) {\n        model[field]?.forEach((t: T) => {\n          if (!t?.key) {\n            if (t?.id) {\n              t.key = t.id;\n            } else {\n              t.key = v4();\n            }\n          }\n        });\n        return model[field];\n      }\n      return [];\n    }, [field, model]);\n\n    const setValue = React.useCallback((v: TContent[]) => {\n      setModel(Model.clone<T>({\n        ...model, [field]: v,\n      }));\n    }, [field, model, setModel]);\n\n    const handleDelete = React.useCallback((id: number) => {\n      return () => {\n        const newValue: TContent[] = value.filter((v: TContent) => v.id !== id);\n        setValue(newValue);\n      };\n    }, [value, setValue]);\n\n    const handleAdd = React.useCallback(() => {\n      const newContent: TContent = new Model() as TContent;\n      newContent.key = v4();\n      if (value instanceof Array) {\n        setValue([...value, newContent]);\n      } else {\n        setValue([newContent]);\n      }\n    }, [setValue, value]);\n\n    return [value, setValue, handleAdd, handleDelete];\n  }\n\n  public useDefaultList<T1 extends Model, T2 extends Model>(model: T1, field: string): T2[] {\n    return React.useMemo(() => {\n      const reference: T2 = model[field];\n      if (reference) {\n        return [reference];\n      }\n      return [];\n    }, [field, model]);\n  }\n\n  public useDetail<T extends Model>(baseRoute: string, getDetail?: (t?: T) => Promise<T>, saveDetail?: (t?: T) => Promise<T>, onSavingError?: (error: Error) => void): [T, (t: T) => void, boolean, (loading: boolean) => void, boolean, () => void, () => void, ] {\n    const {id} = useParams<DetailParams>();\n    const [t, setT] = React.useState<T>(new Model() as T);\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const isDetail: boolean = typeof id === 'string';\n    const history = useHistory();\n\n    const handleGoBack = React.useCallback(() => {\n      history.push(join(baseRoute));\n    }, [baseRoute, history]);\n\n    const handleSave = React.useCallback(async () => {\n      setLoading(true);\n      try {\n        const newT: T = await saveDetail(t);\n        if (t?.id) {\n          setT(newT);\n        } else {\n          history.push(join(baseRoute, newT.id));\n        }\n      } catch (error) {\n        if (typeof onSavingError === 'function') {\n          onSavingError(error);\n        }\n      }\n      setLoading(false);\n    }, [baseRoute, history, onSavingError, saveDetail, t]);\n\n    React.useEffect(() => {\n      if (typeof getDetail === 'function' && isDetail) {\n        setLoading(true);\n        const t: T = Model.clone<Model>({\n          id,\n        }) as T;\n        getDetail(t)\n          .then((t: T) => {\n            setT(t);\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      }\n    }, [getDetail, id, isDetail]);\n\n    return [t, setT, loading, setLoading, isDetail, handleGoBack, handleSave];\n  }\n\n  public useEnumList<T extends Model>(list: () => Promise<T[]>, onError?: (error: Error) => void): [T[], (list: T[]) => void, boolean] {\n    const [enums, setEnums] = React.useState<T[]>([]);\n    const [loading, setLoading] = React.useState<boolean>(false);\n    React.useEffect(() => {\n      setLoading(true);\n      list()\n        .then((enums: T[]) => {\n          setEnums(enums);\n        })\n        .catch(onError)\n        .finally(() => {\n          setLoading(false);\n        });\n    }, [list, onError]);\n    return [enums, setEnums, loading];\n  }\n\n  public useFilter<TSearch extends Search, P extends keyof TSearch>(search: TSearch, setSearch: (search: TSearch) => void, field: P): [TSearch[P], (filter: TSearch[P]) => void, ] {\n    const filter: TSearch[P] = search[field];\n\n    const setFilter = React.useCallback((filter: TSearch[P]) => {\n      setSearch(Search.clone<TSearch>({\n        ...search, [field]: filter,\n      }));\n    }, [field, search, setSearch]);\n\n    return [filter, setFilter];\n  }\n\n  public useMaster<T extends Model, TSearch extends Search>(baseRoute: string, masterList: (tSearch?: TSearch) => Promise<T[]>, masterCount: (tSearch?: TSearch) => Promise<number>, tSearch: new () => TSearch): [T[], TSearch, (tSearch: TSearch) => void, number, boolean, () => void, () => void, (id: number) => () => void, (field: string) => (filter: Filter) => void, () => void, boolean, T, (t: T) => () => void, () => void, ] {\n    const [search, setSearch] = React.useState<TSearch>(new tSearch());\n\n    const [list, setList] = React.useState<T[]>([]);\n\n    const [loading, setLoading] = React.useState<boolean>(false);\n\n    const [total, setTotal] = React.useState<number>(0);\n\n    const history = useHistory();\n\n    const [previewVisible, setPreviewVisible] = React.useState<boolean>(false);\n\n    const [previewModel, setPreviewModel] = React.useState<T>(Model.clone<T>());\n\n    const handleOpenPreview = React.useCallback((t: T) => {\n      return () => {\n        setPreviewModel(t);\n        setPreviewVisible(true);\n      };\n    }, []);\n\n    const handleClosePreview = React.useCallback(() => {\n      setPreviewVisible(false);\n    }, []);\n\n    const handleAdd = React.useCallback(() => {\n      history.push(join(baseRoute, nameof(defaultActions.add)));\n    }, [history, baseRoute]);\n\n    const handleEdit = React.useCallback((id: number) => {\n      return () => {\n        history.push(join(baseRoute, id.toString()));\n      };\n    }, [baseRoute, history]);\n\n    const handleReset = React.useCallback(() => {\n      const newSearch: TSearch = Search.clone<TSearch>(search);\n      Object\n        .entries(newSearch)\n        .forEach(([key, value]) => {\n          switch (key) {\n            case nameof(newSearch.skip):\n              newSearch.skip = 0;\n              break;\n\n            case nameof(newSearch.take):\n              newSearch.take = DEFAULT_TAKE;\n              break;\n\n            case nameof(newSearch.orderBy):\n              newSearch.orderBy = undefined;\n              break;\n\n            case nameof(newSearch.orderType):\n              newSearch.orderBy = undefined;\n              break;\n\n            default:\n              if (typeof value === 'object' && value !== null) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey]) => {\n                    value[filterKey] = undefined;\n                  });\n                newSearch[key] = {...value};\n              }\n              break;\n          }\n        });\n      setSearch(newSearch);\n    }, [search, setSearch]);\n\n    const handleFilter = React.useCallback((field: string) => {\n      return (filter: Filter) => {\n        setSearch(Search.clone<TSearch>({\n          ...search, [field]: filter,\n        }));\n      };\n    }, [search, setSearch]);\n\n    const handleSearch = React.useCallback(() => {\n      setSearch(Search.clone<TSearch>(search));\n    }, [search]);\n\n    React.useEffect(() => {\n      setLoading(true);\n      Promise.all([masterList(search), masterCount(search)])\n        .then(([list, total]: [T[], number]) => {\n          setList(list);\n          setTotal(total);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }, [masterCount, masterList, search]);\n\n    return [list, search, setSearch, total, loading, handleAdd, handleReset, handleEdit, handleFilter, handleSearch, previewVisible, previewModel, handleOpenPreview, handleClosePreview];\n  }\n\n  public usePreloadList<T extends Model, TSearch extends Search>(getList: (search: TSearch) => Promise<T[]>, id: IdFilter): T[] {\n    const [list, setList] = React.useState<T[]>([]);\n\n    React.useEffect(() => {\n      getList({id, ...new Search() as TSearch})\n        .then(setList);\n    }, [getList, id]);\n\n    return list;\n  }\n}\n\nexport const crudService: CRUDService = new CRUDService();\n","export class RouterService {\n\n}\n\nexport const routerService: RouterService = new RouterService();\n","import {FilterType} from 'core/types';\n\nexport class Filter {\n  public static types(): Array<FilterType<Filter>> {\n    return [];\n  }\n\n  constructor(filter?: Filter) {\n    if (!!filter) {\n      Object.assign(this, filter);\n    }\n  }\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class GuidFilter extends Filter {\n  public static types(filter?: GuidFilter): Array<FilterType<GuidFilter>> {\n    return [{\n      key: nameof(filter.equal), label: translate('filters.guidFilter.equal'),\n    }, {\n      key: nameof(filter.notEqual), label: translate('filters.guidFilter.notEqual'),\n    }, {\n      key: nameof(filter.in), label: translate('filters.guidFilter.in'),\n    }, {\n      key: nameof(filter.notIn), label: translate('filters.guidFilter.notIn'),\n    }];\n  }\n\n  public equal?: string;\n\n  public notEqual?: string;\n\n  public in?: string[];\n\n  public notIn?: string[];\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class IdFilter extends Filter {\n  public static types(filter?: IdFilter): Array<FilterType<IdFilter>> {\n    return [{\n      key: nameof(filter.equal), label: translate('filters.idFilter.equal'),\n    }, {\n      key: nameof(filter.notEqual), label: translate('filters.idFilter.notEqual'),\n    }, {\n      key: nameof(filter.in), label: translate('filters.idFilter.in'),\n    }, {\n      key: nameof(filter.notIn), label: translate('filters.idFilter.notIn'),\n    }];\n  }\n\n  public equal?: number;\n\n  public notEqual?: number;\n\n  public in?: number[];\n\n  public notIn?: number[];\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class StringFilter extends Filter {\n  public static types(filter?: StringFilter): Array<FilterType<StringFilter>> {\n    return [{\n      key: nameof(filter.startWith), label: translate('filters.stringFilter.startWith'),\n    }, {\n      key: nameof(filter.notStartWith), label: translate('filters.stringFilter.notStartWith'),\n    }, {\n      key: nameof(filter.endWith), label: translate('filters.stringFilter.endWith'),\n    }, {\n      key: nameof(filter.notEndWith), label: translate('filters.stringFilter.notEndWith'),\n    }, {\n      key: nameof(filter.contain), label: translate('filters.stringFilter.contain'),\n    }, {\n      key: nameof(filter.notContain), label: translate('filters.stringFilter.notContain'),\n    }, {\n      key: nameof(filter.equal), label: translate('filters.stringFilter.equal'),\n    }, {\n      key: nameof(filter.notEqual), label: translate('filters.stringFilter.notEqual'),\n    }];\n  }\n\n  public startWith?: string;\n\n  public notStartWith?: string;\n\n  public endWith?: string;\n\n  public notEndWith?: string;\n\n  public equal?: string;\n\n  public notEqual?: string;\n\n  public contain?: string;\n\n  public notContain?: string;\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from '../filters/Filter';\n\nexport class NumberFilter extends Filter {\n  public static types(filter?: NumberFilter): Array<FilterType<NumberFilter>> {\n    return [{\n      key: nameof(filter.equal), label: translate('filters.numberFilter.equal'),\n    }, {\n      key: nameof(filter.notEqual), label: translate('filters.numberFilter.notEqual'),\n    }, {\n      key: nameof(filter.greater), label: translate('filters.numberFilter.greater'),\n    }, {\n      key: nameof(filter.greaterEqual), label: translate('filters.numberFilter.greaterEqual'),\n    }, {\n      key: nameof(filter.less), label: translate('filters.numberFilter.less'),\n    }, {\n      key: nameof(filter.lessEqual), label: translate('filters.numberFilter.lessEqual'),\n    }, {\n      key: nameof(filter.range), label: translate('filters.numberFilter.range'),\n    }];\n  }\n\n  public equal?: number;\n\n  public notEqual?: number;\n\n  public greater?: number;\n\n  public greaterEqual?: number;\n\n  public less?: number;\n\n  public lessEqual?: number;\n\n  public range?: [number | undefined, number | undefined];\n}\n","import {Filter} from 'core/filters/Filter';\nimport {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport {Moment} from 'moment';\nimport nameof from 'ts-nameof.macro';\n\nexport class DateFilter extends Filter {\n  public static types(filter?: DateFilter): Array<FilterType<DateFilter>> {\n    return [{\n      key: nameof(filter.equal), label: translate('filters.dateFilter.equal'),\n    }, {\n      key: nameof(filter.notEqual), label: translate('filters.dateFilter.notEqual'),\n    }, {\n      key: nameof(filter.greater), label: translate('filters.dateFilter.greater'),\n    }, {\n      key: nameof(filter.greaterEqual), label: translate('filters.dateFilter.greaterEqual'),\n    }, {\n      key: nameof(filter.less), label: translate('filters.dateFilter.less'),\n    }, {\n      key: nameof(filter.lessEqual), label: translate('filters.dateFilter.lessEqual'),\n    }, {\n      key: nameof(filter.range), label: translate('filters.dateFilter.range'),\n    }];\n  }\n\n  public equal?: Moment;\n\n  public notEqual?: Moment;\n\n  public greater?: Moment;\n\n  public greaterEqual?: Moment;\n\n  public less?: Moment;\n\n  public lessEqual?: Moment;\n\n  public range?: [Moment | null | undefined, Moment | null | undefined];\n}\n","import {PaginationProps} from 'antd/lib/pagination';\nimport {SorterResult} from 'antd/lib/table';\nimport {antSortType} from 'config/ant-design/ant-design';\nimport {DEFAULT_TAKE} from 'core/config';\nimport {Model, Search} from 'core/models';\nimport nameof from 'ts-nameof.macro';\n\nexport function setOrderType(search: Search, orderType: string | null | undefined | boolean) {\n  if (typeof orderType === 'undefined') {\n    search.orderType = undefined;\n    return;\n  }\n  if (typeof orderType === 'string') {\n    if (orderType.toUpperCase().startsWith(nameof(antSortType.ASC))) {\n      search.orderType = nameof(antSortType.ASC);\n      return;\n    }\n    search.orderType = nameof(antSortType.DESC);\n    return;\n  }\n  if (typeof orderType === 'boolean') {\n    if (orderType) {\n      return nameof(antSortType.ASC);\n    }\n    search.orderType = nameof(antSortType.DESC);\n    return nameof(antSortType.DESC);\n  }\n  search.orderType = undefined;\n}\n\nexport function getOrderType(search: Search): 'ascend' | 'descend' | undefined {\n  if (search.orderType) {\n    if (search.orderType === nameof(antSortType.ASC)) {\n      return 'ascend';\n    }\n    return 'descend';\n  }\n  return undefined;\n}\n\nexport function getOrderTypeForTable<T extends Model>(field: string, sorter: SorterResult<T>) {\n  return (field === sorter.field) ? sorter.order : undefined;\n}\n\nexport function renderMasterIndex<T extends Model>(pagination?: PaginationProps) {\n  return (...[, , index]: [any, T, number]) => {\n    if (pagination) {\n      const {\n        current = 1, pageSize = DEFAULT_TAKE,\n      } = pagination;\n      return index + 1 + (current - 1) * pageSize;\n    }\n    return index + 1;\n  };\n}\n","import message from 'antd/lib/message';\nimport Modal from 'antd/lib/modal';\nimport {PaginationConfig, PaginationProps} from 'antd/lib/pagination';\nimport {SorterResult} from 'antd/lib/table';\nimport {AxiosError} from 'axios';\nimport {DEFAULT_TAKE} from 'core/config';\nimport {DateFilter, Filter, GuidFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport {translate} from 'core/helpers';\nimport {Model, Search} from 'core/models';\nimport {getOrderType, getOrderTypeForTable, setOrderType} from 'helpers/ant-design/table';\nimport {Moment} from 'moment';\nimport {useTranslation} from 'react-i18next';\nimport React from 'reactn';\nimport nameof from 'ts-nameof.macro';\n\nconst DEFAULT_SUCCESS_MESSAGE: string = translate('general.delete.success');\nconst DEFAULT_FAILURE_MESSAGE: string = translate('general.delete.failure');\nconst DEFAULT_TITLE_MESSAGE: string = translate('general.delete.title');\nconst DEFAULT_CONTENT_MESSAGE: string = translate('general.delete.content');\n\nexport type FilterHandlerType<TSearch extends Search> = (list: any[], search?: TSearch) => any[];\n\nexport class TableService {\n  public static hasType(filter: Filter) {\n    return Object.keys(filter).length > 0;\n  }\n\n  public useDeleteHandler<T extends Model>(onDelete: (t: T) => Promise<T>, onSetLoading: (loading: boolean) => void, model: T, setModel: (t: T) => void, onSuccess?: (t?: T) => void, onError?: (error: Error) => void, onCancel?: () => void) {\n    const [translate] = useTranslation();\n    return React.useMemo(() => {\n        return () => {\n          Modal.confirm({\n            title: translate(DEFAULT_TITLE_MESSAGE, model),\n            content: translate(DEFAULT_CONTENT_MESSAGE, model),\n            okType: 'danger',\n            onOk: () => {\n              onSetLoading(true);\n              onDelete(model)\n                .then(() => {\n                  message.info(translate(DEFAULT_SUCCESS_MESSAGE, model));\n                  if (typeof onSuccess === 'function') {\n                    onSuccess();\n                  }\n                })\n                .catch((error: AxiosError<T>) => {\n                  message.error(translate(DEFAULT_FAILURE_MESSAGE, {error, ...model}));\n                  setModel(Model.clone<T>({\n                    ...model, errors: error.response.data,\n                  }));\n                  if (typeof onError === 'function') {\n                    onError(error);\n                  }\n                })\n                .finally(() => {\n                  onSetLoading(false);\n                });\n            },\n            onCancel,\n          });\n        };\n      }, // tslint:disable-next-line:max-line-length\n      [model, onCancel, onDelete, onError, onSetLoading, onSuccess, setModel, translate]);\n  }\n\n  public useLocalTable<T extends Model, TSearch extends Search>(list: T[], search: TSearch, setSearch: (search: TSearch) => void, filterHandler: FilterHandlerType<TSearch> = this.defaultFilterHandler): [T[], PaginationProps, SorterResult<TSearch>, (newPagination: PaginationConfig, filters: Record<string, any>, newSorter: SorterResult<T>) => void, (field: string) => (filter: Filter) => void, () => void, () => void, ] {\n    const sorter: SorterResult<TSearch> = React.useMemo(() => ({\n      field: search.orderBy, order: getOrderType(search), columnKey: search.orderBy, column: undefined,\n    }), [search]);\n\n    const dataSource: T[] = React.useMemo(() => {\n      return filterHandler(list, search);\n    }, [filterHandler, list, search]);\n\n    const handleSearch = React.useCallback(() => {\n      setSearch(Search.clone<TSearch>(search));\n    }, [search, setSearch]);\n\n    const handleReset = React.useCallback(() => {\n      const newSearch: TSearch = Search.clone<TSearch>(search);\n      Object\n        .entries(newSearch)\n        .forEach(([key, value]) => {\n          switch (key) {\n            case nameof(newSearch.skip):\n              newSearch.skip = 0;\n              break;\n\n            case nameof(newSearch.take):\n              newSearch.take = DEFAULT_TAKE;\n              break;\n\n            case nameof(newSearch.orderBy):\n              newSearch.orderBy = undefined;\n              break;\n\n            case nameof(newSearch.orderType):\n              newSearch.orderBy = undefined;\n              break;\n\n            default:\n              if (typeof value === 'object' && value !== null) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey]) => {\n                    value[filterKey] = undefined;\n                  });\n                newSearch[key] = {...value};\n              }\n              break;\n          }\n        });\n      setSearch(newSearch);\n    }, [search, setSearch]);\n\n    const pagination: PaginationProps = React.useMemo(() => {\n      const {\n        skip, take,\n      } = search;\n\n      const {length} = dataSource ?? [];\n\n      return {\n        current: (skip / take) + 1, pageSize: take, total: length,\n      };\n    }, [dataSource, search]);\n\n    const handleTableChange = React.useCallback((newPagination: PaginationConfig, filters: Record<string, any>, newSorter: SorterResult<T>) => {\n      const {pageSize: take} = newPagination;\n      const skip: number = (newPagination.current - 1) * newPagination.pageSize;\n\n      if (skip !== search.skip || take !== search.take) {\n        setSearch(Search.clone<TSearch>({\n          ...search, skip, take,\n        }));\n        return;\n      }\n\n      const {field, order} = sorter;\n\n      if (newSorter.field !== field || newSorter.order !== order) {\n        setSearch(Search.clone<TSearch>({\n          ...search, orderBy: newSorter.field, orderType: getOrderTypeForTable<T>(newSorter.field, newSorter),\n        }));\n        return;\n      }\n\n      setSearch(Search.clone<TSearch>({\n        ...search, ...filters,\n      }));\n    }, [search, setSearch, sorter]);\n\n    const handleFilter = React.useCallback((field: string) => {\n      return (filter: Filter) => {\n        setSearch(Search.clone<TSearch>({\n          ...search, [field]: filter,\n        }));\n      };\n    }, [search, setSearch]);\n\n    return [dataSource, pagination, sorter, handleTableChange, handleFilter, handleSearch, handleReset];\n  }\n\n  public useMasterTable<T extends Model, TSearch extends Search>(search: TSearch, setSearch: (search: TSearch) => void, total: number): [PaginationProps, SorterResult<T>, (pagination: PaginationProps, filters: Record<string, any>, newSorter: SorterResult<T>) => void, ] {\n\n    const pagination: PaginationProps = React.useMemo(() => {\n      const {\n        take, skip,\n      } = search;\n\n      return {\n        total, current: skip / take + 1, pageSize: take, showSizeChanger: true,\n      };\n    }, [search, total]);\n\n    const sorter: SorterResult<T> = React.useMemo(() => ({\n      field: search.orderBy, order: getOrderType(search),\n    } as SorterResult<T>), [search]);\n\n    const handleTableChange = React.useCallback((newPagination: PaginationProps, filters: Record<string, any>, newSorter: SorterResult<T>) => {\n      const {field, order} = sorter;\n      if (newSorter.field !== field || newSorter.order !== order) {\n        const newSearch: TSearch = Search.clone<TSearch>({\n          ...search, orderBy: newSorter.field, skip: 0,\n        });\n        setOrderType(newSearch, newSorter.order);\n        setSearch(newSearch);\n        return;\n      }\n      const {\n        current = 1, pageSize = DEFAULT_TAKE, total = 0,\n      } = newPagination;\n      if (pagination.current !== current || pagination.pageSize !== pageSize || pagination.total !== total) {\n        setSearch(Search.clone<TSearch>({\n          ...search, take: pageSize, skip: (current - 1) * pageSize,\n        }));\n        return;\n      }\n      setSearch(Search.clone<TSearch>({\n        ...search, ...filters,\n      }));\n    }, [pagination, search, setSearch, sorter]);\n    return [pagination, sorter, handleTableChange];\n  }\n\n  public useRowSelection(): [any[], (selectedRowKeys: any[]) => void, boolean, ] {\n    const [selectedRowKeys, setSelectedRowKeys] = React.useState<any[]>([]);\n\n    return [selectedRowKeys, setSelectedRowKeys, selectedRowKeys.length > 0];\n  }\n\n  private defaultFilterHandler<T extends Model, TSearch extends Search>(list: T[], search?: TSearch) {\n    if (typeof search === 'object' && search !== null) {\n      Object\n        .entries<StringFilter | DateFilter | NumberFilter | IdFilter | GuidFilter>(search as any)\n        .forEach(([key, value]) => {\n          switch (key) {\n            case nameof(search.skip):\n              // Do nothing\n              break;\n\n            case nameof(search.take):\n              // Do nothing\n              break;\n\n            case nameof(search.orderBy):\n              // Do nothing\n              break;\n\n            case nameof(search.orderType):\n              // Do nothing\n              break;\n\n            default:\n              if (value instanceof StringFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    if (typeof filterValue === 'string' && filterValue !== '') {\n                      switch (filterKey) {\n                        case nameof(value.startWith):\n                          list = list.filter((t: T) => {\n                            return (t[key] as string)?.startsWith(filterValue);\n                          });\n                          break;\n\n                        case nameof(value.endWith):\n                          list = list.filter((t: T) => {\n                            return (t[key] as string)?.endsWith(filterValue);\n                          });\n                          break;\n\n                        case nameof(value.contain):\n                          list = list.filter((t: T) => {\n                            return (t[key] as string)?.indexOf(filterValue) >= 0;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    }\n                  });\n                break;\n              }\n              if (value instanceof NumberFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    if (filterKey === nameof(value.range)) {\n                      list = list.filter((t: T) => {\n                        const v: number = t[key] as number;\n                        if (typeof v === 'number') {\n                          let result: boolean = true;\n                          if (filterValue instanceof Array) {\n                            if (typeof filterValue[0] === 'number') {\n                              result = result && v >= filterValue[0];\n                            }\n                            if (typeof filterValue[1] === 'number') {\n                              result = result && v <= filterValue[1];\n                            }\n                          }\n                          return result;\n                        }\n                        return true;\n                      });\n                    } else {\n                      if (typeof filterValue === 'number' && !Number.isNaN(filterValue)) {\n                        switch (filterKey) {\n                          case nameof(value.equal):\n                            list = list.filter((t: T) => {\n                              const v: number = t[key] as number;\n                              if (typeof v === 'number' && typeof filterValue === 'number') {\n                                return v === filterValue;\n                              }\n                              return true;\n                            });\n                            break;\n\n                          case nameof(value.notEqual):\n                            list = list.filter((t: T) => {\n                              const v: number = t[key] as number;\n                              if (typeof v === 'number' && typeof filterValue === 'number') {\n                                return v !== filterValue;\n                              }\n                              return true;\n                            });\n                            break;\n\n                          case nameof(value.less):\n                            list = list.filter((t: T) => {\n                              const v: number = t[key] as number;\n                              if (typeof v === 'number' && typeof filterValue === 'number') {\n                                return v < filterValue;\n                              }\n                              return true;\n                            });\n                            break;\n\n                          case nameof(value.greater):\n                            list = list.filter((t: T) => {\n                              const v: number = t[key] as number;\n                              if (typeof v === 'number' && typeof filterValue === 'number') {\n                                return v > filterValue;\n                              }\n                              return true;\n                            });\n                            break;\n\n                          case nameof(value.lessEqual):\n                            list = list.filter((t: T) => {\n                              const v: number = t[key] as number;\n                              if (typeof v === 'number' && typeof filterValue === 'number') {\n                                return v <= filterValue;\n                              }\n                              return true;\n                            });\n                            break;\n\n                          case nameof(value.greaterEqual):\n                            list = list.filter((t: T) => {\n                              const v: number = t[key] as number;\n                              if (typeof v === 'number' && typeof filterValue === 'number') {\n                                return v >= filterValue;\n                              }\n                              return true;\n                            });\n                            break;\n\n                          default:\n                            // Do nothing\n                            break;\n                        }\n                      }\n                    }\n                  });\n                break;\n              }\n              if (value instanceof DateFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    if (filterKey === nameof(value.range)) {\n                      list = list.filter((t: T) => {\n                        const v: number = (t[key] as Moment)?.toDate().getTime();\n                        if (typeof v === 'number') {\n                          const [minValue, maxValue] = (filterValue ?? []) as [Moment, Moment];\n                          let result: boolean = true;\n                          if (minValue !== null && typeof minValue === 'object') {\n                            const minTimeValue: number = minValue.toDate().getTime();\n                            result = result && minTimeValue <= v;\n                          }\n                          if (maxValue !== null && typeof maxValue === 'object') {\n                            const maxTimeValue: number = maxValue.toDate().getTime();\n                            result = result && maxTimeValue >= v;\n                          }\n                          return result;\n                        }\n                        return true;\n                      });\n                    } else {\n                      switch (filterKey) {\n                        case nameof(value.equal):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v === comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v !== comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.less):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v < comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.greater):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v > comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.lessEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v <= comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.greaterEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v >= comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    }\n                  });\n                break;\n              }\n              if (value instanceof IdFilter || value instanceof GuidFilter) {\n                Object\n                  .entries(value)\n                  .forEach(([filterKey, filterValue]) => {\n                    if ((typeof filterValue === 'string' && filterValue !== '') || (typeof filterValue === 'number' && !Number.isNaN(filterValue))) {\n                      switch (filterKey) {\n                        case nameof(value.equal):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (typeof filterValue === 'number' || typeof filterValue === 'string')) {\n                              return v === filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (typeof filterValue === 'number' || typeof filterValue === 'string')) {\n                              return v !== filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.in):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (filterValue as any instanceof Array)) {\n                              return (filterValue as any).includes(v);\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notIn):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (filterValue as any instanceof Array)) {\n                              return !(filterValue as any).includes(v);\n                            }\n                            return true;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    }\n                  });\n                break;\n              }\n          }\n        });\n      return list;\n    }\n    return list;\n  }\n}\n\nexport const antTableService: TableService = new TableService();\n","import AntInputNumber, {InputNumberProps} from 'antd/lib/input-number';\nimport classNames from 'classnames';\nimport 'components/ant-design/InputNumber/InputNumber.scss';\nimport {debounce} from 'core/helpers';\nimport React, {LegacyRef, ReactText} from 'react';\n\nfunction formatter(x: ReactText) {\n  if (typeof x === 'string') {\n    x = parser(x);\n  }\n  if (typeof x === 'number') {\n    return x.toLocaleString();\n  }\n  return '';\n}\n\nfunction parser(x: string) {\n  const result: number = parseFloat(x.split(',').join(''));\n  if (Number.isNaN(result)) {\n    return '';\n  }\n  return result;\n}\n\nfunction InputNumber(props: InputNumberProps) {\n  const {defaultValue, onChange, className, ...restProps} = props;\n\n  const ref: LegacyRef<any> = React.useRef();\n\n  const [value, setValue] = React.useState<number>(defaultValue);\n\n  React.useEffect(() => {\n    if (typeof defaultValue === 'undefined') {\n      setValue(undefined);\n    }\n  }, [defaultValue]);\n\n  const debouncedHandleChange = React.useCallback(debounce((value: number) => {\n    setValue(value);\n    if (typeof onChange === 'function') {\n      onChange(value);\n    }\n  }), [onChange]);\n\n  return (<AntInputNumber\n      ref={ref}\n      formatter={formatter}\n      defaultValue={defaultValue}\n      onChange={debouncedHandleChange}\n      value={value}\n      {...restProps}\n      className={classNames('input-number', className)}\n    />);\n}\n\nInputNumber.defaultProps = {\n  allowNegative: true, onlyInteger: false, step: 1,\n};\n\nexport default InputNumber;\n","import InputNumber from 'components/ant-design/InputNumber/InputNumber';\nimport 'components/ant-design/NumberRange/NumberRange.scss';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nexport interface NumberRangeProps {\n  value?: [number | undefined, number | undefined];\n\n  onChange?(value: [number | undefined, number | undefined]);\n}\n\nfunction NumberRange(props: NumberRangeProps) {\n  const [translate] = useTranslation();\n\n  const {\n    value: [minValue, maxValue] = [], onChange,\n  } = props ?? {};\n\n  const handleChangeMinValue = React.useCallback((value: number) => {\n    if (typeof onChange === 'function') {\n      onChange([value, maxValue]);\n    }\n  }, [maxValue, onChange]);\n\n  const handleChangeMaxValue = React.useCallback((value: number) => {\n    if (typeof onChange === 'function') {\n      onChange([minValue, value]);\n    }\n  }, [minValue, onChange]);\n\n  return (<div className=\"number-range\">\n      <InputNumber defaultValue={minValue}\n                   onChange={handleChangeMinValue}\n                   placeholder={translate('general.numberRange.from')}/>\n      <span className=\"separator\"/>\n      <InputNumber defaultValue={maxValue}\n                   onChange={handleChangeMaxValue}\n                   placeholder={translate('general.numberRange.to')}/>\n    </div>);\n}\n\nexport default NumberRange;\n","import 'components/AdvancedNumberFilter/AdvancedNumberFilter.scss';\nimport InputNumber from 'components/ant-design/InputNumber/InputNumber';\nimport NumberRange from 'components/ant-design/NumberRange/NumberRange';\nimport {NumberFilter} from 'core/filters';\nimport {debounce} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport React, {ComponentProps} from 'react';\nimport nameof from 'ts-nameof.macro';\n\nexport interface AdvancedNumberFilterProps extends ComponentProps<any> {\n  filter: NumberFilter;\n\n  filterType?: keyof NumberFilter | string;\n\n  onChange?(filter: NumberFilter);\n}\n\nconst types: Array<FilterType<NumberFilter>> = NumberFilter.types();\n\nfunction AdvancedNumberFilter(props: AdvancedNumberFilterProps) {\n  const {\n    filter, filterType, onChange, className,\n  } = props;\n\n  const handleSubmitChange = React.useCallback(() => {\n    if (typeof onChange === 'function') {\n      onChange(filter);\n    }\n  }, [filter, onChange]);\n\n  const handleChangeRange = React.useCallback((range) => {\n    types.forEach((type: FilterType<NumberFilter>) => {\n      if (filter.hasOwnProperty(type.key)) {\n        switch (type.key) {\n          case nameof(filter.greaterEqual):\n            filter.greaterEqual = range[0];\n            break;\n          case nameof(filter.lessEqual):\n            filter.lessEqual = range[1];\n            break;\n          default:\n            if (filter.hasOwnProperty(type.key)) {\n              filter[type.key] = undefined;\n            }\n            break;\n        }\n      }\n    });\n  }, [filter]);\n\n  const handleChange = React.useCallback(debounce((value: number | string) => {\n    filter[filterType] = value;\n    if (value === '' && typeof onChange === 'function') {\n      handleSubmitChange();\n    }\n  }), [filter, onChange, filterType]);\n\n  if (filterType === nameof(filter.range)) {\n    const numberFilterRange: [number | undefined, number | undefined] = [filter.greaterEqual, filter.lessEqual];\n    return (<NumberRange value={numberFilterRange}\n                         onChange={handleChangeRange}\n      />);\n  }\n  return (<InputNumber defaultValue={filter[filterType] as number}\n                       onChange={handleChange}\n                       className={className}\n                       onPressEnter={handleSubmitChange}\n    />);\n}\n\nexport default AdvancedNumberFilter;\n","import classNames from 'classnames';\nimport 'components/AdvancedStringFilter/AdvancedStringFilter.scss';\nimport {GuidFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport React, {ChangeEvent, ComponentProps, RefObject} from 'react';\n\nexport interface AdvancedStringFilterProps extends ComponentProps<any> {\n  filter: StringFilter | NumberFilter | IdFilter | GuidFilter;\n\n  filterType?: keyof StringFilter | keyof NumberFilter | keyof IdFilter | keyof GuidFilter | string;\n\n  onChange(filter: StringFilter | NumberFilter | IdFilter | GuidFilter);\n}\n\nfunction AdvancedStringFilter(props: AdvancedStringFilterProps) {\n  const {filter, filterType, onChange, className} = props;\n\n  const ref: RefObject<HTMLInputElement> = React.useRef<HTMLInputElement>(null);\n\n  const {\n    [filterType]: value,\n  } = filter as any;\n\n  const handleChange = React.useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    filter[filterType] = event.target.value;\n    if (event.target.value === '' && typeof onChange === 'function') {\n      onChange(filter);\n    }\n  }, [filter, filterType, onChange]);\n\n  React.useEffect(() => {\n    if (typeof filter[filterType] === 'undefined') {\n      ref.current.value = '';\n    }\n  }, [filter, filterType]);\n\n  const handlePressEnter = React.useCallback((event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && typeof onChange === 'function') {\n      onChange(filter);\n    }\n  }, [filter, onChange]);\n\n  return (<input type=\"text\"\n                 ref={ref}\n                 className={classNames('form-control', className)}\n                 defaultValue={value}\n                 onKeyPress={handlePressEnter}\n                 onChange={handleChange}\n    />);\n}\n\nexport default AdvancedStringFilter;\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class DistrictFilter extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public code?: StringFilter = new StringFilter();\n\n  public name?: StringFilter = new StringFilter();\n\n  public provinceId?: IdFilter = new IdFilter();\n}\n","import Card from 'antd/lib/card';\nimport Form from 'antd/lib/form';\nimport {Col, Row} from 'antd/lib/grid';\nimport Table, {ColumnProps} from 'antd/lib/table';\nimport AdvancedNumberFilter from 'components/AdvancedNumberFilter/AdvancedNumberFilter';\nimport AdvancedStringFilter from 'components/AdvancedStringFilter/AdvancedStringFilter';\nimport {formItemLayout} from 'config/ant-design/ant-design';\nimport {defaultActions, defaultColumnWidth} from 'config/consts';\nimport {defaultKeys} from 'core/config';\nimport {crudService} from 'core/services';\nimport {ContentTableProps} from 'core/types';\nimport {getOrderTypeForTable, renderMasterIndex} from 'helpers/ant-design/table';\nimport {District} from 'models/District';\nimport {DistrictFilter} from 'models/DistrictFilter';\nimport {Province} from 'models/Province';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {antTableService} from 'services';\nimport nameof from 'ts-nameof.macro';\nimport './DistrictContentTable.scss';\n\nconst {Item: FormItem} = Form;\n\nfunction DistrictContentTable(props: ContentTableProps<Province, District>) {\n  const {\n    field, model, setModel,\n  } = props;\n\n  const [translate] = useTranslation();\n\n  const [districts] = crudService.useContentTable(model, setModel, field);\n\n  const [search, setSearch] = React.useState<DistrictFilter>(new DistrictFilter());\n\n  const [dataSource, pagination, sorter, handleTableChange, handleFilter, handleSearch, handleReset] = antTableService.useLocalTable(districts, search, setSearch);\n\n  const columns: Array<ColumnProps<District>> = React.useMemo(() => [{\n    title: translate(defaultKeys.index),\n    key: nameof(defaultKeys.index),\n    width: defaultColumnWidth.index,\n    render: renderMasterIndex<Province>(pagination),\n  }, {\n    title: translate('provinces.districts.id'),\n    key: nameof(districts[0].id),\n    sorter: true,\n    sortOrder: getOrderTypeForTable<Province>(nameof(districts[0].id), sorter),\n    dataIndex: nameof(districts[0].id),\n  }, {\n    title: translate('provinces.districts.code'),\n    sorter: true,\n    sortOrder: getOrderTypeForTable<Province>(nameof(districts[0].code), sorter),\n  }, {\n    title: translate('provinces.districts.name'),\n    key: nameof(districts[0].name),\n    dataIndex: nameof(districts[0].name),\n    sorter: true,\n    sortOrder: getOrderTypeForTable<Province>(nameof(districts[0].name), sorter),\n  }], [districts, pagination, sorter, translate]);\n\n  return (<>\n      <Card title={translate(defaultActions.search)}>\n        <Form {...formItemLayout}>\n          <Row>\n            <Col className=\"pl-1\" span={8}>\n              <FormItem className=\"mb-0\" label={translate('provinces.id')}>\n                <AdvancedNumberFilter filterType={nameof(search.id.equal)}\n                                      filter={search.id}\n                                      onChange={handleFilter(nameof(districts[0].id))}\n                                      className=\"w-100\"/>\n              </FormItem>\n            </Col>\n            <Col className=\"pl-1\" span={8}>\n              <FormItem className=\"mb-0\" label={translate('provinces.code')}>\n                <AdvancedStringFilter filterType={nameof(search.code.startWith)}\n                                      filter={search.code}\n                                      onChange={handleFilter(nameof(districts[0].code))}\n                                      className=\"w-100\"/>\n              </FormItem>\n            </Col>\n            <Col className=\"pl-1\" span={8}>\n              <FormItem className=\"mb-0\" label={translate('provinces.name')}>\n                <AdvancedStringFilter filterType={nameof(search.name.startWith)}\n                                      filter={search.name}\n                                      onChange={handleFilter(nameof(districts[0].name))}\n                                      className=\"w-100\"/>\n              </FormItem>\n            </Col>\n          </Row>\n          <div className=\"d-flex justify-content-end mt-2\">\n            <button className=\"btn btn-primary mr-2\" onClick={handleSearch}>\n              {translate(defaultActions.filter)}\n            </button>\n            <button className=\"btn btn-outline-secondary text-dark\" onClick={handleReset}>\n              <i className=\"fa mr-2 fa-times\"/>\n              {translate(defaultActions.reset)}\n            </button>\n          </div>\n        </Form>\n      </Card>\n      <Table size=\"small\"\n             bordered\n             tableLayout=\"fixed\"\n             dataSource={dataSource}\n             columns={columns}\n             pagination={pagination}\n             onChange={handleTableChange}\n      />\n    </>);\n}\n\nexport default DistrictContentTable;\n","export default 'api-consts';\n\nexport const API_ACCOUNT_MASTER_ROUTE: string = '/api/account/account-master';\nexport const API_ACCOUNT_DETAIL_ROUTE: string = '/api/account/account-detail';\nexport const API_DISTRICT_MASTER_ROUTE: string = '/api/district/district-master';\nexport const API_DISTRICT_DETAIL_ROUTE: string = '/api/district/district-detail';\nexport const API_GROUP_MASTER_ROUTE: string = '/api/group/group-master';\nexport const API_GROUP_DETAIL_ROUTE: string = '/api/group/group-detail';\nexport const API_ORDER_CONTENT_MASTER_ROUTE: string = '/api/order-content/order-content-master';\nexport const API_ORDER_CONTENT_DETAIL_ROUTE: string = '/api/order-content/order-content-detail';\nexport const API_ORDER_MASTER_ROUTE: string = '/api/order/order-master';\nexport const API_ORDER_DETAIL_ROUTE: string = '/api/order/order-detail';\nexport const API_PROVINCE_MASTER_ROUTE: string = '/api/province/province-master';\nexport const API_PROVINCE_DETAIL_ROUTE: string = '/api/province/province-detail';\nexport const API_WARD_MASTER_ROUTE: string = '/api/ward/ward-master';\nexport const API_WARD_DETAIL_ROUTE: string = '/api/ward/ward-detail';\n","/* tslint:disable:variable-name */\nimport {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {createHttpService} from 'core/helpers/http';\n\nexport class Repository {\n\n  private static _defaultRequestInterceptor: (v: AxiosRequestConfig) => AxiosRequestConfig | Promise<AxiosRequestConfig>;\n\n  private static _defaultResponseInterceptor: (v: AxiosResponse<any>) => AxiosResponse<any> | Promise<AxiosResponse<any>>;\n\n  protected http: AxiosInstance;\n\n  constructor(config?: AxiosRequestConfig, requestInterceptor?: (config: AxiosRequestConfig) => AxiosRequestConfig, responseInterceptor?: (response: AxiosResponse) => any) {\n    this.http = createHttpService(config, requestInterceptor, responseInterceptor);\n    if (typeof Repository._defaultRequestInterceptor === 'function') {\n      this.http.interceptors.request.use(Repository._defaultRequestInterceptor);\n    }\n    if (typeof Repository._defaultResponseInterceptor === 'function') {\n      this.http.interceptors.response.use(Repository._defaultResponseInterceptor);\n    }\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.http.defaults.baseURL = baseURL;\n  }\n\n  public getHttpInstance(): AxiosInstance {\n    return this.http;\n  }\n\n  static set defaultRequestInterceptor(value: (v: AxiosRequestConfig) => (AxiosRequestConfig | Promise<AxiosRequestConfig>)) {\n    this._defaultRequestInterceptor = value;\n  }\n\n  static set defaultResponseInterceptor(value: (v: AxiosResponse<any>) => (AxiosResponse<any> | Promise<AxiosResponse<any>>)) {\n    this._defaultResponseInterceptor = value;\n  }\n}\n","import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\n\nexport function createHttpService(config: AxiosRequestConfig, requestInterceptor?: (config: AxiosRequestConfig) => AxiosRequestConfig, responseInterceptor?: (response: AxiosResponse) => any): AxiosInstance {\n  const instance: AxiosInstance = axios.create(config);\n  if (requestInterceptor) {\n    instance.interceptors.request.use(requestInterceptor);\n  }\n  if (responseInterceptor) {\n    instance.interceptors.response.use(responseInterceptor);\n  }\n  return instance;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {District} from './District';\n\nexport class Ward extends Model {\n  public static clone<T extends Model = Ward>(ward?: PureModelData<Ward>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof ward !== 'undefined' && ward !== null) {\n      Object.assign(instance, {\n        ...ward,\n\n        district: District?.clone<District>(ward.district),\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public districtId?: number;\n\n  public district?: District;\n\n  public errors?: ErrorMap<Ward>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Province} from './Province';\nimport {Ward} from './Ward';\n\nexport class District extends Model {\n  public static clone<T extends Model = District>(district?: PureModelData<District>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof district !== 'undefined' && district !== null) {\n      Object.assign(instance, {\n        ...district,\n        province: Province?.clone<Province>(district.province),\n        wards: district.wards?.map((ward: Ward) => Ward.clone<Ward>(ward)),\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public provinceId?: number;\n\n  public province?: Province;\n\n  public wards?: Ward[];\n\n  public errors?: ErrorMap<District>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {District} from './District';\n\nexport class Province extends Model {\n  public static clone<T extends Model = Province>(province?: PureModelData<Province>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof province !== 'undefined' && province !== null) {\n      Object.assign(instance, {\n        ...province,\n\n        districts: province.districts?.map((district: District) => District.clone<District>(district)),\n      });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public districts?: District[];\n\n  public errors?: ErrorMap<Province>;\n}\n","import {AxiosResponse} from 'axios';\n\nimport {API_PROVINCE_DETAIL_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Model} from 'core/models';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Province} from 'models/Province';\nimport nameof from 'ts-nameof.macro';\n\nexport class ProvinceDetailRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_PROVINCE_DETAIL_ROUTE));\n  }\n\n  public get = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.get)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public create = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.create)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public update = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.update)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public delete = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.delete)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Model.clone<Province>(response.data);\n      });\n  };\n\n  public save = (province: Province): Promise<Province> => {\n    if (province.id) {\n      return this.update(province);\n    }\n    return this.create(province);\n  };\n\n}\n\nexport const provinceDetailRepository: ProvinceDetailRepository = new ProvinceDetailRepository();\n","import Card from 'antd/lib/card';\nimport Form from 'antd/lib/form';\nimport Spin from 'antd/lib/spin';\nimport {defaultDetailFormLayout} from 'config/ant-design/ant-design';\nimport {PROVINCE_ROUTE} from 'config/route-consts';\nimport {defaultActions} from 'core/config';\nimport {crudService} from 'core/services';\nimport {Province} from 'models/Province';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {antTableService} from 'services';\nimport nameof from 'ts-nameof.macro';\nimport DistrictContentTable from 'views/DefaultViews/ProvinceView/ProvinceDetail/DistrictContentTable/DistrictContentTable';\nimport 'views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetail.scss';\nimport {provinceDetailRepository} from 'views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetailRepository';\n\nconst {Item: FormItem} = Form;\n\nfunction ProvinceDetail() {\n  const [translate] = useTranslation();\n\n  const [province, setProvince, loading, setLoading, isDetail, handleGoBack, handleSave] = crudService.useDetail<Province>(PROVINCE_ROUTE, provinceDetailRepository.get, provinceDetailRepository.save);\n\n  const handleDelete = antTableService.useDeleteHandler(provinceDetailRepository.delete, setLoading, province, setProvince, handleGoBack);\n\n  return (<div className=\"page detail-page\">\n    <Spin spinning={loading}>\n      <Card title={(<div className=\"d-flex align-items-center\">\n        <button className=\"btn btn-link mr-2\" onClick={handleGoBack}>\n          <i className=\"fa fa-arrow-left\"/>\n        </button>\n        {isDetail ? translate('provinces.detail.title', province) : translate('provinces.add.title')}\n      </div>)}>\n        <div className=\"d-flex justify-content-end align-items-center mb-4\">\n          <button className=\"btn btn-primary\" onClick={handleSave}>\n            <i className=\"fa fa-save mr-2\"/>\n            {translate(defaultActions.save)}\n          </button>\n        </div>\n        <Form {...defaultDetailFormLayout}>\n          <FormItem label={translate('provinces.id')}>\n            <input type=\"text\"\n                   className=\"form-control\"\n                   name={nameof(province.id)}\n                   defaultValue={province.id}\n                   disabled\n            />\n          </FormItem>\n          <FormItem label={translate('provinces.code')}>\n            <input type=\"text\"\n                   className=\"form-control\"\n                   name={nameof(province.code)}\n                   defaultValue={province.code}\n            />\n          </FormItem>\n          <FormItem label={translate('provinces.name')}>\n            <input type=\"text\"\n                   className=\"form-control\"\n                   name={nameof(province.name)}\n                   defaultValue={province.name}\n            />\n          </FormItem>\n        </Form>\n        <div className=\"w-100\">\n          <DistrictContentTable field={nameof(province.districts)}\n                                model={province}\n                                setModel={setProvince}/>\n        </div>\n        <div className=\"d-flex justify-content-between mt-4\">\n          <div className=\"flex-grow-1\">\n            {isDetail && (<button className=\"btn btn-danger\" onClick={handleDelete}>\n              <i className=\"fa fa-trash mr-2\"/>\n              {translate(defaultActions.delete)}\n            </button>)}\n          </div>\n          <button className=\"btn btn-primary\" onClick={handleSave}>\n            <i className=\"fa fa-save mr-2\"/>\n            {translate(defaultActions.save)}\n          </button>\n        </div>\n      </Card>\n    </Spin>\n  </div>);\n}\n\nexport default ProvinceDetail;\n","import classNames from 'classnames';\nimport {translate} from 'core/helpers';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport Modal, {ModalProps} from 'reactstrap/lib/Modal';\nimport ModalBody from 'reactstrap/lib/ModalBody';\nimport ModalFooter from 'reactstrap/lib/ModalFooter';\nimport ModalHeader from 'reactstrap/lib/ModalHeader';\nimport './MasterPreview.scss';\n\nexport interface MasterPreviewProps extends ModalProps {\n  children?: any;\n\n  title?: string;\n\n  onClose?(): void;\n}\n\nfunction MasterPreview(props: MasterPreviewProps) {\n  const [translate] = useTranslation();\n  const {\n    title, children, className, onClose, ...restProps\n  } = props;\n\n  return (<Modal {...restProps}\n                 className={classNames('master-preview', className)}\n                 unmountOnClose={true}>\n      <ModalHeader title={translate(title)}>\n        {translate(title)}\n      </ModalHeader>\n      <ModalBody>\n        {children}\n      </ModalBody>\n      <ModalFooter>\n        <button className=\"btn btn-primary\" onClick={onClose}>\n          {translate('general.actions.close')}\n        </button>\n      </ModalFooter>\n    </Modal>);\n}\n\nMasterPreview.defaultProps = {\n  title: translate('general.master.defaultPreviewTitle'),\n};\n\nexport default MasterPreview;\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class ProvinceFilter extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public code?: StringFilter = new StringFilter();\n\n  public name?: StringFilter = new StringFilter();\n}\n","import {AxiosResponse} from 'axios';\nimport {API_PROVINCE_MASTER_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Province} from 'models/Province';\nimport {ProvinceFilter} from 'models/ProvinceFilter';\nimport nameof from 'ts-nameof.macro';\n\nexport class ProvinceMasterRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_PROVINCE_MASTER_ROUTE));\n  }\n\n  public count = (provinceFilter: ProvinceFilter): Promise<number> => {\n    return this.http.post<number>(kebabCase(nameof(this.count)), provinceFilter)\n      .then((response: AxiosResponse<number>) => {\n        return response.data;\n      });\n  };\n\n  public list = (provinceFilter: ProvinceFilter): Promise<Province[]> => {\n    return this.http.post<Province[]>(kebabCase(nameof(this.list)), provinceFilter)\n      .then((response: AxiosResponse<Array<PureModelData<Province>>>) => {\n        return response.data.map((province: PureModelData<Province>) => {\n          return Province.clone<Province>(province);\n        });\n      });\n  };\n\n  public get = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.get)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public delete = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.delete)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public batchDelete = (idList: number[]): Promise<void> => {\n    return this.http.post<void>(kebabCase(nameof(this.batchDelete)), {\n      idList,\n    })\n      .then((response: AxiosResponse<void>) => {\n        return response.data;\n      });\n  };\n}\n\nexport const provinceMasterRepository: ProvinceMasterRepository = new ProvinceMasterRepository();\n","import {Descriptions} from 'antd';\nimport Card from 'antd/lib/card';\nimport Form from 'antd/lib/form';\nimport {Col, Row} from 'antd/lib/grid';\nimport Table, {ColumnProps} from 'antd/lib/table';\nimport AdvancedNumberFilter from 'components/AdvancedNumberFilter/AdvancedNumberFilter';\nimport AdvancedStringFilter from 'components/AdvancedStringFilter/AdvancedStringFilter';\nimport MasterPreview from 'components/MasterPreview/MasterPreview';\nimport {formItemLayout} from 'config/ant-design/ant-design';\nimport {defaultActions, defaultColumnWidth} from 'config/consts';\nimport {PROVINCE_ROUTE} from 'config/route-consts';\nimport {defaultKeys} from 'core/config';\nimport {crudService} from 'core/services';\nimport {getOrderTypeForTable, renderMasterIndex} from 'helpers/ant-design/table';\nimport {Province} from 'models/Province';\nimport {ProvinceFilter} from 'models/ProvinceFilter';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {antTableService} from 'services';\nimport nameof from 'ts-nameof.macro';\nimport 'views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMaster.scss';\nimport {provinceMasterRepository} from 'views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMasterRepository';\n\nconst {Item: FormItem} = Form;\n\nfunction ProvinceMaster() {\n  const [translate] = useTranslation();\n  const [provinces, search, setSearch, total, loading, handleAdd, handleReset, handleEdit, handleFilter, handleSearch, visible, province, handlePreview, handleClosePreview] = crudService.useMaster<Province, ProvinceFilter>(PROVINCE_ROUTE, provinceMasterRepository.list, provinceMasterRepository.count, ProvinceFilter);\n\n  const [pagination, sorter, handleTableChange] = antTableService.useMasterTable(search, setSearch, total);\n\n  const [selectedRowKeys, onSelectionChange, hasSelected] = antTableService.useRowSelection();\n\n  const columns: Array<ColumnProps<Province>> = React.useMemo(() => [{\n    title: translate(defaultKeys.index),\n    key: nameof(defaultKeys.index),\n    width: defaultColumnWidth.index,\n    render: renderMasterIndex<Province>(pagination),\n  }, {\n    title: translate('provinces.id'),\n    key: nameof(province.id),\n    sorter: true,\n    sortOrder: getOrderTypeForTable<Province>(nameof(province.id), sorter),\n    dataIndex: nameof(province.id),\n  }, {\n    title: translate('provinces.code'), sorter: true, sortOrder: getOrderTypeForTable<Province>(nameof(province.code), sorter),\n  }, {\n    title: translate('provinces.name'),\n    key: nameof(province.name),\n    dataIndex: nameof(province.name),\n    sorter: true,\n    sortOrder: getOrderTypeForTable<Province>(nameof(province.name), sorter),\n  }, {\n    title: translate(defaultActions.label),\n    key: nameof(defaultKeys.actions),\n    dataIndex: nameof(province.id),\n    width: defaultColumnWidth.actions,\n    align: 'center',\n    render(id: number, province: Province) {\n      return (<div className=\"d-flex justify-content-center\">\n          <button className=\"btn btn-link text-warning\" onClick={handlePreview(province)}>\n            <i className=\"fa fa-eye\"/>\n          </button>\n          <button className=\"btn btn-link\" onClick={handleEdit(id)}>\n            <i className=\"fa fa-edit\"/>\n          </button>\n        </div>);\n    },\n  }], [handleEdit, handlePreview, pagination, province.code, province.id, province.name, sorter, translate]);\n\n  return (<div className=\"page master-page\">\n      <Card title={translate('provinces.master.title')}>\n        <Card className=\"mb-4\" title={translate(defaultActions.search)}>\n          <Form {...formItemLayout}>\n            <Row>\n              <Col className=\"pl-1\" span={8}>\n                <FormItem className=\"mb-0\" label={translate('provinces.id')}>\n                  <AdvancedNumberFilter filterType={nameof(search.id.equal)}\n                                        filter={search.id}\n                                        onChange={handleFilter(nameof(province.id))}\n                                        className=\"w-100\"/>\n                </FormItem>\n              </Col>\n              <Col className=\"pl-1\" span={8}>\n                <FormItem className=\"mb-0\" label={translate('provinces.code')}>\n                  <AdvancedStringFilter filterType={nameof(search.code.startWith)}\n                                        filter={search.code}\n                                        onChange={handleFilter(nameof(province.code))}\n                                        className=\"w-100\"/>\n                </FormItem>\n              </Col>\n              <Col className=\"pl-1\" span={8}>\n                <FormItem className=\"mb-0\" label={translate('provinces.name')}>\n                  <AdvancedStringFilter filterType={nameof(search.name.startWith)}\n                                        filter={search.name}\n                                        onChange={handleFilter(nameof(province.name))}\n                                        className=\"w-100\"/>\n                </FormItem>\n              </Col>\n            </Row>\n            <div className=\"d-flex justify-content-end mt-2\">\n              <button className=\"btn btn-primary mr-2\" onClick={handleSearch}>\n                {translate(defaultActions.filter)}\n              </button>\n              <button className=\"btn btn-outline-secondary text-dark\" onClick={handleReset}>\n                <i className=\"fa mr-2 fa-times\"/>\n                {translate(defaultActions.reset)}\n              </button>\n            </div>\n          </Form>\n        </Card>\n        <Table dataSource={provinces}\n               columns={columns}\n               bordered\n               size=\"small\"\n               tableLayout=\"fixed\"\n               loading={loading}\n               rowKey={nameof(province.id)}\n               pagination={pagination}\n               rowSelection={{\n                 onChange: onSelectionChange, selectedRowKeys,\n               }}\n               onChange={handleTableChange}\n               title={() => (<>\n                   <div className=\"d-flex justify-content-between\">\n                     <div className=\"flex-shrink-1 d-flex align-items-center\">\n                       <button className=\"btn btn-primary mr-2\" onClick={handleAdd}>\n                         <i className=\"fa mr-2 fa-plus\"/>\n                         {translate(defaultActions.add)}\n                       </button>\n                       {/* TODO: add batch delete handler */}\n                       <button className=\"btn btn-danger mr-2\" disabled={!hasSelected}>\n                         <i className=\"fa mr-2 fa-trash\"/>\n                         {translate(defaultActions.delete)}\n                       </button>\n                       {/* TODO: add import handler */}\n                       <button className=\"btn btn-outline-primary mr-2\">\n                         <i className=\"fa mr-2 fa-upload\"/>\n                         {translate(defaultActions.import)}\n                       </button>\n                       {/* TODO: add export handler */}\n                       <button className=\"btn btn-outline-primary mr-2\">\n                         <i className=\"fa mr-2 fa-download\"/>\n                         {translate(defaultActions.export)}\n                       </button>\n                     </div>\n                     <div className=\"flex-shrink-1 d-flex align-items-center\">\n                       {translate('general.master.pagination', {pageSize: pagination.pageSize, total})}\n                     </div>\n                   </div>\n                 </>)}\n        />\n        <MasterPreview isOpen={visible} onClose={handleClosePreview} size=\"xl\">\n          <Descriptions title={province.name} bordered>\n            <Descriptions.Item label={translate('provinces.id')}>\n              {province.id}\n            </Descriptions.Item>\n            <Descriptions.Item label={translate('provinces.code')}>\n              {province.code}\n            </Descriptions.Item>\n            <Descriptions.Item label={translate('provinces.name')}>\n              {province.name}\n            </Descriptions.Item>\n          </Descriptions>\n        </MasterPreview>\n      </Card>\n    </div>);\n}\n\nexport default ProvinceMaster;\n","import React from 'react';\nimport {Switch, withRouter} from 'react-router';\nimport {renderRoutes, RouteConfigComponentProps} from 'react-router-config';\nimport 'views/DefaultViews/ProvinceView/ProvinceView.scss';\n\nfunction ProvinceView(props: RouteConfigComponentProps) {\n  const {route} = props;\n\n  return (<Switch>\n      {route?.routes instanceof Array && renderRoutes(route.routes)}\n    </Switch>);\n}\n\nexport default withRouter(ProvinceView);\n","import {PROVINCE_ROUTE, ROOT_ROUTE} from 'config/route-consts';\nimport {defaultActions} from 'core/config';\nimport {translate} from 'core/helpers';\nimport CoreUILayout from 'layouts/CoreUILayout/CoreUILayout';\nimport path from 'path';\nimport {RouteConfig} from 'react-router-config';\nimport nameof from 'ts-nameof.macro';\nimport ProvinceDetail from 'views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetail';\nimport ProvinceMaster from 'views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMaster';\nimport ProvinceView from 'views/DefaultViews/ProvinceView/ProvinceView';\n\nexport const routes: RouteConfig[] = [{\n  name: translate('menu.root'), path: ROOT_ROUTE, component: CoreUILayout, routes: [{\n    name: translate('menu.provinces.name'), path: PROVINCE_ROUTE, component: ProvinceView, routes: [{\n      name: translate('menu.provinces.add'), path: path.join(PROVINCE_ROUTE, nameof(defaultActions.add)), component: ProvinceDetail,\n    }, {\n      name: translate('menu.provinces.detail'), path: path.join(PROVINCE_ROUTE, ':id'), component: ProvinceDetail,\n    }, {\n      name: translate('menu.provinces.master'), path: path.join(PROVINCE_ROUTE), component: ProvinceMaster, exact: true,\n    }],\n  }],\n}];\n","import {GlobalState} from 'core/config';\nimport {ComponentProps} from 'react';\nimport {renderRoutes, RouteConfig} from 'react-router-config';\nimport {Switch} from 'react-router-dom';\nimport React from 'reactn';\n\nexport interface AppProps extends ComponentProps<any> {\n  routes?: RouteConfig[];\n}\n\nfunction App(props: AppProps) {\n  const {routes} = props;\n\n  const [title] = React.useGlobal<GlobalState, 'title'>('title');\n\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  return (<Switch>\n      {renderRoutes(routes)}\n    </Switch>);\n}\n\nexport default App;\n","/* tslint:disable:no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' || // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {ROOT_ID} from 'config/consts';\nimport initialI18NextConfig from 'config/i18next';\nimport {routes} from 'config/routes';\nimport App from 'core/components/App/App';\nimport initialGlobalState, {GlobalState} from 'core/config/global';\nimport {changeLanguage} from 'core/helpers';\nimport i18next from 'i18next';\nimport ReactDOM from 'react-dom';\nimport {initReactI18next} from 'react-i18next';\nimport {BrowserRouter} from 'react-router-dom';\nimport React, {setGlobal} from 'reactn';\nimport * as serviceWorker from 'service-worker';\nimport 'styles';\n\nPromise.all([i18next.use(initReactI18next)\n  .init(initialI18NextConfig)\n  .then(() => {\n    return changeLanguage('vi');\n  }), setGlobal<GlobalState>(initialGlobalState)])\n  .then(() => {\n    const root: HTMLDivElement = document.getElementById(ROOT_ID) as HTMLDivElement;\n    (root.hasChildNodes() ? ReactDOM.hydrate : ReactDOM.render)(<BrowserRouter>\n      <App routes={routes}/>\n    </BrowserRouter>, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n  });\n","import axios, {AxiosResponse} from 'axios';\nimport {GlobalState, LanguageType} from 'core/config';\nimport i18next from 'i18next';\nimport {join} from 'path';\nimport {setGlobal} from 'reactn';\n\n/**\n * Translate marker\n *\n * @param {string} input\n * @returns {string}\n */\nexport function translate(input: string) {\n  return input;\n}\n\nexport async function changeLanguage(language: LanguageType) {\n  await setGlobal<GlobalState>({\n    loading: true,\n  });\n  await axios.get(join('/i18n', `${language}.json`))\n    .then(async (response: AxiosResponse<any>) => {\n      await i18next.addResource(language, '', '', response.data);\n      await i18next.changeLanguage(language);\n      await setGlobal<GlobalState>({\n        language,\n      });\n    });\n}\n"],"sourceRoot":""}