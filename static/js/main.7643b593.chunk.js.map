{"version":3,"sources":["core/config/consts.ts","core/config/global.ts","config/consts.ts","config/i18next.ts","config/route-consts.ts","core/helpers/debounce.ts","core/helpers/url.ts","config/menu.ts","layouts/CoreUILayout/CoreUILayout.tsx","config/ant-design/ant-design.ts","core/models/Cloneable.ts","core/models/Model.ts","core/models/Search.ts","core/services/CRUDService.ts","core/services/RouterService.ts","core/filters/Filter.ts","core/filters/GuidFilter.ts","core/filters/IdFilter.ts","core/filters/StringFilter.ts","core/filters/NumberFilter.ts","core/filters/DateFilter.ts","helpers/ant-design/table.ts","services/ant-design/TableService.ts","config/api-consts.ts","core/repositories/Repository.ts","core/helpers/http.ts","models/Ward.ts","models/District.ts","models/Province.ts","views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetailRepository.ts","views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetail.tsx","components/ant-design/InputNumber/InputNumber.tsx","components/ant-design/NumberRange/NumberRange.tsx","components/AdvancedNumberFilter/AdvancedNumberFilter.tsx","components/AdvancedStringFilter/AdvancedStringFilter.tsx","components/MasterPreview/MasterPreview.tsx","models/ProvinceFilter.ts","views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMasterRepository.ts","views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMaster.tsx","views/DefaultViews/ProvinceView/ProvinceView.tsx","config/routes.tsx","core/components/App/App.tsx","service-worker.ts","index.tsx","core/helpers/translate.ts"],"names":["BASE_URL","process","APP_TITLE","DEFAULT_TAKE","INPUT_DEBOUNCE_TIME","parseInt","DATE_FORMAT","TIME_FORMAT","defaultKeys","index","actions","checkbox","expand","defaultActions","label","add","filter","reset","save","delete","import","export","initialGlobalState","language","fallbackLanguage","loading","title","defaultColumnWidth","i18nextConfig","resources","lng","fallbackLng","ns","defaultNS","nsSeparator","keySeparator","interpolation","escapeValue","nestingSuffixEscaped","prefix","suffix","PROVINCE_ROUTE","debounce","tFunction","debounceTime","lodashDebounce","url","join","menu","items","name","icon","navbarBrandFull","src","width","height","navbarBrandMinimized","withRouter","props","route","useTranslation","translate","translatedMenu","React","useMemo","map","fixed","className","full","minimized","display","navConfig","router","ReactRouterDOM","routes","Array","renderRoutes","formItemLayout","labelCol","xs","span","sm","md","lg","wrapperCol","Cloneable","model","instance","Object","assign","Model","errors","key","Search","skip","take","orderBy","orderType","crudService","setModel","handleSetInputValue","useCallback","field","value","clone","handleDebounceInputValue","handleChangeSimpleField","event","target","handleUpdateDateField","moment","id","t","forEach","v4","setValue","v","handleDelete","newValue","handleAdd","newContent","reference","baseRoute","getDetail","saveDetail","onSavingError","useParams","useState","setT","setLoading","isDetail","history","useHistory","handleGoBack","push","handleSave","a","async","newT","useEffect","then","finally","list","onError","enums","setEnums","catch","search","setSearch","masterList","masterCount","tSearch","setList","total","setTotal","previewVisible","setPreviewVisible","previewModel","setPreviewModel","handleOpenPreview","handleClosePreview","handleEdit","toString","handleReset","newSearch","entries","undefined","filterKey","handleFilter","handleSearch","Promise","all","getList","Filter","this","GuidFilter","equal","notEqual","in","notIn","IdFilter","StringFilter","startWith","notStartWith","endWith","notEndWith","contain","notContain","NumberFilter","greater","greaterEqual","less","lessEqual","range","DateFilter","nameof","getOrderType","getOrderTypeForTable","sorter","order","renderMasterIndex","pagination","current","pageSize","antTableService","onDelete","onSetLoading","onSuccess","onCancel","Modal","confirm","content","okType","onOk","message","info","error","response","data","filterHandler","defaultFilterHandler","columnKey","column","dataSource","length","handleTableChange","newPagination","filters","newSorter","showSizeChanger","toUpperCase","startsWith","setOrderType","selectedRowKeys","TableService","hasType","filterValue","endsWith","indexOf","result","toDate","getTime","minValue","maxValue","minTimeValue","maxTimeValue","comparisonValue","includes","keys","API_PROVINCE_MASTER_ROUTE","API_PROVINCE_DETAIL_ROUTE","Repository","config","requestInterceptor","responseInterceptor","http","axios","create","interceptors","request","use","createHttpService","_defaultRequestInterceptor","_defaultResponseInterceptor","baseURL","defaults","Ward","code","districtId","district","ward","District","provinceId","province","wards","Province","districts","provinceDetailRepository","get","post","kebabCase","update","setBaseURL","FormItem","Form","Item","ProvinceDetail","useDetail","setProvince","useDeleteHandler","spinning","onClick","type","defaultValue","disabled","formatter","x","parseFloat","split","Number","isNaN","parser","toLocaleString","InputNumber","onChange","restProps","ref","useRef","debouncedHandleChange","classNames","defaultProps","allowNegative","onlyInteger","step","NumberRange","handleChangeMinValue","handleChangeMaxValue","placeholder","types","AdvancedNumberFilter","filterType","handleSubmitChange","handleChangeRange","hasOwnProperty","handleChange","numberFilterRange","onPressEnter","AdvancedStringFilter","handlePressEnter","onKeyPress","MasterPreview","children","onClose","unmountOnClose","ProvinceFilter","provinceMasterRepository","count","provinceFilter","ProvinceMaster","useMaster","provinces","visible","handlePreview","useMasterTable","useRowSelection","onSelectionChange","hasSelected","columns","render","sortOrder","dataIndex","align","bordered","size","tableLayout","rowKey","rowSelection","isOpen","path","component","CoreUILayout","ProvinceView","exact","App","useGlobal","document","Boolean","window","location","hostname","match","i18next","initReactI18next","init","initialI18NextConfig","setGlobal","addResource","changeLanguage","root","getElementById","hasChildNodes","ReactDOM","hydrate","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7643b593.chunk.js","sourcesContent":["import {translate} from 'core/helpers/translate';\nimport {TableKeys} from 'core/types';\n\nexport const __DEV__: boolean = process.env.NODE_ENV === 'development';\n\nexport const BASE_URL: string = __DEV__ ? window.location.origin : process.env.REACT_APP_BASE_URL;\n\nexport const APP_TITLE: string = process.env.REACT_APP_TITLE ?? '';\n\nexport const DEFAULT_TAKE: number = 10;\n\nexport const INPUT_DEBOUNCE_TIME: number = parseInt(process.env.INPUT_DEBOUNCE_TIME, 10) ?? 400;\n\nexport const DATE_FORMAT: string = 'YYYY-MM-DD';\n\nexport const TIME_FORMAT: string = 'HH:mm:ss';\n\nexport const DATE_TIME_FORMAT: string = `${DATE_FORMAT} ${TIME_FORMAT}`;\n\nexport const defaultKeys: TableKeys = {\n  index: translate('general.keys.index'),\n  actions: translate('general.keys.actions'),\n  checkbox: translate('general.keys.checkbox'),\n  expand: translate('general.keys.expand'),\n};\n\nexport const defaultActions = {\n  label: translate('general.actions.label'),\n  add: translate('general.actions.add'),\n  filter: translate('general.actions.filter'),\n  reset: translate('general.actions.reset'),\n  save: translate('general.actions.save'),\n  delete: translate('general.actions.delete'),\n  import: translate('general.actions.import'),\n  export: translate('general.actions.export'),\n};\n","import {APP_TITLE} from 'core/config/consts';\n\nexport type LanguageType = 'en' | 'vi';\n\nexport interface GlobalState {\n  language?: LanguageType;\n\n  fallbackLanguage?: LanguageType;\n\n  loading?: boolean;\n\n  title?: string;\n}\n\nconst initialGlobalState: GlobalState = {\n  language: 'vi',\n  fallbackLanguage: 'vi',\n  loading: true,\n  title: APP_TITLE,\n};\n\nexport default initialGlobalState;\n","import {ColumnWidth} from 'core/types';\n\nexport * from 'core/config';\n\nexport const ROOT_ID: string = 'root';\n\nexport const defaultColumnWidth: ColumnWidth = {\n  index: 50,\n  checkbox: 50,\n  expand: 50,\n  actions: 120,\n};\n","import initialGlobalState from 'core/config/global';\nimport {InitOptions} from 'i18next';\n\nconst i18nextConfig: InitOptions = {\n  resources: {},\n  lng: initialGlobalState.language,\n  fallbackLng: initialGlobalState.fallbackLanguage,\n  ns: '',\n  defaultNS: '',\n  nsSeparator: false,\n  keySeparator: '.',\n  interpolation: {\n    escapeValue: false,\n    nestingSuffixEscaped: '.',\n    prefix: '{{',\n    suffix: '}}',\n  },\n};\n\nexport default i18nextConfig;\n","export default 'route-consts';\n\nexport const ROOT_ROUTE: string = '/';\n\nexport const ACCOUNT_ROUTE: string = '/accounts';\nexport const DISTRICT_ROUTE: string = '/districts';\nexport const GROUP_ROUTE: string = '/groups';\nexport const ORDER_CONTENT_ROUTE: string = '/orderContents';\nexport const ORDER_ROUTE: string = '/orders';\nexport const PROVINCE_ROUTE: string = '/provinces';\nexport const WARD_ROUTE: string = '/wards';\n","import {INPUT_DEBOUNCE_TIME} from 'core/config/consts';\nimport lodashDebounce from 'lodash/debounce';\n\nexport function debounce(tFunction: (...params: any[]) => any, debounceTime: number = INPUT_DEBOUNCE_TIME) {\n  return lodashDebounce(tFunction, debounceTime);\n}\n","import {BASE_URL} from 'core/config/consts';\nimport {join} from 'path';\n\nexport function url(...segments: string[]) {\n  return `${BASE_URL}${join(...segments)}`;\n}\n","import {PROVINCE_ROUTE} from 'config/route-consts';\nimport {translate} from 'core/helpers';\nimport {RouteConfig} from 'react-router-config';\n\nexport const menu: { items: RouteConfig[] } = {\n  items: [\n    {\n      name: translate('menu.provinces.name'),\n      url: PROVINCE_ROUTE,\n      icon: 'fa fa-building',\n    },\n  ],\n};\n","import Header from '@coreui/react/lib/Header';\nimport NavbarBrand from '@coreui/react/lib/NavbarBrand';\nimport Sidebar from '@coreui/react/lib/Sidebar';\nimport SidebarMinimizer from '@coreui/react/lib/SidebarMinimizer';\nimport SidebarNav from '@coreui/react/lib/SidebarNav';\nimport SidebarToggler from '@coreui/react/lib/SidebarToggler';\nimport {menu} from 'config/menu';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Switch, withRouter} from 'react-router';\nimport {renderRoutes, RouteConfig, RouteConfigComponentProps} from 'react-router-config';\nimport * as ReactRouterDOM from 'react-router-dom';\nimport './CoreUILayout.scss';\n\ninterface NavbarBrandLogoProps {\n  src: string;\n\n  width?: number;\n\n  height?: number;\n\n  alt?: string;\n}\n\nconst navbarBrandFull: NavbarBrandLogoProps = {\n  src: '/assets/img/brand/logo.svg',\n  width: 89,\n  height: 25,\n};\n\nconst navbarBrandMinimized: NavbarBrandLogoProps = {\n  src: '/assets/img/brand/sygnet.svg',\n  width: 30,\n  height: 30,\n};\n\nfunction CoreUILayout(props: RouteConfigComponentProps) {\n  const {route} = props;\n  const [translate] = useTranslation();\n\n  const translatedMenu = React.useMemo(\n    () => ({\n      items: menu.items.map((route: RouteConfig) => ({\n        ...route,\n        name: translate(route.name),\n      })),\n    }),\n    [translate],\n  );\n\n  return (\n    <>\n      <Header fixed className=\"navbar\">\n        <NavbarBrand\n          full={navbarBrandFull}\n          minimized={navbarBrandMinimized}\n        />\n        <SidebarToggler className=\"d-md-down-none\" display=\"lg\"/>\n      </Header>\n      <div className=\"app-body\">\n        <Sidebar display=\"lg\" fixed>\n          <SidebarNav navConfig={translatedMenu} router={ReactRouterDOM}/>\n          <SidebarMinimizer/>\n        </Sidebar>\n        <main className=\"main\">\n          <div className=\"app-content\">\n            <Switch>\n              {route?.routes instanceof Array && renderRoutes(route.routes)}\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(CoreUILayout);\n","import {FormProps} from 'antd/lib/form';\nimport {AntSortType} from 'core/types';\n\nexport const formItemLayout: FormProps = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 24},\n    md: {span: 12},\n    lg: {span: 8},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 24},\n    md: {span: 12},\n    lg: {span: 16},\n  },\n};\n\nexport const antSortType: AntSortType = {\n  ASC: 'ascend',\n  DESC: 'descend',\n};\n","import {PureModelData} from 'core/types';\n\nexport class Cloneable {\n  public static clone<T extends Cloneable>(model?: PureModelData<T>): T {\n    const instance: T = new Cloneable() as T;\n    if (typeof model !== 'undefined' && model !== null) {\n      Object.assign(instance, model);\n    }\n    return instance;\n  }\n}\n","import {ErrorMap} from '../types';\nimport {Cloneable} from './Cloneable';\n\nexport class Model extends Cloneable {\n  public errors?: ErrorMap<Model>;\n\n  public key?: string | number;\n\n  [key: string]: any;\n\n  constructor(model?: Model) {\n    super();\n    if (model !== null && typeof model === 'object') {\n      Object.assign(this, model);\n    }\n  }\n}\n","import {DEFAULT_TAKE} from '../config';\nimport {Cloneable} from './Cloneable';\n\nexport class Search extends Cloneable {\n  public skip?: number = 0;\n\n  public take?: number = DEFAULT_TAKE;\n\n  public orderBy?: string;\n\n  public orderType?: string;\n}\n","import {DetailParams} from 'core/types';\nimport {Moment} from 'moment';\nimport {join} from 'path';\nimport React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport nameof from 'ts-nameof.macro';\nimport v4 from 'uuid/v4';\nimport {DEFAULT_TAKE, defaultActions} from '../config';\nimport {Filter, IdFilter} from '../filters';\nimport {debounce} from '../helpers';\nimport {Model, Search} from '../models';\n\nexport class CRUDService {\n  public useChangeHandlers<T extends Model>(model?: T, setModel?: (t: T) => void): [\n    (field: string) => (value) => void,\n    (field: string) => (value) => void,\n    (field: string) => (value) => void,\n  ] {\n    const handleSetInputValue = React.useCallback(\n      (field: string, value: string | number | boolean | null | undefined) => {\n        setModel(Model.clone<T>({\n          ...model,\n          [field]: value,\n        }));\n      },\n      [model, setModel],\n    );\n\n    const handleDebounceInputValue = React.useCallback(\n      debounce(handleSetInputValue),\n      [handleSetInputValue],\n    );\n\n    const handleChangeSimpleField = React.useCallback(\n      (field: string, debounce: boolean = false) => {\n        return (event: React.ChangeEvent<HTMLInputElement> | number | string | boolean) => {\n          if (typeof event === 'object') {\n            if ('target' in event) {\n              if (debounce) {\n                return handleDebounceInputValue(field, event.target.value);\n              }\n              return handleSetInputValue(field, event.target.value);\n            }\n            if ('format' in event) {\n              setModel(Model.clone<T>({\n                ...model,\n                [field]: event,\n              }));\n            }\n          }\n          if (debounce) {\n            return handleDebounceInputValue(field, event);\n          }\n          return handleSetInputValue(field, event);\n        };\n      },\n      [handleDebounceInputValue, handleSetInputValue, model, setModel],\n    );\n\n    const handleUpdateDateField = React.useCallback(\n      (field: string) => {\n        return (moment: Moment) => {\n          setModel(Model.clone<T>({\n            ...model,\n            [field]: moment,\n          }));\n        };\n      },\n      [model, setModel],\n    );\n\n    const handleChangeObjectField = React.useCallback(\n      (field: string) => {\n        return (id?: number | string | null, t?: T) => {\n          setModel(Model.clone<T>({\n            ...model,\n            [field]: t,\n            [`${field}Id`]: id,\n          }));\n        };\n      },\n      [model, setModel],\n    );\n\n    return [\n      handleChangeSimpleField,\n      handleChangeObjectField,\n      handleUpdateDateField,\n    ];\n  }\n\n  public useContentTable<T extends Model, TContent extends Model>(\n    model: T,\n    setModel: (t: T) => void,\n    field: string,\n  ): [\n    TContent[],\n    (v: TContent[]) => void,\n    () => void,\n    (id: number) => () => void,\n  ] {\n    const value: TContent[] = React.useMemo(\n      () => {\n        if (model[field]) {\n          model[field]?.forEach((t: T) => {\n            if (!t?.key) {\n              if (t?.id) {\n                t.key = t.id;\n              } else {\n                t.key = v4();\n              }\n            }\n          });\n          return model[field];\n        }\n        return [];\n      },\n      [field, model],\n    );\n\n    const setValue = React.useCallback(\n      (v: TContent[]) => {\n        setModel(Model.clone<T>({\n          ...model,\n          [field]: v,\n        }));\n      },\n      [field, model, setModel],\n    );\n\n    const handleDelete = React.useCallback(\n      (id: number) => {\n        return () => {\n          const newValue: TContent[] = value.filter((v: TContent) => v.id !== id);\n          setValue(newValue);\n        };\n      },\n      [value, setValue],\n    );\n\n    const handleAdd = React.useCallback(\n      () => {\n        const newContent: TContent = new Model() as TContent;\n        newContent.key = v4();\n        if (value instanceof Array) {\n          setValue([\n            ...value,\n            newContent,\n          ]);\n        } else {\n          setValue([\n            newContent,\n          ]);\n        }\n      },\n      [setValue, value],\n    );\n\n    return [value, setValue, handleAdd, handleDelete];\n  }\n\n  public useDefaultList<T1 extends Model, T2 extends Model>(model: T1, field: string): T2[] {\n    return React.useMemo(\n      () => {\n        const reference: T2 = model[field];\n        if (reference) {\n          return [reference];\n        }\n        return [];\n      },\n      [field, model],\n    );\n  }\n\n  public useDetail<T extends Model>(\n    baseRoute: string,\n    getDetail?: (t?: T) => Promise<T>,\n    saveDetail?: (t?: T) => Promise<T>,\n    onSavingError?: (error: Error) => void,\n  ): [\n    T,\n    (t: T) => void,\n    boolean,\n    (loading: boolean) => void,\n    boolean,\n    () => void,\n    () => void,\n  ] {\n    const {id} = useParams<DetailParams>();\n    const [t, setT] = React.useState<T>(new Model() as T);\n    const [loading, setLoading] = React.useState<boolean>(false);\n    const isDetail: boolean = typeof id === 'string';\n    const history = useHistory();\n\n    const handleGoBack = React.useCallback(\n      () => {\n        history.push(join(baseRoute));\n      },\n      [baseRoute, history],\n    );\n\n    const handleSave = React.useCallback(\n      async () => {\n        setLoading(true);\n        try {\n          const newT: T = await saveDetail(t);\n          if (t?.id) {\n            setT(newT);\n          } else {\n            history.push(join(baseRoute, newT.id));\n          }\n        } catch (error) {\n          if (typeof onSavingError === 'function') {\n            onSavingError(error);\n          }\n        }\n        setLoading(false);\n      },\n      [baseRoute, history, onSavingError, saveDetail, t],\n    );\n\n    React.useEffect(\n      () => {\n        if (typeof getDetail === 'function' && isDetail) {\n          setLoading(true);\n          const t: T = Model.clone<Model>({\n            id,\n          }) as T;\n          getDetail(t)\n            .then((t: T) => {\n              setT(t);\n            })\n            .finally(() => {\n              setLoading(false);\n            });\n        }\n      },\n      [getDetail, id, isDetail],\n    );\n\n    return [t, setT, loading, setLoading, isDetail, handleGoBack, handleSave];\n  }\n\n  public useEnumList<T extends Model>(\n    list: () => Promise<T[]>,\n    onError?: (error: Error) => void,\n  ): [T[], (list: T[]) => void, boolean] {\n    const [enums, setEnums] = React.useState<T[]>([]);\n    const [loading, setLoading] = React.useState<boolean>(false);\n    React.useEffect(\n      () => {\n        setLoading(true);\n        list()\n          .then((enums: T[]) => {\n            setEnums(enums);\n          })\n          .catch(onError)\n          .finally(\n            () => {\n              setLoading(false);\n            },\n          );\n      },\n      [list, onError],\n    );\n    return [enums, setEnums, loading];\n  }\n\n  public useFilter<TSearch extends Search, P extends keyof TSearch>(\n    search: TSearch,\n    setSearch: (search: TSearch) => void,\n    field: P,\n  ): [\n    TSearch[P],\n    (filter: TSearch[P]) => void,\n  ] {\n    const filter: TSearch[P] = search[field];\n\n    const setFilter = React.useCallback(\n      (filter: TSearch[P]) => {\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          [field]: filter,\n        }));\n      },\n      [field, search, setSearch],\n    );\n\n    return [filter, setFilter];\n  }\n\n  public useMaster<T extends Model, TSearch extends Search>(\n    baseRoute: string,\n    masterList: (tSearch?: TSearch) => Promise<T[]>,\n    masterCount: (tSearch?: TSearch) => Promise<number>,\n    tSearch: new () => TSearch,\n  ): [\n    T[],\n    TSearch,\n    (tSearch: TSearch) => void,\n    number,\n    boolean,\n    () => void,\n    () => void,\n    (id: number) => () => void,\n    (field: string) => (filter: Filter) => void,\n    () => void,\n    boolean,\n    T,\n    (t: T) => () => void,\n    () => void,\n  ] {\n    const [search, setSearch] = React.useState<TSearch>(new tSearch());\n\n    const [list, setList] = React.useState<T[]>([]);\n\n    const [loading, setLoading] = React.useState<boolean>(false);\n\n    const [total, setTotal] = React.useState<number>(0);\n\n    const history = useHistory();\n\n    const [previewVisible, setPreviewVisible] = React.useState<boolean>(false);\n\n    const [previewModel, setPreviewModel] = React.useState<T>(Model.clone<T>());\n\n    const handleOpenPreview = React.useCallback(\n      (t: T) => {\n        return () => {\n          setPreviewModel(t);\n          setPreviewVisible(true);\n        };\n      },\n      [],\n    );\n\n    const handleClosePreview = React.useCallback(\n      () => {\n        setPreviewVisible(false);\n      },\n      [],\n    );\n\n    const handleAdd = React.useCallback(\n      () => {\n        history.push(join(baseRoute, nameof(defaultActions.add)));\n      },\n      [history, baseRoute],\n    );\n\n    const handleEdit = React.useCallback(\n      (id: number) => {\n        return () => {\n          history.push(join(baseRoute, id.toString()));\n        };\n      },\n      [baseRoute, history],\n    );\n\n    const handleReset = React.useCallback(\n      () => {\n        const newSearch: TSearch = Search.clone<TSearch>(search);\n        Object\n          .entries(newSearch)\n          .forEach(([key, value]) => {\n            switch (key) {\n              case nameof(newSearch.skip):\n                newSearch.skip = 0;\n                break;\n\n              case nameof(newSearch.take):\n                newSearch.take = DEFAULT_TAKE;\n                break;\n\n              case nameof(newSearch.orderBy):\n                newSearch.orderBy = undefined;\n                break;\n\n              case nameof(newSearch.orderType):\n                newSearch.orderBy = undefined;\n                break;\n\n              default:\n                if (typeof value === 'object' && value !== null) {\n                  Object\n                    .entries(value)\n                    .forEach(([filterKey]) => {\n                      value[filterKey] = undefined;\n                    });\n                  newSearch[key] = {...value};\n                }\n                break;\n            }\n          });\n        setSearch(newSearch);\n      },\n      [search, setSearch],\n    );\n\n    const handleFilter = React.useCallback(\n      (field: string) => {\n        return (filter: Filter) => {\n          setSearch(Search.clone<TSearch>({\n            ...search,\n            [field]: filter,\n          }));\n        };\n      },\n      [search, setSearch],\n    );\n\n    const handleSearch = React.useCallback(\n      () => {\n        setSearch(Search.clone<TSearch>(search));\n      },\n      [search],\n    );\n\n    React.useEffect(\n      () => {\n        setLoading(true);\n        Promise.all([\n          masterList(search),\n          masterCount(search),\n        ])\n          .then(([list, total]: [T[], number]) => {\n            setList(list);\n            setTotal(total);\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      },\n      [masterCount, masterList, search],\n    );\n\n    return [\n      list,\n      search,\n      setSearch,\n      total,\n      loading,\n      handleAdd,\n      handleReset,\n      handleEdit,\n      handleFilter,\n      handleSearch,\n      previewVisible,\n      previewModel,\n      handleOpenPreview,\n      handleClosePreview,\n    ];\n  }\n\n  public usePreloadList<T extends Model, TSearch extends Search>(\n    getList: (search: TSearch) => Promise<T[]>,\n    id: IdFilter,\n  ): T[] {\n    const [list, setList] = React.useState<T[]>([]);\n\n    React.useEffect(\n      () => {\n        getList({id, ...new Search() as TSearch})\n          .then(setList);\n      },\n      [getList, id],\n    );\n\n    return list;\n  }\n}\n\nexport const crudService: CRUDService = new CRUDService();\n","export class RouterService {\n\n}\n\nexport const routerService: RouterService = new RouterService();\n","import {FilterType} from 'core/types';\n\nexport class Filter {\n  public static types(): Array<FilterType<Filter>> {\n    return [];\n  }\n\n  constructor(filter?: Filter) {\n    if (!!filter) {\n      Object.assign(this, filter);\n    }\n  }\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class GuidFilter extends Filter {\n  public static types(filter?: GuidFilter): Array<FilterType<GuidFilter>> {\n    return [\n      {\n        key: nameof(filter.equal),\n        label: translate('filters.guidFilter.equal'),\n      },\n      {\n        key: nameof(filter.notEqual),\n        label: translate('filters.guidFilter.notEqual'),\n      },\n      {\n        key: nameof(filter.in),\n        label: translate('filters.guidFilter.in'),\n      },\n      {\n        key: nameof(filter.notIn),\n        label: translate('filters.guidFilter.notIn'),\n      },\n    ];\n  }\n\n  public equal?: string;\n\n  public notEqual?: string;\n\n  public in?: string[];\n\n  public notIn?: string[];\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class IdFilter extends Filter {\n  public static types(filter?: IdFilter): Array<FilterType<IdFilter>> {\n    return [\n      {\n        key: nameof(filter.equal),\n        label: translate('filters.idFilter.equal'),\n      },\n      {\n        key: nameof(filter.notEqual),\n        label: translate('filters.idFilter.notEqual'),\n      },\n      {\n        key: nameof(filter.in),\n        label: translate('filters.idFilter.in'),\n      },\n      {\n        key: nameof(filter.notIn),\n        label: translate('filters.idFilter.notIn'),\n      },\n    ];\n  }\n\n  public equal?: number;\n\n  public notEqual?: number;\n\n  public in?: number[];\n\n  public notIn?: number[];\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from './Filter';\n\nexport class StringFilter extends Filter {\n  public static types(filter?: StringFilter): Array<FilterType<StringFilter>> {\n    return [\n      {\n        key: nameof(filter.startWith),\n        label: translate('filters.stringFilter.startWith'),\n      },\n      {\n        key: nameof(filter.notStartWith),\n        label: translate('filters.stringFilter.notStartWith'),\n      },\n      {\n        key: nameof(filter.endWith),\n        label: translate('filters.stringFilter.endWith'),\n      },\n      {\n        key: nameof(filter.notEndWith),\n        label: translate('filters.stringFilter.notEndWith'),\n      },\n      {\n        key: nameof(filter.contain),\n        label: translate('filters.stringFilter.contain'),\n      },\n      {\n        key: nameof(filter.notContain),\n        label: translate('filters.stringFilter.notContain'),\n      },\n      {\n        key: nameof(filter.equal),\n        label: translate('filters.stringFilter.equal'),\n      },\n      {\n        key: nameof(filter.notEqual),\n        label: translate('filters.stringFilter.notEqual'),\n      },\n    ];\n  }\n\n  public startWith?: string;\n\n  public notStartWith?: string;\n\n  public endWith?: string;\n\n  public notEndWith?: string;\n\n  public equal?: string;\n\n  public notEqual?: string;\n\n  public contain?: string;\n\n  public notContain?: string;\n}\n","import {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport nameof from 'ts-nameof.macro';\nimport {Filter} from '../filters/Filter';\n\nexport class NumberFilter extends Filter {\n  public static types(filter?: NumberFilter): Array<FilterType<NumberFilter>> {\n    return [\n      {\n        key: nameof(filter.equal),\n        label: translate('filters.numberFilter.equal'),\n      },\n      {\n        key: nameof(filter.notEqual),\n        label: translate('filters.numberFilter.notEqual'),\n      },\n      {\n        key: nameof(filter.greater),\n        label: translate('filters.numberFilter.greater'),\n      },\n      {\n        key: nameof(filter.greaterEqual),\n        label: translate('filters.numberFilter.greaterEqual'),\n      },\n      {\n        key: nameof(filter.less),\n        label: translate('filters.numberFilter.less'),\n      },\n      {\n        key: nameof(filter.lessEqual),\n        label: translate('filters.numberFilter.lessEqual'),\n      },\n      {\n        key: nameof(filter.range),\n        label: translate('filters.numberFilter.range'),\n      },\n    ];\n  }\n\n  public equal?: number;\n\n  public notEqual?: number;\n\n  public greater?: number;\n\n  public greaterEqual?: number;\n\n  public less?: number;\n\n  public lessEqual?: number;\n\n  public range?: [number | undefined, number | undefined];\n}\n","import {Filter} from 'core/filters/Filter';\nimport {translate} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport {Moment} from 'moment';\n\nexport class DateFilter extends Filter {\n  public static types(filter?: DateFilter): Array<FilterType<DateFilter>> {\n    return [\n      {\n        key: nameof(filter.equal),\n        label: translate('filters.dateFilter.equal'),\n      },\n      {\n        key: nameof(filter.notEqual),\n        label: translate('filters.dateFilter.notEqual'),\n      },\n      {\n        key: nameof(filter.greater),\n        label: translate('filters.dateFilter.greater'),\n      },\n      {\n        key: nameof(filter.greaterEqual),\n        label: translate('filters.dateFilter.greaterEqual'),\n      },\n      {\n        key: nameof(filter.less),\n        label: translate('filters.dateFilter.less'),\n      },\n      {\n        key: nameof(filter.lessEqual),\n        label: translate('filters.dateFilter.lessEqual'),\n      },\n      {\n        key: nameof(filter.range),\n        label: translate('filters.dateFilter.range'),\n      },\n    ];\n  }\n\n  public equal?: Moment;\n\n  public notEqual?: Moment;\n\n  public greater?: Moment;\n\n  public greaterEqual?: Moment;\n\n  public less?: Moment;\n\n  public lessEqual?: Moment;\n\n  public range?: [Moment | null | undefined, Moment | null | undefined];\n}\n","import {PaginationProps} from 'antd/lib/pagination';\nimport {SorterResult} from 'antd/lib/table';\nimport {antSortType} from 'config/ant-design/ant-design';\nimport {DEFAULT_TAKE} from 'core/config';\nimport {Model, Search} from 'core/models';\nimport nameof from 'ts-nameof.macro';\n\nexport function setOrderType(search: Search, orderType: string | null | undefined | boolean) {\n  if (typeof orderType === 'undefined') {\n    search.orderType = undefined;\n    return;\n  }\n  if (typeof orderType === 'string') {\n    if (orderType.toUpperCase().startsWith(nameof(antSortType.ASC))) {\n      search.orderType = nameof(antSortType.ASC);\n      return;\n    }\n    search.orderType = nameof(antSortType.DESC);\n    return;\n  }\n  if (typeof orderType === 'boolean') {\n    if (orderType) {\n      return nameof(antSortType.ASC);\n    }\n    search.orderType = nameof(antSortType.DESC);\n    return nameof(antSortType.DESC);\n  }\n  search.orderType = undefined;\n}\n\nexport function getOrderType(search: Search): 'ascend' | 'descend' | undefined {\n  if (search.orderType) {\n    if (search.orderType === nameof(antSortType.ASC)) {\n      return 'ascend';\n    }\n    return 'descend';\n  }\n  return undefined;\n}\n\nexport function getOrderTypeForTable<T extends Model>(field: string, sorter: SorterResult<T>) {\n  return (field === sorter.field) ? sorter.order : undefined;\n}\n\nexport function renderMasterIndex<T extends Model>(pagination?: PaginationProps) {\n  return (...[, , index]: [any, T, number]) => {\n    if (pagination) {\n      const {\n        current = 1,\n        pageSize = DEFAULT_TAKE,\n      } = pagination;\n      return index + 1 + (current - 1) * pageSize;\n    }\n    return index + 1;\n  };\n}\n","import message from 'antd/lib/message';\nimport Modal from 'antd/lib/modal';\nimport {PaginationConfig, PaginationProps} from 'antd/lib/pagination';\nimport {SorterResult} from 'antd/lib/table';\nimport {AxiosError} from 'axios';\nimport {DEFAULT_TAKE} from 'core/config';\nimport {DateFilter, Filter, GuidFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport {translate} from 'core/helpers';\nimport {Model, Search} from 'core/models';\nimport {getOrderType, getOrderTypeForTable, setOrderType} from 'helpers/ant-design/table';\nimport {Moment} from 'moment';\nimport {useTranslation} from 'react-i18next';\nimport React from 'reactn';\nimport nameof from 'ts-nameof.macro';\n\nconst DEFAULT_SUCCESS_MESSAGE: string = translate('general.delete.success');\nconst DEFAULT_FAILURE_MESSAGE: string = translate('general.delete.failure');\nconst DEFAULT_TITLE_MESSAGE: string = translate('general.delete.title');\nconst DEFAULT_CONTENT_MESSAGE: string = translate('general.delete.content');\n\nexport type FilterHandlerType<TSearch extends Search> = (list: any[], search?: TSearch) => any[];\n\nexport class TableService {\n  public static hasType(filter: Filter) {\n    return Object.keys(filter).length > 0;\n  }\n\n  public useDeleteHandler<T extends Model>(\n    onDelete: (t: T) => Promise<T>,\n    onSetLoading: (loading: boolean) => void,\n    model: T,\n    setModel: (t: T) => void,\n    onSuccess?: (t?: T) => void,\n    onError?: (error: Error) => void,\n    onCancel?: () => void,\n  ) {\n    const [translate] = useTranslation();\n    return React.useMemo(\n      () => {\n        return () => {\n          Modal.confirm({\n            title: translate(DEFAULT_TITLE_MESSAGE, model),\n            content: translate(DEFAULT_CONTENT_MESSAGE, model),\n            okType: 'danger',\n            onOk: () => {\n              onSetLoading(true);\n              onDelete(model)\n                .then(() => {\n                  message.info(translate(DEFAULT_SUCCESS_MESSAGE, model));\n                  if (typeof onSuccess === 'function') {\n                    onSuccess();\n                  }\n                })\n                .catch((error: AxiosError<T>) => {\n                  message.error(translate(DEFAULT_FAILURE_MESSAGE, {error, ...model}));\n                  setModel(Model.clone<T>({\n                    ...model,\n                    errors: error.response.data,\n                  }));\n                  if (typeof onError === 'function') {\n                    onError(error);\n                  }\n                })\n                .finally(\n                  () => {\n                    onSetLoading(false);\n                  },\n                );\n            },\n            onCancel,\n          });\n        };\n      },\n      // tslint:disable-next-line:max-line-length\n      [model, onCancel, onDelete, onError, onSetLoading, onSuccess, setModel, translate],\n    );\n  }\n\n  public useLocalTable<T extends Model, TSearch extends Search>(\n    list: T[],\n    search: TSearch,\n    setSearch: (search: TSearch) => void,\n    filterHandler: FilterHandlerType<TSearch> = this.defaultFilterHandler,\n  ): [\n    T[],\n    PaginationProps,\n    SorterResult<TSearch>,\n    (newPagination: PaginationConfig, filters: Record<string, any>, newSorter: SorterResult<T>) => void,\n    (field: string) => (filter: Filter) => void,\n  ] {\n    const sorter: SorterResult<TSearch> = React.useMemo(\n      () => ({\n        field: search.orderBy,\n        order: getOrderType(search),\n        columnKey: search.orderBy,\n        column: undefined,\n      }),\n      [search],\n    );\n\n    const dataSource: T[] = React.useMemo(\n      () => {\n        return filterHandler(list, search);\n      },\n      [filterHandler, list, search],\n    );\n\n    const pagination: PaginationProps = React.useMemo(\n      () => {\n        const {\n          skip,\n          take,\n        } = search;\n\n        const {length} = dataSource ?? [];\n\n        return {\n          current: (skip / take) + 1,\n          pageSize: take,\n          total: length,\n        };\n      },\n      [dataSource, search],\n    );\n\n    const handleTableChange = React.useCallback(\n      (\n        newPagination: PaginationConfig,\n        filters: Record<string, any>,\n        newSorter: SorterResult<T>,\n      ) => {\n        const {pageSize: take} = newPagination;\n        const skip: number = (newPagination.current - 1) * newPagination.pageSize;\n\n        if (skip !== search.skip || take !== search.take) {\n          setSearch(Search.clone<TSearch>({\n            ...search,\n            skip,\n            take,\n          }));\n          return;\n        }\n\n        const {field, order} = sorter;\n\n        if (newSorter.field !== field || newSorter.order !== order) {\n          setSearch(Search.clone<TSearch>({\n            ...search,\n            orderBy: newSorter.field,\n            orderType: getOrderTypeForTable<T>(newSorter.field, newSorter),\n          }));\n          return;\n        }\n\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          ...filters,\n        }));\n      },\n      [search, setSearch, sorter],\n    );\n\n    const handleFilter = React.useCallback(\n      (field: string) => {\n        return (filter: Filter) => {\n          setSearch(Search.clone<TSearch>({\n            ...search,\n            [field]: filter,\n          }));\n        };\n      },\n      [search, setSearch],\n    );\n\n    return [dataSource, pagination, sorter, handleTableChange, handleFilter];\n  }\n\n  public useMasterTable<T extends Model, TSearch extends Search>(\n    search: TSearch,\n    setSearch: (search: TSearch) => void,\n    total: number,\n  ): [\n    PaginationProps,\n    SorterResult<T>,\n    (pagination: PaginationProps, filters: Record<string, any>, newSorter: SorterResult<T>) => void,\n  ] {\n\n    const pagination: PaginationProps = React.useMemo(\n      () => ({\n        total,\n        current: search.skip / search.take + 1,\n        pageSize: search.take,\n        showSizeChanger: true,\n      }),\n      [search.skip, search.take, total],\n    );\n\n    const sorter: SorterResult<T> = React.useMemo(\n      () => ({\n        field: search.orderBy,\n        order: getOrderType(search),\n      } as SorterResult<T>),\n      [search],\n    );\n\n    const handleTableChange = React.useCallback(\n      (\n        newPagination: PaginationProps,\n        filters: Record<string, any>,\n        newSorter: SorterResult<T>,\n      ) => {\n        const {field, order} = sorter;\n        if (newSorter.field !== field || newSorter.order !== order) {\n          const newSearch: TSearch = Search.clone<TSearch>({\n            ...search,\n            orderBy: newSorter.field,\n            skip: 0,\n          });\n          setOrderType(newSearch, newSorter.order);\n          setSearch(newSearch);\n          return;\n        }\n        const {\n          current = 1,\n          pageSize = DEFAULT_TAKE,\n          total = 0,\n        } = newPagination;\n        if (pagination.current !== current || pagination.pageSize !== pageSize || pagination.total !== total) {\n          setSearch(Search.clone<TSearch>({\n            ...search,\n            take: pageSize,\n            skip: (current - 1) * pageSize,\n          }));\n          return;\n        }\n        setSearch(Search.clone<TSearch>({\n          ...search,\n          ...filters,\n        }));\n      },\n      [pagination, search, setSearch, sorter],\n    );\n    return [pagination, sorter, handleTableChange];\n  }\n\n  public useRowSelection(): [\n    any[],\n    (selectedRowKeys: any[]) => void,\n    boolean,\n  ] {\n    const [selectedRowKeys, setSelectedRowKeys] = React.useState<any[]>([]);\n\n    return [\n      selectedRowKeys,\n      setSelectedRowKeys,\n      selectedRowKeys.length > 0,\n    ];\n  }\n\n  private defaultFilterHandler<T extends Model, TSearch extends Search>(list: T[], search?: TSearch) {\n    if (search) {\n      Object\n        .entries(search)\n        .forEach(([key, value]) => {\n          switch (key) {\n            case nameof(search.skip):\n\n              break;\n\n            case nameof(search.take):\n\n              break;\n\n            case nameof(search.orderBy):\n\n              break;\n\n            case nameof(search.orderType):\n\n              break;\n\n            default:\n              if (value instanceof Filter && TableService.hasType(value)) {\n                if (value instanceof StringFilter) {\n                  Object\n                    .entries(value)\n                    .forEach(([filterKey, filterValue]) => {\n                      switch (filterKey) {\n                        case nameof(value.startWith):\n                          list = list.filter((t: T) => {\n                            return (t[key] as string)?.startsWith(filterValue);\n                          });\n                          break;\n\n                        case nameof(value.endWith):\n                          list = list.filter((t: T) => {\n                            return (t[key] as string)?.endsWith(filterValue);\n                          });\n                          break;\n\n                        case nameof(value.contain):\n                          list = list.filter((t: T) => {\n                            return (t[key] as string)?.indexOf(filterValue) >= 0;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    });\n                } else if (value instanceof NumberFilter) {\n                  Object\n                    .entries(value)\n                    .forEach(([filterKey, filterValue]) => {\n                      switch (filterKey) {\n                        case nameof(value.range):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number') {\n                              let result: boolean = true;\n                              if (filterValue instanceof Array) {\n                                if (typeof filterValue[0] === 'number') {\n                                  result = result && v >= filterValue[0];\n                                }\n                                if (typeof filterValue[1] === 'number') {\n                                  result = result && v <= filterValue[1];\n                                }\n                              }\n                              return result;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.equal):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number' && typeof filterValue === 'number') {\n                              return v === filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number' && typeof filterValue === 'number') {\n                              return v !== filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.less):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number' && typeof filterValue === 'number') {\n                              return v < filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.greater):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number' && typeof filterValue === 'number') {\n                              return v > filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.lessEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number' && typeof filterValue === 'number') {\n                              return v <= filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.greaterEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if (typeof v === 'number' && typeof filterValue === 'number') {\n                              return v >= filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    });\n                } else if (value instanceof DateFilter) {\n                  Object\n                    .entries(value)\n                    .forEach(([filterKey, filterValue]) => {\n                      switch (filterKey) {\n                        case nameof(value.range):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number') {\n                              const [minValue, maxValue] = (filterValue ?? []) as [Moment, Moment];\n                              let result: boolean = true;\n                              if (minValue !== null && typeof minValue === 'object') {\n                                const minTimeValue: number = minValue.toDate().getTime();\n                                result = result && minTimeValue <= v;\n                              }\n                              if (maxValue !== null && typeof maxValue === 'object') {\n                                const maxTimeValue: number = maxValue.toDate().getTime();\n                                result = result && maxTimeValue >= v;\n                              }\n                              return result;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.equal):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v === comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v !== comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.less):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v < comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.greater):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v > comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.lessEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v <= comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.greaterEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = (t[key] as Moment)?.toDate().getTime();\n                            if (typeof v === 'number' && typeof filterValue === 'object' && filterValue !== null) {\n                              const comparisonValue: number = (filterValue as Moment)?.toDate().getTime();\n                              if (typeof comparisonValue === 'number') {\n                                return v >= comparisonValue;\n                              }\n                              return true;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    });\n                } else if (value instanceof IdFilter || value instanceof GuidFilter) {\n                  Object\n                    .entries(value)\n                    .forEach(([filterKey, filterValue]) => {\n                      switch (filterKey) {\n                        case nameof(value.equal):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (typeof filterValue === 'number' || typeof filterValue === 'string')) {\n                              return v === filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notEqual):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (typeof filterValue === 'number' || typeof filterValue === 'string')) {\n                              return v !== filterValue;\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.in):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (filterValue instanceof Array)) {\n                              return filterValue.includes(v);\n                            }\n                            return true;\n                          });\n                          break;\n\n                        case nameof(value.notIn):\n                          list = list.filter((t: T) => {\n                            const v: number = t[key] as number;\n                            if ((typeof v === 'number' || typeof value === 'string') && (filterValue instanceof Array)) {\n                              return !filterValue.includes(v);\n                            }\n                            return true;\n                          });\n                          break;\n\n                        default:\n                          // Do nothing\n                          break;\n                      }\n                    });\n                }\n              }\n              break;\n          }\n        });\n      return list;\n    }\n    return list;\n  }\n}\n\nexport const antTableService: TableService = new TableService();\n","export default 'api-consts';\n\nexport const API_ACCOUNT_MASTER_ROUTE: string = '/api/account/account-master';\nexport const API_ACCOUNT_DETAIL_ROUTE: string = '/api/account/account-detail';\nexport const API_DISTRICT_MASTER_ROUTE: string = '/api/district/district-master';\nexport const API_DISTRICT_DETAIL_ROUTE: string = '/api/district/district-detail';\nexport const API_GROUP_MASTER_ROUTE: string = '/api/group/group-master';\nexport const API_GROUP_DETAIL_ROUTE: string = '/api/group/group-detail';\nexport const API_ORDER_CONTENT_MASTER_ROUTE: string = '/api/order-content/order-content-master';\nexport const API_ORDER_CONTENT_DETAIL_ROUTE: string = '/api/order-content/order-content-detail';\nexport const API_ORDER_MASTER_ROUTE: string = '/api/order/order-master';\nexport const API_ORDER_DETAIL_ROUTE: string = '/api/order/order-detail';\nexport const API_PROVINCE_MASTER_ROUTE: string = '/api/province/province-master';\nexport const API_PROVINCE_DETAIL_ROUTE: string = '/api/province/province-detail';\nexport const API_WARD_MASTER_ROUTE: string = '/api/ward/ward-master';\nexport const API_WARD_DETAIL_ROUTE: string = '/api/ward/ward-detail';\n","/* tslint:disable:variable-name */\nimport {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {createHttpService} from 'core/helpers/http';\n\nexport class Repository {\n\n  private static _defaultRequestInterceptor: (v: AxiosRequestConfig) => AxiosRequestConfig | Promise<AxiosRequestConfig>;\n\n  private static _defaultResponseInterceptor: (v: AxiosResponse<any>) => AxiosResponse<any> | Promise<AxiosResponse<any>>;\n\n  protected http: AxiosInstance;\n\n  constructor(\n    config?: AxiosRequestConfig,\n    requestInterceptor?: (config: AxiosRequestConfig) => AxiosRequestConfig,\n    responseInterceptor?: (response: AxiosResponse) => any,\n  ) {\n    this.http = createHttpService(config, requestInterceptor, responseInterceptor);\n    if (typeof Repository._defaultRequestInterceptor === 'function') {\n      this.http.interceptors.request.use(Repository._defaultRequestInterceptor);\n    }\n    if (typeof Repository._defaultResponseInterceptor === 'function') {\n      this.http.interceptors.response.use(Repository._defaultResponseInterceptor);\n    }\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.http.defaults.baseURL = baseURL;\n  }\n\n  public getHttpInstance(): AxiosInstance {\n    return this.http;\n  }\n\n  static set defaultRequestInterceptor(value: (v: AxiosRequestConfig) => (AxiosRequestConfig | Promise<AxiosRequestConfig>)) {\n    this._defaultRequestInterceptor = value;\n  }\n\n  static set defaultResponseInterceptor(value: (v: AxiosResponse<any>) => (AxiosResponse<any> | Promise<AxiosResponse<any>>)) {\n    this._defaultResponseInterceptor = value;\n  }\n}\n","import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\n\nexport function createHttpService(\n  config: AxiosRequestConfig,\n  requestInterceptor?: (config: AxiosRequestConfig) => AxiosRequestConfig,\n  responseInterceptor?: (response: AxiosResponse) => any,\n): AxiosInstance {\n  const instance: AxiosInstance = axios.create(config);\n  if (requestInterceptor) {\n    instance.interceptors.request.use(requestInterceptor);\n  }\n  if (responseInterceptor) {\n    instance.interceptors.response.use(responseInterceptor);\n  }\n  return instance;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {District} from './District';\n\nexport class Ward extends Model {\n  public static clone<T extends Model = Ward>(ward?: PureModelData<Ward>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof ward !== 'undefined' && ward !== null) {\n      Object.assign(instance,\n        {\n          ...ward,\n\n          district: District?.clone<District>(ward.district),\n        });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public districtId?: number;\n\n  public district?: District;\n\n  public errors?: ErrorMap<Ward>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {Province} from './Province';\nimport {Ward} from './Ward';\n\nexport class District extends Model {\n  public static clone<T extends Model = District>(district?: PureModelData<District>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof district !== 'undefined' && district !== null) {\n      Object.assign(instance,\n        {\n          ...district,\n          province: Province?.clone<Province>(district.province),\n          wards: district.wards?.map((ward: Ward) => Ward.clone<Ward>(ward)),\n        });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public provinceId?: number;\n\n  public province?: Province;\n\n  public wards?: Ward[];\n\n  public errors?: ErrorMap<District>;\n}\n","import {Model} from 'core/models';\nimport {ErrorMap, PureModelData} from 'core/types';\nimport {District} from './District';\n\nexport class Province extends Model {\n  public static clone<T extends Model = Province>(province?: PureModelData<Province>): T | null {\n    const instance: T = new Model() as T;\n    if (typeof province !== 'undefined' && province !== null) {\n      Object.assign(instance,\n        {\n          ...province,\n\n          districts: province.districts?.map((district: District) => District.clone<District>(district)),\n        });\n      return instance;\n    }\n    return null;\n  }\n\n  public id?: number;\n\n  public code?: string;\n\n  public name?: string;\n\n  public districts?: District[];\n\n  public errors?: ErrorMap<Province>;\n}\n","import {AxiosResponse} from 'axios';\n\nimport {API_PROVINCE_DETAIL_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Model} from 'core/models';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Province} from 'models/Province';\nimport nameof from 'ts-nameof.macro';\n\nexport class ProvinceDetailRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_PROVINCE_DETAIL_ROUTE));\n  }\n\n  public get = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.get)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public create = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.create)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public update = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.update)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n  public delete = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.delete)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Model.clone<Province>(response.data);\n      });\n  };\n\n  public save = (province: Province): Promise<Province> => {\n    if (province.id) {\n      return this.update(province);\n    }\n    return this.create(province);\n  };\n\n}\n\nexport const provinceDetailRepository: ProvinceDetailRepository = new ProvinceDetailRepository();\n","import Card from 'antd/lib/card';\nimport Form from 'antd/lib/form';\nimport Spin from 'antd/lib/spin';\nimport {formItemLayout} from 'config/ant-design/ant-design';\nimport {PROVINCE_ROUTE} from 'config/route-consts';\nimport {defaultActions} from 'core/config';\nimport {crudService} from 'core/services';\nimport {Province} from 'models/Province';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {antTableService} from 'services';\nimport nameof from 'ts-nameof.macro';\nimport 'views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetail.scss';\nimport {provinceDetailRepository} from 'views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetailRepository';\n\nconst {Item: FormItem} = Form;\n\nfunction ProvinceDetail() {\n  const [translate] = useTranslation();\n\n  const [\n    province,\n    setProvince,\n    loading,\n    setLoading,\n    isDetail,\n    handleGoBack,\n    handleSave,\n  ] = crudService.useDetail<Province>(\n    PROVINCE_ROUTE,\n    provinceDetailRepository.get,\n    provinceDetailRepository.save,\n  );\n\n  const handleDelete = antTableService.useDeleteHandler(\n    provinceDetailRepository.delete,\n    setLoading,\n    province,\n    setProvince,\n    handleGoBack,\n  );\n\n  return (\n    <div className=\"page detail-page\">\n      <Spin spinning={loading}>\n        <Card title={(\n          <div className=\"d-flex align-items-center\">\n            <button className=\"btn btn-link mr-2\" onClick={handleGoBack}>\n              <i className=\"fa fa-arrow-left\"/>\n            </button>\n            {isDetail ? translate('provinces.detail.title', province) : translate('provinces.add.title')}\n          </div>\n        )}>\n          <div className=\"d-flex justify-content-end align-items-center mb-4\">\n            <button className=\"btn btn-primary\" onClick={handleSave}>\n              <i className=\"fa fa-save mr-2\"/>\n              {translate(defaultActions.save)}\n            </button>\n          </div>\n          <Form {...formItemLayout}>\n            <FormItem label={translate('provinces.id')}>\n              <input type=\"text\"\n                     className=\"form-control\"\n                     name={nameof(province.id)}\n                     defaultValue={province.id}\n                     disabled\n              />\n            </FormItem>\n            <FormItem label={translate('provinces.code')}>\n              <input type=\"text\"\n                     className=\"form-control\"\n                     name={nameof(province.code)}\n                     defaultValue={province.code}\n              />\n            </FormItem>\n            <FormItem label={translate('provinces.name')}>\n              <input type=\"text\"\n                     className=\"form-control\"\n                     name={nameof(province.name)}\n                     defaultValue={province.name}\n              />\n            </FormItem>\n          </Form>\n          <div className=\"d-flex justify-content-between mt-4\">\n            <div className=\"flex-grow-1\">\n              {isDetail && (\n                <button className=\"btn btn-danger\" onClick={handleDelete}>\n                  <i className=\"fa fa-trash mr-2\"/>\n                  {translate(defaultActions.delete)}\n                </button>\n              )}\n            </div>\n            <button className=\"btn btn-primary\" onClick={handleSave}>\n              <i className=\"fa fa-save mr-2\"/>\n              {translate(defaultActions.save)}\n            </button>\n          </div>\n        </Card>\n      </Spin>\n    </div>\n  );\n}\n\nexport default ProvinceDetail;\n","import AntInputNumber, {InputNumberProps} from 'antd/lib/input-number';\nimport classNames from 'classnames';\nimport 'components/ant-design/InputNumber/InputNumber.scss';\nimport {debounce} from 'core/helpers';\nimport React, {LegacyRef, ReactText} from 'react';\n\nfunction formatter(x: ReactText) {\n  if (typeof x === 'string') {\n    x = parser(x);\n  }\n  if (typeof x === 'number') {\n    return x.toLocaleString();\n  }\n  return '';\n}\n\nfunction parser(x: string) {\n  const result: number = parseFloat(x.split(',').join(''));\n  if (Number.isNaN(result)) {\n    return '';\n  }\n  return result;\n}\n\nfunction InputNumber(props: InputNumberProps) {\n  const {defaultValue, onChange, className, ...restProps} = props;\n\n  const ref: LegacyRef<any> = React.useRef();\n\n  const [value, setValue] = React.useState<number>(defaultValue);\n\n  React.useEffect(\n    () => {\n      if (typeof defaultValue === 'undefined') {\n        setValue(undefined);\n      }\n    },\n    [defaultValue],\n  );\n\n  const debouncedHandleChange = React.useCallback(\n    debounce((value: number) => {\n      setValue(value);\n      if (typeof onChange === 'function') {\n        onChange(value);\n      }\n    }),\n    [onChange],\n  );\n\n  return (\n    <AntInputNumber\n      ref={ref}\n      formatter={formatter}\n      defaultValue={defaultValue}\n      onChange={debouncedHandleChange}\n      value={value}\n      {...restProps}\n      className={classNames('form-control', className)}\n    />\n  );\n}\n\nInputNumber.defaultProps = {\n  allowNegative: true,\n  onlyInteger: false,\n  step: 1,\n};\n\nexport default InputNumber;\n","import InputNumber from 'components/ant-design/InputNumber/InputNumber';\nimport 'components/ant-design/NumberRange/NumberRange.scss';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nexport interface NumberRangeProps {\n  value?: [number | undefined, number | undefined];\n\n  onChange?(value: [number | undefined, number | undefined]);\n}\n\nfunction NumberRange(props: NumberRangeProps) {\n  const [translate] = useTranslation();\n\n  const {\n    value: [\n      minValue,\n      maxValue,\n    ] = [],\n    onChange,\n  } = props ?? {};\n\n  const handleChangeMinValue = React.useCallback(\n    (value: number) => {\n      if (typeof onChange === 'function') {\n        onChange([value, maxValue]);\n      }\n    },\n    [maxValue, onChange],\n  );\n\n  const handleChangeMaxValue = React.useCallback(\n    (value: number) => {\n      if (typeof onChange === 'function') {\n        onChange([minValue, value]);\n      }\n    },\n    [minValue, onChange],\n  );\n\n  return (\n    <div className=\"number-range\">\n      <InputNumber defaultValue={minValue}\n                   onChange={handleChangeMinValue}\n                   placeholder={translate('general.numberRange.from')}/>\n      <span className=\"separator\"/>\n      <InputNumber defaultValue={maxValue}\n                   onChange={handleChangeMaxValue}\n                   placeholder={translate('general.numberRange.to')}/>\n    </div>\n  );\n}\n\nexport default NumberRange;\n","import 'components/AdvancedNumberFilter/AdvancedNumberFilter.scss';\nimport InputNumber from 'components/ant-design/InputNumber/InputNumber';\nimport NumberRange from 'components/ant-design/NumberRange/NumberRange';\nimport {NumberFilter} from 'core/filters';\nimport {debounce} from 'core/helpers';\nimport {FilterType} from 'core/types';\nimport React, {ComponentProps} from 'react';\nimport nameof from 'ts-nameof.macro';\n\nexport interface AdvancedNumberFilterProps extends ComponentProps<any> {\n  filter: NumberFilter;\n\n  filterType?: keyof NumberFilter | string;\n\n  onChange?(filter: NumberFilter);\n}\n\nconst types: Array<FilterType<NumberFilter>> = NumberFilter.types();\n\nfunction AdvancedNumberFilter(props: AdvancedNumberFilterProps) {\n  const {\n    filter,\n    filterType,\n    onChange,\n    className,\n  } = props;\n\n  const handleSubmitChange = React.useCallback(\n    () => {\n      if (typeof onChange === 'function') {\n        onChange(filter);\n      }\n    },\n    [filter, onChange],\n  );\n\n  const handleChangeRange = React.useCallback(\n    (range) => {\n      types.forEach((type: FilterType<NumberFilter>) => {\n        if (filter.hasOwnProperty(type.key)) {\n          switch (type.key) {\n            case nameof(filter.greaterEqual):\n              filter.greaterEqual = range[0];\n              break;\n            case nameof(filter.lessEqual):\n              filter.lessEqual = range[1];\n              break;\n            default:\n              if (filter.hasOwnProperty(type.key)) {\n                filter[type.key] = undefined;\n              }\n              break;\n          }\n        }\n      });\n    },\n    [filter],\n  );\n\n  const handleChange = React.useCallback(\n    debounce((value: number | string) => {\n      filter[filterType] = value;\n      if (value === '' && typeof onChange === 'function') {\n        handleSubmitChange();\n      }\n    }),\n    [filter, onChange, filterType],\n  );\n\n  if (filterType === nameof(filter.range)) {\n    const numberFilterRange: [number | undefined, number | undefined] = [filter.greaterEqual, filter.lessEqual];\n    return (\n      <NumberRange value={numberFilterRange}\n                   onChange={handleChangeRange}\n      />\n    );\n  }\n  return (\n    <InputNumber defaultValue={filter[filterType] as number}\n                 onChange={handleChange}\n                 className={className}\n                 onPressEnter={handleSubmitChange}\n    />\n  );\n}\n\nexport default AdvancedNumberFilter;\n","import classNames from 'classnames';\nimport 'components/AdvancedStringFilter/AdvancedStringFilter.scss';\nimport {GuidFilter, IdFilter, NumberFilter, StringFilter} from 'core/filters';\nimport React, {ChangeEvent, ComponentProps, RefObject} from 'react';\n\nexport interface AdvancedStringFilterProps extends ComponentProps<any> {\n  filter: StringFilter | NumberFilter | IdFilter | GuidFilter;\n\n  filterType?: keyof StringFilter | keyof NumberFilter | keyof IdFilter | keyof GuidFilter | string;\n\n  onChange(filter: StringFilter | NumberFilter | IdFilter | GuidFilter);\n}\n\nfunction AdvancedStringFilter(props: AdvancedStringFilterProps) {\n  const {filter, filterType, onChange, className} = props;\n\n  const ref: RefObject<HTMLInputElement> = React.useRef<HTMLInputElement>(null);\n\n  const {\n    [filterType]: value,\n  } = filter as any;\n\n  const handleChange = React.useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      filter[filterType] = event.target.value;\n      if (event.target.value === '' && typeof onChange === 'function') {\n        onChange(filter);\n      }\n    },\n    [filter, filterType, onChange],\n  );\n\n  React.useEffect(\n    () => {\n      if (typeof filter[filterType] === 'undefined') {\n        ref.current.value = '';\n      }\n    },\n    [filter, filterType],\n  );\n\n  const handlePressEnter = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter' && typeof onChange === 'function') {\n        onChange(filter);\n      }\n    },\n    [filter, onChange],\n  );\n\n  return (\n    <input type=\"text\"\n           ref={ref}\n           className={classNames('form-control', className)}\n           defaultValue={value}\n           onKeyPress={handlePressEnter}\n           onChange={handleChange}\n    />\n  );\n}\n\nexport default AdvancedStringFilter;\n","import classNames from 'classnames';\nimport {translate} from 'core/helpers';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport Modal, {ModalProps} from 'reactstrap/lib/Modal';\nimport ModalBody from 'reactstrap/lib/ModalBody';\nimport ModalFooter from 'reactstrap/lib/ModalFooter';\nimport ModalHeader from 'reactstrap/lib/ModalHeader';\nimport './MasterPreview.scss';\n\nexport interface MasterPreviewProps extends ModalProps {\n  children?: any;\n\n  title?: string;\n\n  onClose?(): void;\n}\n\nfunction MasterPreview(props: MasterPreviewProps) {\n  const [translate] = useTranslation();\n  const {\n    title,\n    children,\n    className,\n    onClose,\n    ...restProps\n  } = props;\n\n  return (\n    <Modal {...restProps}\n           className={classNames('master-preview', className)}\n           unmountOnClose={true}>\n      <ModalHeader title={translate(title)}>\n        {translate(title)}\n      </ModalHeader>\n      <ModalBody>\n        {children}\n      </ModalBody>\n      <ModalFooter>\n        <button className=\"btn btn-primary\" onClick={onClose}>\n          {translate('general.actions.close')}\n        </button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nMasterPreview.defaultProps = {\n  title: translate('general.master.defaultPreviewTitle'),\n};\n\nexport default MasterPreview;\n","import {IdFilter, StringFilter} from 'core/filters';\nimport {Search} from 'core/models';\n\nexport class ProvinceFilter extends Search {\n  public id?: IdFilter = new IdFilter();\n\n  public code?: StringFilter = new StringFilter();\n\n  public name?: StringFilter = new StringFilter();\n}\n","import {AxiosResponse} from 'axios';\n\nimport {API_PROVINCE_MASTER_ROUTE} from 'config/api-consts';\nimport {url} from 'core/helpers/url';\nimport {Repository} from 'core/repositories';\nimport {PureModelData} from 'core/types';\nimport kebabCase from 'lodash/kebabCase';\nimport {Province} from 'models/Province';\nimport {ProvinceFilter} from 'models/ProvinceFilter';\nimport nameof from 'ts-nameof.macro';\n\nexport class ProvinceMasterRepository extends Repository {\n  constructor() {\n    super();\n    this.setBaseURL(url(API_PROVINCE_MASTER_ROUTE));\n  }\n\n  public count = (provinceFilter: ProvinceFilter): Promise<number> => {\n    return this.http.post<number>(kebabCase(nameof(this.count)), provinceFilter)\n      .then((response: AxiosResponse<number>) => {\n        return response.data;\n      });\n  };\n\n  public list = (provinceFilter: ProvinceFilter): Promise<Province[]> => {\n    return this.http.post<Province[]>(kebabCase(nameof(this.list)), provinceFilter)\n      .then((response: AxiosResponse<Array<PureModelData<Province>>>) => {\n        return response.data.map((province: PureModelData<Province>) => {\n          return Province.clone<Province>(province);\n        });\n      });\n  };\n\n  public get = (province: Province): Promise<Province> => {\n    return this.http.post<Province>(kebabCase(nameof(this.get)), province)\n      .then((response: AxiosResponse<PureModelData<Province>>) => {\n        return Province.clone<Province>(response.data);\n      });\n  };\n\n}\n\nexport const provinceMasterRepository: ProvinceMasterRepository = new ProvinceMasterRepository();\n","import Card from 'antd/lib/card';\nimport Empty from 'antd/lib/empty';\nimport Form from 'antd/lib/form';\nimport {Col, Row} from 'antd/lib/grid';\nimport Table, {ColumnProps} from 'antd/lib/table';\nimport AdvancedNumberFilter from 'components/AdvancedNumberFilter/AdvancedNumberFilter';\nimport AdvancedStringFilter from 'components/AdvancedStringFilter/AdvancedStringFilter';\nimport MasterPreview from 'components/MasterPreview/MasterPreview';\nimport {formItemLayout} from 'config/ant-design/ant-design';\nimport {defaultActions, defaultColumnWidth} from 'config/consts';\nimport {PROVINCE_ROUTE} from 'config/route-consts';\nimport {defaultKeys} from 'core/config';\nimport {crudService} from 'core/services';\nimport {getOrderTypeForTable, renderMasterIndex} from 'helpers/ant-design/table';\nimport {Province} from 'models/Province';\nimport {ProvinceFilter} from 'models/ProvinceFilter';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {antTableService} from 'services';\nimport nameof from 'ts-nameof.macro';\nimport 'views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMaster.scss';\nimport {provinceMasterRepository} from 'views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMasterRepository';\n\nconst {Item: FormItem} = Form;\n\nfunction ProvinceMaster() {\n  const [translate] = useTranslation();\n  const [\n    provinces,\n    search,\n    setSearch,\n    total,\n    loading,\n    handleAdd,\n    handleReset,\n    handleEdit,\n    handleFilter,\n    handleSearch,\n    visible,\n    province,\n    handlePreview,\n    handleClosePreview,\n  ] = crudService.useMaster<Province, ProvinceFilter>(\n    PROVINCE_ROUTE,\n    provinceMasterRepository.list,\n    provinceMasterRepository.count,\n    ProvinceFilter,\n  );\n\n  const [\n    pagination,\n    sorter,\n    handleTableChange,\n  ] = antTableService.useMasterTable(search, setSearch, total);\n\n  const [selectedRowKeys, onSelectionChange, hasSelected] = antTableService.useRowSelection();\n\n  const columns: Array<ColumnProps<Province>> = React.useMemo(\n    () => [\n      {\n        title: translate(defaultKeys.index),\n        key: nameof(defaultKeys.index),\n        width: defaultColumnWidth.index,\n        render: renderMasterIndex<Province>(pagination),\n      },\n      {\n        title: translate('provinces.id'),\n        key: nameof(province.id),\n        sorter: true,\n        sortOrder: getOrderTypeForTable<Province>(nameof(province.id), sorter),\n        dataIndex: nameof(province.id),\n      },\n      {\n        title: translate('provinces.code'),\n        sorter: true,\n        sortOrder: getOrderTypeForTable<Province>(nameof(province.code), sorter),\n      },\n      {\n        title: translate('provinces.name'),\n        key: nameof(province.name),\n        dataIndex: nameof(province.name),\n        sorter: true,\n        sortOrder: getOrderTypeForTable<Province>(nameof(province.name), sorter),\n      },\n      {\n        title: translate(defaultActions.label),\n        key: nameof(defaultKeys.actions),\n        dataIndex: nameof(province.id),\n        width: defaultColumnWidth.actions,\n        align: 'center',\n        render(id: number, province: Province) {\n          return (\n            <div className=\"d-flex justify-content-center\">\n              <button className=\"btn btn-link text-warning\" onClick={handlePreview(province)}>\n                <i className=\"fa fa-eye\"/>\n              </button>\n              <button className=\"btn btn-link\" onClick={handleEdit(id)}>\n                <i className=\"fa fa-edit\"/>\n              </button>\n            </div>\n          );\n        },\n      },\n    ],\n    [handleEdit, handlePreview, pagination, province.code, province.id, province.name, sorter, translate],\n  );\n\n  return (\n    <div className=\"page master-page\">\n      <Card title={translate('provinces.master.title')}>\n        <Card className=\"mb-4\">\n          <Form {...formItemLayout}>\n            <Row>\n              <Col className=\"pl-1\" span={8}>\n                <FormItem className=\"mb-0\" label={translate('provinces.id')}>\n                  <AdvancedNumberFilter filterType={nameof(search.id.equal)}\n                                        filter={search.id}\n                                        onChange={handleFilter(nameof(province.id))}\n                                        className=\"w-100\"/>\n                </FormItem>\n              </Col>\n              <Col className=\"pl-1\" span={8}>\n                <FormItem className=\"mb-0\" label={translate('provinces.code')}>\n                  <AdvancedStringFilter filterType={nameof(search.code.startWith)}\n                                        filter={search.code}\n                                        onChange={handleFilter(nameof(province.code))}\n                                        className=\"w-100\"/>\n                </FormItem>\n              </Col>\n              <Col className=\"pl-1\" span={8}>\n                <FormItem className=\"mb-0\" label={translate('provinces.name')}>\n                  <AdvancedStringFilter filterType={nameof(search.name.startWith)}\n                                        filter={search.name}\n                                        onChange={handleFilter(nameof(province.name))}\n                                        className=\"w-100\"/>\n                </FormItem>\n              </Col>\n            </Row>\n            <div className=\"d-flex justify-content-end mt-2\">\n              <button className=\"btn btn-primary mr-2\" onClick={handleSearch}>\n                {translate(defaultActions.filter)}\n              </button>\n              <button className=\"btn btn-outline-secondary text-dark\" onClick={handleReset}>\n                <i className=\"fa mr-2 fa-times\"/>\n                {translate(defaultActions.reset)}\n              </button>\n            </div>\n          </Form>\n        </Card>\n        <Table dataSource={provinces}\n               columns={columns}\n               bordered\n               size=\"small\"\n               tableLayout=\"fixed\"\n               loading={loading}\n               rowKey={nameof(province.id)}\n               pagination={pagination}\n               rowSelection={{\n                 onChange: onSelectionChange,\n                 selectedRowKeys,\n               }}\n               onChange={handleTableChange}\n               title={() => (\n                 <>\n                   <div className=\"d-flex justify-content-between\">\n                     <div className=\"flex-shrink-1 d-flex align-items-center\">\n                       <button className=\"btn btn-primary mr-2\" onClick={handleAdd}>\n                         <i className=\"fa mr-2 fa-plus\"/>\n                         {translate(defaultActions.add)}\n                       </button>\n                       <button className=\"btn btn-danger mr-2\" disabled={!hasSelected}>\n                         <i className=\"fa mr-2 fa-trash\"/>\n                         {translate(defaultActions.delete)}\n                       </button>\n                       <button className=\"btn btn-outline-primary mr-2\">\n                         <i className=\"fa mr-2 fa-upload\"/>\n                         {translate(defaultActions.import)}\n                       </button>\n                       <button className=\"btn btn-outline-primary mr-2\">\n                         <i className=\"fa mr-2 fa-download\"/>\n                         {translate(defaultActions.export)}\n                       </button>\n                     </div>\n                     <div className=\"flex-shrink-1 d-flex align-items-center\">\n                       {translate('general.master.pagination', {pageSize: pagination.pageSize, total})}\n                     </div>\n                   </div>\n                 </>\n               )}\n        />\n        <MasterPreview isOpen={visible} onClose={handleClosePreview} size=\"xl\">\n          <Empty/>\n        </MasterPreview>\n      </Card>\n    </div>\n  );\n}\n\nexport default ProvinceMaster;\n","import React from 'react';\nimport {Switch, withRouter} from 'react-router';\nimport {renderRoutes, RouteConfigComponentProps} from 'react-router-config';\nimport 'views/DefaultViews/ProvinceView/ProvinceView.scss';\n\nfunction ProvinceView(props: RouteConfigComponentProps) {\n  const {route} = props;\n\n  return (\n    <Switch>\n      {route?.routes instanceof Array && renderRoutes(route.routes)}\n    </Switch>\n  );\n}\n\nexport default withRouter(ProvinceView);\n","import {PROVINCE_ROUTE, ROOT_ROUTE} from 'config/route-consts';\nimport {defaultActions} from 'core/config';\nimport {translate} from 'core/helpers';\nimport CoreUILayout from 'layouts/CoreUILayout/CoreUILayout';\nimport path from 'path';\nimport {RouteConfig} from 'react-router-config';\nimport nameof from 'ts-nameof.macro';\nimport ProvinceDetail from 'views/DefaultViews/ProvinceView/ProvinceDetail/ProvinceDetail';\nimport ProvinceMaster from 'views/DefaultViews/ProvinceView/ProvinceMaster/ProvinceMaster';\nimport ProvinceView from 'views/DefaultViews/ProvinceView/ProvinceView';\n\nexport const routes: RouteConfig[] = [\n  {\n    name: translate('menu.root'),\n    path: ROOT_ROUTE,\n    component: CoreUILayout,\n    routes: [\n      {\n        name: translate('menu.provinces.name'),\n        path: PROVINCE_ROUTE,\n        component: ProvinceView,\n        routes: [\n          {\n            name: translate('menu.provinces.add'),\n            path: path.join(PROVINCE_ROUTE, nameof(defaultActions.add)),\n            component: ProvinceDetail,\n          },\n          {\n            name: translate('menu.provinces.detail'),\n            path: path.join(PROVINCE_ROUTE, ':id'),\n            component: ProvinceDetail,\n          },\n          {\n            name: translate('menu.provinces.master'),\n            path: path.join(PROVINCE_ROUTE),\n            component: ProvinceMaster,\n            exact: true,\n          },\n        ],\n      },\n    ],\n  },\n];\n","import {GlobalState} from 'core/config';\nimport {ComponentProps} from 'react';\nimport {renderRoutes, RouteConfig} from 'react-router-config';\nimport {Switch} from 'react-router-dom';\nimport React from 'reactn';\n\nexport interface AppProps extends ComponentProps<any> {\n  routes?: RouteConfig[];\n}\n\nfunction App(props: AppProps) {\n  const {routes} = props;\n\n  const [title] = React.useGlobal<GlobalState, 'title'>('title');\n\n  React.useEffect(\n    () => {\n      document.title = title;\n    },\n    [title],\n  );\n\n  return (\n    <Switch>\n      {renderRoutes(routes)}\n    </Switch>\n  );\n}\n\nexport default App;\n","/* tslint:disable:no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {ROOT_ID} from 'config/consts';\nimport initialI18NextConfig from 'config/i18next';\nimport {routes} from 'config/routes';\nimport App from 'core/components/App/App';\nimport initialGlobalState, {GlobalState} from 'core/config/global';\nimport {changeLanguage} from 'core/helpers';\nimport i18next from 'i18next';\nimport ReactDOM from 'react-dom';\nimport {initReactI18next} from 'react-i18next';\nimport {BrowserRouter} from 'react-router-dom';\nimport React, {setGlobal} from 'reactn';\nimport * as serviceWorker from 'service-worker';\nimport 'styles';\n\nPromise.all([\n  i18next.use(initReactI18next)\n    .init(initialI18NextConfig)\n    .then(() => {\n      return changeLanguage('vi');\n    }),\n  setGlobal<GlobalState>(initialGlobalState),\n])\n  .then(() => {\n    const root: HTMLDivElement = document.getElementById(ROOT_ID) as HTMLDivElement;\n    (root.hasChildNodes() ? ReactDOM.hydrate : ReactDOM.render)(\n      <BrowserRouter>\n        <App routes={routes}/>\n      </BrowserRouter>,\n      root,\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n  });\n","import axios, {AxiosResponse} from 'axios';\nimport {GlobalState, LanguageType} from 'core/config';\nimport i18next from 'i18next';\nimport {join} from 'path';\nimport {setGlobal} from 'reactn';\n\n/**\n * Translate marker\n *\n * @param {string} input\n * @returns {string}\n */\nexport function translate(input: string) {\n  return input;\n}\n\nexport async function changeLanguage(language: LanguageType) {\n  await setGlobal<GlobalState>({\n    loading: true,\n  });\n  await axios.get(join('/i18n', `${language}.json`))\n    .then(async (response: AxiosResponse<any>) => {\n      await i18next.addResource(language, '', '', response.data);\n      await i18next.changeLanguage(language);\n      await setGlobal<GlobalState>({\n        language,\n      });\n    });\n}\n"],"sourceRoot":""}